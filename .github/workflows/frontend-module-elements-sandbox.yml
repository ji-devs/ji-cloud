name: Module - Elements - Sandbox

on:
  push:
    branches: [ sandbox ]
    paths:
    - 'frontend/config/**'
    - 'frontend/ts-utils/**'
    - 'frontend/elements/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo
        uses: actions/checkout@v1

      - name: Extract label
        shell: bash
        run: echo "##[set-output name=label;]$(echo \"[${GITHUB_REF#refs/heads/} - test - elements]\")"
        id: extract_label

      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} starting...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: install npm deps
        run: npm ci
        working-directory: "./frontend/elements"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: test elements
        run: npm run test
        working-directory: "./frontend/elements"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        app: [poster, video, tapping-board, drag-drop, memory, matching, flashcards, card-quiz, cover, resource-cover, find-answer, legacy]
        mode: [edit, play]
    steps:

      - name: checkout repo
        uses: actions/checkout@v1

      - name: Extract label
        shell: bash
        run: echo "##[set-output name=label;]$(echo \"[${GITHUB_REF#refs/heads/} - module/${{ matrix.app }}/${{ matrix.mode }} - elements]\")"
        id: extract_label

      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} starting...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: install npm deps
        run: npm ci
        working-directory: "./frontend/elements"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: build elements
        run: npm run build:sandbox
        working-directory: "./frontend/elements"
        env:
          APP_NAME: "module/${{ matrix.app }}/${{ matrix.mode }}"
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: install google cloud sdk
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: '295.0.0'
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_JSON_KEY_SANDBOX }}

      - name: deploy to google cloud
        run: gsutil -m rsync -d -r frontend/elements/dist/module/${{ matrix.app }}/${{ matrix.mode }} gs://ji-cloud-sandbox-frontend-origin-eu-001/module/${{ matrix.app }}/${{ matrix.mode }}/elements

      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
