name: Storybook - Release

on:
  push:
    branches: [ master ]
    paths:
    - 'frontend/core/js/**'
    - 'frontend/storybook/**'
    - 'frontend/elements/**'

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo
        uses: actions/checkout@v1

      - name: Extract label 
        shell: bash
        run: echo "##[set-output name=label;]$(echo \"[${GITHUB_REF#refs/heads/} - storybook]\")"
        id: extract_label

      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} starting...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: install build utils deps
        run: npm install
        working-directory: "./frontend/build-utils"
      
      - name: install element deps
        run: npm install
        working-directory: "./frontend/elements"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: test elements 
        run: npm run test 
        working-directory: "./frontend/elements"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: install npm deps
        run: npm install
        working-directory: "./frontend/storybook"
        env: 
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: build 
        run: npm run storybook:build:release
        working-directory: "./frontend/storybook"
        env:
          LOCAL_CDN_FRONTEND_DIR: ${{ github.workspace }}/frontend
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: deploy to firebase
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --project ji-cloud --only hosting:ji-cloud-storybook
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
