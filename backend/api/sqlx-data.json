{
  "db": "PostgreSQL",
  "029540ace163666c276ac5f1a3f9eff2b277c6d73d35cbc20cab7d0b3ce73698": {
    "query": "\n        select style_id as \"id: AnimationStyleId\", display_name, animation_style.created_at, updated_at\n        from animation_style\n            left join style on animation_style.style_id = style.id\n        order by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AnimationStyleId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "02c99d434bef7ea8602e6e462c5e93d9a0e11f47771b10b90d9482e79c18cfb0": {
    "query": "delete from web_media_library_url where media_url = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "041c763ec559907841f70e45f627d3864a9e9fef4929d6b96327064617a2f5ec": {
    "query": "select exists(select 1 from user_profile where user_id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "057b149eb5228fe5d7cc80d65f7b7183cd2ba8727d19230f3603096a0ebd26f3": {
    "query": "\nselect id as \"id: GoalId\", display_name, created_at, updated_at from \"goal\"\norder by index\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: GoalId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "07c23d4be4038602fadd286c040a438b0366a8308e634d0ef4f5325c7b07b225": {
    "query": "\n            update image_tag set index = $2 where index = $1\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "07cf047f5e186c7593d52a658a6451521df4ac14b945c6a99b48f01c4db84cbb": {
    "query": "\nselect id                                                                 as \"id: CategoryId\",\n       name,\n       created_at,\n       updated_at,\n       (select count(*)::int8 from image_category where category_id = id) as \"image_count!\",\n       (select count(*)::int8 from jig_category where category_id = id) as \"jig_count!\"\n\nfrom category\n         inner join unnest($1::uuid[]) with ordinality t(id, ord) USING (id)\norder by t.ord\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: CategoryId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "image_count!",
          "type_info": "Int8"
        },
        {
          "ordinal": 5,
          "name": "jig_count!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        false,
        false,
        false,
        true,
        null,
        null
      ]
    }
  },
  "085304fd00f042843830c03dab547f7547aad3b4f611d26beb5ec22b583686d8": {
    "query": "\nselect color\nfrom user_color\nwhere user_id = $1\norder by index\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "color",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "09235acdd936537b2a819b15b7aed2df73de16cf7d6b685873f52e4b6d3a7a4d": {
    "query": "\ninsert into category (index, parent_id, name)\nVALUES((select count(*)::int2 from category where parent_id is not distinct from $1), $1, $2)\nreturning index, id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 1,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "0978a2ae9cbe0c16d58c15229324bad8325b60d9128b982a6476980be6965677": {
    "query": "\nupdate category\nset updated_at = now(),\n    index = least((select count(*)::int2 from category c where c.parent_id is not distinct from parent_id), $1)\nwhere id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "0a1f9e5fee4b10a173b8723976cecfb920f90a4828d723abb14f6e0215cf880b": {
    "query": "select exists(select 1 from locale_entry where id = $1 for update) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "0d33ddd6d34bf4755b8ff298de37d678fc3d79222c8d193dc06d1e8fe25b2354": {
    "query": "insert into user_email (user_id, email) values ($1, $2::text)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "0db02aca55bd8f7c7ecdf168ac6d80c6a556ebf2efc5cdafe0afee57a49aeff1": {
    "query": "\nselect id,  kind as \"kind: AnimationKind\"\nfrom animation_metadata\ninner join global_animation_upload on animation_metadata.id = global_animation_upload.animation_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of global_animation_upload\nfor share of animation_metadata\nskip locked\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind: AnimationKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "0eaa3162be77943a44df9ba08acf627d0f82b1b11b5486710ccfc445691b8a5f": {
    "query": "\nselect\n    id as \"id: u32\",\n    bundle_id,\n    section,\n    item_kind_id,\n    english,\n    hebrew,\n    status as \"status: EntryStatus\",\n    zeplin_reference,\n    comments,\n    in_app, \n    in_element, \n    in_mock\nfrom locale_entry\nwhere id = $1\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: u32",
          "type_info": "Int4"
        },
        {
          "ordinal": 1,
          "name": "bundle_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 2,
          "name": "section",
          "type_info": "Text"
        },
        {
          "ordinal": 3,
          "name": "item_kind_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 4,
          "name": "english",
          "type_info": "Text"
        },
        {
          "ordinal": 5,
          "name": "hebrew",
          "type_info": "Text"
        },
        {
          "ordinal": 6,
          "name": "status: EntryStatus",
          "type_info": "Int2"
        },
        {
          "ordinal": 7,
          "name": "zeplin_reference",
          "type_info": "Text"
        },
        {
          "ordinal": 8,
          "name": "comments",
          "type_info": "Text"
        },
        {
          "ordinal": 9,
          "name": "in_app",
          "type_info": "Bool"
        },
        {
          "ordinal": 10,
          "name": "in_element",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "in_mock",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      },
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false
      ]
    }
  },
  "0f15170b401de47fa6e6ec802a12a8c00412902a4d3bf942897c8bb8e41f44fa": {
    "query": "insert into image_upload (image_id) values($1)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "1011937f14e650f4468f544ba25371e055e8bef4b55f3b6183725fe9309d28d4": {
    "query": "\ninsert into jig_affiliation(jig_id, affiliation_id)\nselect $1, affiliation_id from jig_affiliation where jig_id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "1082caa76c50d662add789abc85cdb108355e7e8660c7da1b5aab9239f9acb7e": {
    "query": "\ninsert into user_email (user_id, email)\nselect session.user_id, user_auth_basic.email\nfrom session\ninner join user_auth_basic on user_auth_basic.user_id = session.user_id\nwhere \n    session.token = $1 and\n    session.expires_at > now() and\n    (session.scope_mask & $2) = $2\nreturning user_id\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "124802b593631b117b5b2e1d2eb43712d579be04d5b218f7c19f382f3fe5dcca": {
    "query": "\ninsert into locale_entry (bundle_id, section, item_kind_id, english, hebrew, status, zeplin_reference, comments, in_app, in_element, in_mock)\nvalues ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\nreturning id\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Uuid",
          "Text",
          "Text",
          "Int2",
          "Text",
          "Text",
          "Bool",
          "Bool",
          "Bool"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "126e08105a23b5307bb59af3363cd531195cf690ad14bba8da23b4fd2eec96c1": {
    "query": "\ninsert into animation_metadata (name, description, is_premium, publish_at, kind, looping) values ($1, $2, $3, $4, $5, $6)\nreturning id as \"id: AnimationId\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AnimationId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Bool",
          "Timestamptz",
          "Int2",
          "Bool"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "12733111814b439e48d7e9f8ce720e88382a2e0a92dc6ec1dc077c09ad4a47a9": {
    "query": "select exists (select 1 from \"user\" where id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "137a46c39e9037a81b12017740d3aba9c8a9971f2ee4d71cb83f3f82d50057a3": {
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from jig where jig.id = $4 and jig.author_id <> $1)\n) as \"authed!\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "authed!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "14e04c79d3254b14626d37e0f84a6b695e144dbd1b5064a104b6faa653c81241": {
    "query": "\ninsert into jig\n    (display_name, creator_id, author_id, publish_at, language, description, direction)\nvalues ($1, $2, $2, $3, $4, $5, $6)\nreturning id\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Uuid",
          "Timestamptz",
          "Text",
          "Text",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "16b8e7596de9c8c57e8a50d4b6788e6d7874603ce815762fae2380223a4ddfc0": {
    "query": "select id as \"id: AudioId\" from user_audio_library order by created_at desc",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AudioId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "1781983a4042cb8447163d98ee232c71d24ef75c29ea58219fc7604d95780767": {
    "query": "select id, display_name as name from locale_bundle order by created_at",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "1920891993d8927a88d3fc291f1b99e47d8826748b92810b34f1f637f07726ad": {
    "query": "select index as \"index: i16\" from image_tag where index = $1 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index: i16",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "19e13d35722d768bfabd2104aaabd88c7c6b7436ac230485dfe370a6b4609aee": {
    "query": "insert into user_auth_google (user_id, google_id) values ($1, $2)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "1a8b1e8b534e0c03972838146a54d715f11f647be57465718d61defdd7af242d": {
    "query": "update image_tag set display_name = $2 where index = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "1c7400d27c33a6b7204302b5cf2ced8fb445de00304be5b424133f3b7afbf1cb": {
    "query": "insert into user_auth_basic (user_id, email, password) values ($1, $2::text, $3)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "1d33e48e1daaebfebb7323de5637b8a1102d4874c0fa7e3101e08310c21894b9": {
    "query": "\n        select style_id as \"id: ImageStyleId\", display_name, image_style.created_at, updated_at\n        from image_style\n            left join style on image_style.style_id = style.id\n        order by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageStyleId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "1d746c9230859f4c45b71571b3a4c3884929165504fb9f95b622e8ec907487de": {
    "query": "select language from user_profile where user_id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "language",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "1e615fdd598c2e33192d23e3320cf6985e3d9a43ec58fbef8c24f92c79a66717": {
    "query": "\nupdate user_recent_image\nset last_used = now()\nwhere user_id = $1 and image_id = $2\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "1f632d95656642bf59d0e5223e62370d4bb13f7bdc65cb3aa9171e6b39114c6d": {
    "query": "select uploaded_at from image_upload where image_id = $1 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "uploaded_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        true
      ]
    }
  },
  "1f8df54bb87c543c4a975eb72c8c981ecd033664f68e66a2caff692ac30c14c3": {
    "query": "\nupdate category\nset parent_id = $1,\n    updated_at = now(),\n    index = (select count(*)::int2 from category where parent_id is not distinct from $1)\nwhere id = $2\nreturning index\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "1faa63098267504c5bf0c38977e850dc649dd5e357d7bfe6f893eeb03aafff5f": {
    "query": "\nselect \n    id as \"id: ModuleId\",\n    contents as \"body\",\n    kind as \"kind: ModuleKind\",\n    is_complete as \"is_complete\"\nfrom jig_module\nwhere jig_id = $1 and (id is not distinct from $2 or index is not distinct from $3)\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ModuleId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "body",
          "type_info": "Jsonb"
        },
        {
          "ordinal": 2,
          "name": "kind: ModuleKind",
          "type_info": "Int2"
        },
        {
          "ordinal": 3,
          "name": "is_complete",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        false,
        false,
        false,
        false
      ]
    }
  },
  "1fecc2613bdeb1cb5ef0e88661eb5a43f995623a28c26cf77cb01e50a7c9ebb7": {
    "query": "select exists(select 1 from \"user_scope\" where user_id = $1 and (scope = $2 or scope = $3)) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "21a74b49a0bc1fef8a461d87e9596df3418c161536cb490f6cbccf511c0ae3fe": {
    "query": "update web_media_library set uploaded_at = now() where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "2266d295d10564e03aeee172cc27e8ba9012753c1514649b3a83244750c1a1eb": {
    "query": "update web_media_library set uploaded_at = now(), updated_at = now() where kind = $1 and id = $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "23873843756ff7baeccd6cae63c9d074287664e7bdfad98ee684de92962f1a88": {
    "query": "\ninsert into jig_age_range(jig_id, age_range_id)\nselect $1, age_range_id from jig_age_range where jig_id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "2493076ad606463154fd13635bd6c37e9ef3044edc2ef2c0214cff99ed507200": {
    "query": "\nupdate jig\nset audio_background = $2, updated_at = now()\nwhere id = $1 and $2 is distinct from audio_background\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "254234fc9c471f3012eaf52ac8bd18308710e2b0675de50bd433d28768997d45": {
    "query": "\nselect\n    url as \"url!: String\"\nfrom jig_additional_resource\nwhere jig_id = $1 and id = $2\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "url!: String",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "2968c111bb7c6cd6a2974b52a5b80e4cf7fd4264cc519edcd68b2b6779a4ca2b": {
    "query": "delete from user_image_library where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "2f543f437b0d296a8b9263739f1cbba78aab12d93475a5bb013776da3dfab539": {
    "query": "\nselect exists(select 1\nfrom user_image_library\ninner join user_image_upload on user_image_library.id = user_image_upload.image_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of user_image_upload\nfor share of user_image_library\nskip locked\n) as \"exists!\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "2fc15a774a3c774d8fbe0e1c9479a021c7491224421b3d51a739126b2f38a252": {
    "query": "\nupdate image_metadata\nset name        = coalesce($2, name),\n    description = coalesce($3, description),\n    is_premium  = coalesce($4, is_premium),\n    updated_at  = now()\nwhere id = $1\n  and (($2::text is not null and $2 is distinct from name) or\n       ($3::text is not null and $3 is distinct from description) or\n       ($4::boolean is not null and $4 is distinct from is_premium))",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text",
          "Bool"
        ]
      },
      "nullable": []
    }
  },
  "30e211c77af70b7a52d9ffde24d7a442e3565e2135840cb8d2646bb7fa048509": {
    "query": "\nselect id,\n       kind as \"kind: MediaKind\",\n       created_at,\n       updated_at,\n       array(select media_url from web_media_library_url where media_id = $1) as \"urls!\"\nfrom web_media_library\nwhere id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind: MediaKind",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "urls!",
          "type_info": "TextArray"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        false,
        false,
        true,
        null
      ]
    }
  },
  "3246ffd2a6be78dd21c837147f5eaa58fefa4cc0474b3c9a0e94d8f8d158b41c": {
    "query": "\nselect\n    user_id,\n    password,\n    exists(select 1 from user_profile where user_id = user_auth_basic.user_id) as \"has_profile!\",\n    exists(select 1 from user_email where user_id = user_auth_basic.user_id) as \"has_verified_email!\"\nfrom user_auth_basic where email = $1::text\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "password",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "has_profile!",
          "type_info": "Bool"
        },
        {
          "ordinal": 3,
          "name": "has_verified_email!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false,
        false,
        null,
        null
      ]
    }
  },
  "32bbb9dc2446795abc480d132b14960dc9b5d636d4b95d75400cffae27762155": {
    "query": "\n            select id as \"id: AffiliationId\", display_name, created_at, updated_at from affiliation\n            order by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AffiliationId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "33b3def525f80ae097847489feda1bcb7cc23f2b24ae237dbb93e17802d5fb74": {
    "query": "update category set name = $1, updated_at = now() where id = $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "358be42830754773bfbc7b99f3df8e7ce3276e4e9f15650a971f55c0be21c377": {
    "query": "\ninsert into jig (display_name, parents, creator_id, author_id, language, description, direction, display_score, theme,\n                 audio_background, audio_feedback_positive, audio_feedback_negative)\nselect display_name,\n       array_append(parents, id),\n       $2 as creator_id,\n       $2 as author_id,\n       language,\n       description,\n       direction,\n       display_score,\n       theme,\n       audio_background,\n       audio_feedback_positive,\n       audio_feedback_negative\nfrom jig\nwhere id = $1\nreturning id as \"id: JigId\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "399f537a8091d51635c2cd32bf16449c26317d1f56c576064968a2bfd57953e0": {
    "query": "\nupdate locale_entry\nset\n    bundle_id = coalesce(bundle_id, $2),\n    item_kind_id = coalesce($3, item_kind_id),\n    english = coalesce($4, english),\n    hebrew = coalesce($5, hebrew),\n    status = coalesce($6, status),\n    in_app = coalesce($7, in_app),\n    in_element = coalesce($8, in_element),\n    in_mock = coalesce($9, in_mock),\n    section = case when $10 then $11 else section end,\n    zeplin_reference = case when $12 then $13 else zeplin_reference end,\n    comments = case when $14 then $15 else comments end\nwhere id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int4",
          "Uuid",
          "Uuid",
          "Text",
          "Text",
          "Int2",
          "Bool",
          "Bool",
          "Bool",
          "Bool",
          "Text",
          "Bool",
          "Text",
          "Bool",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "39a8d9f6b645305b1a6282c110154c481dcdd211fabf7944655438c13b55511c": {
    "query": "update category set name = $1 where id = $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "3cfa772cac043b6accabfde5a1fd872956182b08d67b5a9ab2e35a6bb95405b3": {
    "query": "delete from session where user_id = $1 and (scope_mask | $2) <> 0",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "3f7ad7f5eb03139f9584aa6928a1b805b4f8908a1df023a12a7cf8cba3d56d26": {
    "query": "delete from session where token = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "3fba9bb8028fc134499ea67c056c4018692bde07b26c5d578c54017fec5f95dd": {
    "query": "update user_audio_library set uploaded_at = now() where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "4185902c16ca74f35ce932d41c8c6d9d16c49d6d1937cb30d6966b0f0dd6cb18": {
    "query": "\nselect draft_id as \"id: JigId\" from jig_draft_join where live_id = $1\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "43fe8702f219dcd783e0f253f7dfe3c1786829a7dc2d043a8e79eb3deaf061e9": {
    "query": "\nupdate user_font\nset index = index - 1\nwhere index > $2 and user_id = $1\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "44559bdf72e9071b9dd849039e4ae6ccf90281a3e751b1bd2ff5ecf18132e53e": {
    "query": "insert into session (token, user_id, impersonator_id, expires_at, scope_mask) values ($1, $2, $3, $4, $5)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid",
          "Uuid",
          "Timestamptz",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "457d3b5ddc3734e94b4a4d254cd7f256fa7b09faed0d8361ce28503547161fe7": {
    "query": "\nupdate jig\nset display_name     = coalesce($2, display_name),\n    author_id        = coalesce($3, author_id),\n    language         = coalesce($4, language),\n    description      = coalesce($5, description),\n    is_public        = coalesce($6, is_public),\n    direction        = coalesce($7, direction),\n    display_score    = coalesce($8, display_score),\n    theme            = coalesce($9, theme),\n    updated_at       = now()\nwhere id = $1\n  and (($2::text is not null and $2 is distinct from display_name) or\n       ($3::uuid is not null and $3 is distinct from author_id) or\n       ($4::text is not null and $4 is distinct from language) or\n       ($5::text is not null and $5 is distinct from description) or\n       ($6::bool is not null and $6 is distinct from is_public) or\n       ($7::smallint is not null and $7 is distinct from direction) or\n       ($8::bool is not null and $8 is distinct from display_score) or\n       ($9::smallint is not null and $9 is distinct from theme))\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Uuid",
          "Text",
          "Text",
          "Bool",
          "Int2",
          "Bool",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "47f87006d700bed96cbf873d8addacbd9c160cf71e5cd0a4543b1fd7754d563d": {
    "query": "\ndelete from user_recent_image\nwhere user_id = $1 and image_id = $2\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "4878ce8469a9ea044ceb5804770c99b8d587b7589e7d8d679cc0a5b19c103d0b": {
    "query": "\ninsert into jig_module (jig_id, kind, contents, index)\nvalues ($1, $2, $3, (select count(*) from jig_module where jig_id = $1))\nreturning id, \"index\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "49b0c59722a23a79782dd362cb1b8bff55efa01e28eae1991ede311e776ffe8b": {
    "query": "\ndelete from jig where id = $1 returning publish_at as \"publish_at: DateTime<Utc>\", is_public as \"is_public: bool\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "publish_at: DateTime<Utc>",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 1,
          "name": "is_public: bool",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        true,
        false
      ]
    }
  },
  "4a4df97182cfdf43a33d6f6c3f9374dd5e7c903823c9a4b6eeda1b68fefeec0b": {
    "query": "\nselect  \n    id as \"id: JigId\",\n    display_name,\n    creator_id,\n    author_id,\n    publish_at,\n    updated_at,\n    language,\n    description,\n    is_public,\n    direction as \"direction: TextDirection\",\n    display_score,\n    theme as \"theme: ThemeId\",\n    audio_background as \"audio_background!: Option<AudioBackground>\",\n    array(select row(unnest(audio_feedback_positive))) as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\", -- TODO: fix ugly!\n    array(select row(unnest(audio_feedback_negative))) as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n    array(\n        select row (id, kind)\n        from jig_module\n        where jig_id = jig.id\n        order by \"index\"\n    ) as \"modules!: Vec<(ModuleId, ModuleKind)>\",\n    array(select row(goal_id) from jig_goal where jig_id = jig.id) as \"goals!: Vec<(GoalId,)>\",\n    array(select row(category_id) from jig_category where jig_id = jig.id) as \"categories!: Vec<(CategoryId,)>\",\n    array(select row(affiliation_id) from jig_affiliation where jig_id = jig.id) as \"affiliations!: Vec<(AffiliationId,)>\",\n    array(select row(age_range_id) from jig_age_range where jig_id = jig.id) as \"age_ranges!: Vec<(AgeRangeId,)>\",\n    array(select row(id) from jig_additional_resource where jig_id = jig.id) as \"additional_resources!: Vec<(AdditionalResourceId,)>\"\nfrom jig\nwhere \n    (publish_at < now() is not distinct from $1 or $1 is null)\n    and (author_id is not distinct from $3 or $3 is null)\n    and jig.id not in (select draft_id as id from jig_draft_join) -- check explain. is this slow?\norder by coalesce(updated_at, created_at) desc\nlimit 20 offset 20 * $2\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "creator_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 3,
          "name": "author_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 4,
          "name": "publish_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "language",
          "type_info": "Text"
        },
        {
          "ordinal": 7,
          "name": "description",
          "type_info": "Text"
        },
        {
          "ordinal": 8,
          "name": "is_public",
          "type_info": "Bool"
        },
        {
          "ordinal": 9,
          "name": "direction: TextDirection",
          "type_info": "Int2"
        },
        {
          "ordinal": 10,
          "name": "display_score",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "theme: ThemeId",
          "type_info": "Int2"
        },
        {
          "ordinal": 12,
          "name": "audio_background!: Option<AudioBackground>",
          "type_info": "Int2"
        },
        {
          "ordinal": 13,
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 14,
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 15,
          "name": "modules!: Vec<(ModuleId, ModuleKind)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 16,
          "name": "goals!: Vec<(GoalId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 17,
          "name": "categories!: Vec<(CategoryId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 18,
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 19,
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 20,
          "name": "additional_resources!: Vec<(AdditionalResourceId,)>",
          "type_info": "RecordArray"
        }
      ],
      "parameters": {
        "Left": [
          "Bool",
          "Int4",
          "Uuid"
        ]
      },
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ]
    }
  },
  "4b59765bf5f97002c95e723a2d831e75df863ce1f73be3c0cc7714aee57b54a7": {
    "query": "\nselect exists(\n        select 1\n        from user_font\n        where user_id = $1\n            and index = $2\n        for update\n) as \"exists!\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "4cc40dca336bf39c9395b99de18e42ad0876523852d3c625a1c42bfd6a77a845": {
    "query": "with recursive path(id, index, parent_id) as (\n    select id, ord, null::uuid\n    from category\n             inner join unnest(\n            $1::uuid[]) with ordinality t(id, ord)\n                        using (id)\n    union all\n    select c.id, c.index, p.id\n    from path p\n             inner join category c on (c.parent_id = p.id)\n)\nselect distinct id as \"id!\",\n       path.index::int2 as \"index!\",\n       path.parent_id,\n       name,\n       created_at,\n       updated_at,\n       (select count(*) from image_category where category_id = id)::int8 as \"image_count!\",\n       (select count(*)::int8 from jig_category where category_id = id) as \"jig_count!\"\n\nfrom path\n         inner join category using (id);\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id!",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "index!",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "parent_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 3,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 4,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "image_count!",
          "type_info": "Int8"
        },
        {
          "ordinal": 7,
          "name": "jig_count!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        null,
        null,
        null,
        false,
        false,
        true,
        null,
        null
      ]
    }
  },
  "4ece7de8525ff491823831df2bebf0d78e258fe95d1432e01ed0df448d04587f": {
    "query": "\ninsert into user_profile\n    (user_id, username, over_18, given_name, family_name, language, locale, timezone, opt_into_edu_resources, organization, location) \nvalues \n    ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\non conflict (user_id) do update\nset\n    over_18 = $3,\n    given_name = $4,\n    family_name = $5,\n    language = $6,\n    locale = $7,\n    timezone = $8,\n    opt_into_edu_resources = $9,\n    organization = $10,\n    location = $11\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Bool",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Bool",
          "Text",
          "Jsonb"
        ]
      },
      "nullable": []
    }
  },
  "50ff48a8d492e560f61066b5217a70876d23552f79fcb6d43dbbcd5331da14ef": {
    "query": "delete from animation_metadata where id = $1 returning kind as \"kind: AnimationKind\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "kind: AnimationKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "51a40f41372d3ac245973b6c148c56e71684c771e64465cf5c188241d4416d4a": {
    "query": "\nupdate category\nset index = index - 1, updated_at = now()\nwhere index > $1 and index <= $2 is not false and parent_id is not distinct from $3\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "51b5e589811bbe7936757b7247f31485244a2b0f027b6e5ec5a8be1f68bdd24f": {
    "query": "\nupdate jig_module\nset contents = coalesce($3, contents),\n    kind = coalesce($4, kind),\n    is_complete = coalesce($5, is_complete)\nwhere jig_id = $1 and index = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Int2",
          "Bool"
        ]
      },
      "nullable": []
    }
  },
  "536bd460b497959a9f8de8240ab2fcb368eeac0f7a5b125ff9cce16f5e751621": {
    "query": "\nselect count(*) as \"count!: i64\"\nfrom jig\nwhere\n    (publish_at < now() is not distinct from $1 or $1 is null)\n    and (author_id is not distinct from $2 or $2 is null)\n    and id not in (select draft_id as id from jig_draft_join) \n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "count!: i64",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "Bool",
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "539bfa401960f946b1f9dab2156b13e1c5b69fea237777f05c9a26d6adb6caab": {
    "query": "select exists(select 1 from jig_draft_join where draft_id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "5842389dd9a03ba291f04a518e3eccc249eb3664c1ecd12b294de7a81d132a59": {
    "query": "delete from user_audio_library where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "58ed84397822e7790a3c721f37579e8cbe5aa2e6836c533323229873e88e247d": {
    "query": "delete from image_metadata where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "592bc9d7ba082465064276d492d2d72320a0d4a100dc968dcc86ef023bc87c7a": {
    "query": "select exists(select 1 from jig where id = $1 for update) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "5c93016463ec35d37bfff8dabffd2b40256a5b057ecc5eb2c9da2b7d0a75099c": {
    "query": "\nupdate jig_module\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere jig_id = $1 and index between $2 and $3\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "5d39b246259043965846dc0fd205dc25a7a1263d74d2a6451b15c70052ec4844": {
    "query": "delete from image_upload where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "5e4bfa7c86f036663500b75df28a943c55cbc671a2dd296514568680f1b3733f": {
    "query": "\nselect id,\n       kind as \"kind: MediaKind\",\n       created_at,\n       updated_at,\n       array(select media_url from web_media_library_url where media_id = id) as \"urls!\"\nfrom web_media_library\nwhere id = (select media_id from web_media_library_url where media_url = $1)\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind: MediaKind",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "urls!",
          "type_info": "TextArray"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false,
        false,
        false,
        true,
        null
      ]
    }
  },
  "60b0832812a09b331d67eded7a6e1a0d323d66443c0a06b7b7ef2628e9cd1ad2": {
    "query": "select id as \"id: ImageId\" from user_image_library order by created_at desc",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "61b01c313aa1a78e790d69c2d6d2f4f429ac009a2003ee664acd626749de6fe3": {
    "query": "select id as \"id!\",\n    case kind\n        -- PngCanvasImage\n        when 0 then 3\n        -- PngStickerImage\n        when 1 then 0\n    end::int2 \"kind!: MediaKind\", \n    created_at as \"created_at!\",\n    updated_at,\n    uploaded_at,\n    0::int2 as \"library!: MediaLibrary\" -- global\nfrom image_metadata\nleft join image_upload on image_id = id\nunion all\nselect id as \"id!\",\n    case kind\n        -- GifAnimation\n        when 0 then 1\n        -- SpritesheetAnimation\n        when 1 then 2\n    end::int2 \"kind!: MediaKind\", \n    created_at as \"created_at!\",\n    updated_at,\n    uploaded_at,\n    0::int2 as \"library!: MediaLibrary\" -- global\nfrom animation_metadata\nleft join global_animation_upload on animation_id = id\nunion all\nselect id as \"id!\",\n    -- PngStickerImage\n    0::int2 as \"kind!: MediaKind\",\n    created_at as \"created_at!\",\n    updated_at,\n    uploaded_at,\n    1::int2 as \"library!: MediaLibrary\" -- user\nfrom user_image_library\nleft join user_image_upload on image_id = id\nunion all\nselect id as \"id!\",\n    -- Mp3Audio\n    4::int2 as \"kind!: MediaKind\",\n    created_at as \"created_at!\",\n    updated_at,\n    uploaded_at,\n    1::int2 as \"library!: MediaLibrary\" -- user\nfrom user_audio_library\nunion all\nselect id as \"id!\",\n    kind as \"kind!: MediaKind\",\n    created_at as \"created_at!\",\n    updated_at,\n    uploaded_at,\n    2::int2 as \"library!: MediaLibrary\" -- web\nfrom web_media_library\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id!",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind!: MediaKind",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "created_at!",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "uploaded_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "library!: MediaLibrary",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        null,
        null,
        null,
        null,
        null,
        null
      ]
    }
  },
  "63282a245bbfff4db34ea00a9f53cf8f6cbbd26ff4106d3b53f3edf3e48197d0": {
    "query": "\nselect image_id as \"id: ImageId\", media_library as \"library: MediaLibrary\", last_used as \"last_used: DateTime<Utc>\"\nfrom user_recent_image\nwhere user_id = $1\norder by last_used desc\nlimit $2\n            ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "library: MediaLibrary",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "last_used: DateTime<Utc>",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int8"
        ]
      },
      "nullable": [
        false,
        false,
        false
      ]
    }
  },
  "63a9ba01a124f3d9755abb0c3649bc0224d1ac27f4fe3fb52399cde83d266fd0": {
    "query": "\n            select subject_id as \"id: SubjectId\", display_name, created_at, updated_at from subject\n            order by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: SubjectId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "64cfdb8662f781313ee5765279e6d4b9a03cc12c3873a00386e94a1eda9e472b": {
    "query": "\nwith delete as (\n        delete from user_font\n    where user_id = $1 and index = $2\n)\nselect 1 as discard\nfrom user_font\nwhere user_id = $1 and index > $2\nfor update\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "discard",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "65bbbe5cb9eba5f0bf454b10f8b07ccf8eb3f519970d09868b486cbaa7d560a1": {
    "query": "delete from category where id = $1 returning index, parent_id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 1,
          "name": "parent_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        true
      ]
    }
  },
  "69b512127b70875985bb54e50242397b7e362535b1a338276778abde7b695787": {
    "query": "update user_color set color = $3 where user_id = $1 and index = $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int4"
        ]
      },
      "nullable": []
    }
  },
  "6a2fcbea5b62e0a5c0eb65c28769c1b3e70e3376f664d5ad84c864aaef8f0548": {
    "query": "update global_animation_upload set uploaded_at = now(), processing_result = null where animation_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "6a5c310d04f0191c505fbd36421cea1fac0dee024fdf7b750692671f6f9f8555": {
    "query": "delete from jig_module where jig_id = $1 and (id is not distinct from $2 or index is not distinct from $3) returning index",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "6c12895b696ba3fd3c1b05404fd595aef2a3a32f54e91ced393425d09f64612e": {
    "query": "\ninsert into jig_module (\"index\", jig_id, kind, contents)\nselect \"index\", $1 as \"jig_id\", kind, contents\nfrom jig_module where jig_id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "6c4f45accd9f8fafcb6f26bf5a4fe6ec2c1a082585573cc3e1ead7ad9ac0fbee": {
    "query": "\nselect id                                                                 as \"id: CategoryId\",\n       name,\n       created_at,\n       updated_at,\n       (select count(*)::int8 from image_category where category_id = id) as \"image_count!\",\n       (select count(*)::int8 from jig_category where category_id = id) as \"jig_count!\"\nfrom category\nwhere parent_id is null\norder by index\n ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: CategoryId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "image_count!",
          "type_info": "Int8"
        },
        {
          "ordinal": 5,
          "name": "jig_count!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true,
        null,
        null
      ]
    }
  },
  "6db1735f61450670c2ca115000a413f3b2eb9d4874eeec7e749f6243b2db5f7d": {
    "query": "select user_id from user_email where email = $1::text",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "6dcc3e22fd2bb64cec50f447237de2968384af1de326d4b26b8816611f2cc2e5": {
    "query": "select algolia_index_version != $1 as \"outdated!\" from settings",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "outdated!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "6dcfdaef00e74c8841a7ef441acebc555925c6e18d4c784433c9c3c830271292": {
    "query": "select index from jig_module where jig_id = $1 and (id is not distinct from $2 or index is not distinct from $3)",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "6e208fc3bc2f8b325a05f5db6826eb909e13fe012d6070451078d646101e6723": {
    "query": "insert into user_image_upload (image_id) values($1)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "6f2efac54ea432d33d9d1a74ef07c9fb09eb8082a80cf4d36784f480b7eb8bb9": {
    "query": "\ninsert into user_recent_image (user_id, image_id, media_library)\nvalues ($1, $2, $3)\nreturning image_id as \"id: ImageId\", media_library as \"library: MediaLibrary\", last_used as \"last_used: DateTime<Utc>\";\n            ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "library: MediaLibrary",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "last_used: DateTime<Utc>",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        false,
        false,
        false
      ]
    }
  },
  "6f88dced30ef38b92e48c5b78cda75cfc877dff08195c25609ad0f19ddff49cc": {
    "query": "\ninsert into image_metadata (name, description, is_premium, publish_at, kind) values ($1, $2, $3, $4, $5)\nreturning id as \"id: ImageId\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Bool",
          "Timestamptz",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "701de512b57a7bb90c579f09319277ac921dff5152c1fb8a2bc1d8bc0548504a": {
    "query": "\nselect exists(\n        select 1\n        from user_color\n        where user_id = $1\n            and index = $2\n        for update\n) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "706a0aeaa1b6cbffb919b6c1b26cd7dcb14361802b3de0798a4ce3337ce3cc2d": {
    "query": "update jig set last_synced_at = now() where id = any($1)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": []
    }
  },
  "71ea3b30742734dc675123b8d517e0f7f6147f6865118707aa77333fdae87b38": {
    "query": "\nwith new_row as (\n    insert into \"settings\" default values on conflict(singleton) do nothing returning algolia_index_version    \n)\nselect algolia_index_version as \"algolia_index_version!\" from new_row\nunion\nselect algolia_index_version as \"algolia_index_version!\" from \"settings\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "algolia_index_version!",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        null
      ]
    }
  },
  "72b024e92b7f83b7e9fbb725e9955b62d22c676d62a8bbe2ce46be9cb163a991": {
    "query": "update image_upload set uploaded_at = now(), processing_result = null where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "72e3aca05740c8e1615e5e90644ce5edcf661280ab2b72b5f6af4932618ce5ab": {
    "query": "\ninsert into user_audio_library default values\nreturning id as \"id: AudioId\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AudioId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "73b93b6a269a7dec3b8fc929701ed4cb720523847dad00136288ade07321ffe3": {
    "query": "\nselect  \n    id as \"id: JigId\",\n    display_name,\n    creator_id,\n    author_id,\n    publish_at,\n    updated_at,\n    language,\n    description,\n    is_public,\n    direction as \"direction: TextDirection\",\n    display_score,\n    theme as \"theme: ThemeId\",\n    audio_background as \"audio_background!: Option<AudioBackground>\",\n    array(select row(unnest(audio_feedback_positive))) as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\", -- TODO: fix ugly!\n    array(select row(unnest(audio_feedback_negative))) as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n    array(\n        select row (id, kind)\n        from jig_module\n        where jig_id = $1\n        order by \"index\"\n    ) as \"modules!: Vec<(ModuleId, ModuleKind)>\",\n    array(select row(goal_id) from jig_goal where jig_id = $1) as \"goals!: Vec<(GoalId,)>\",\n    array(select row(category_id) from jig_category where jig_id = $1) as \"categories!: Vec<(CategoryId,)>\",\n    array(select row(affiliation_id) from jig_affiliation where jig_id = jig.id) as \"affiliations!: Vec<(AffiliationId,)>\",\n    array(select row(age_range_id) from jig_age_range where jig_id = jig.id) as \"age_ranges!: Vec<(AgeRangeId,)>\",\n    array(select row(id) from jig_additional_resource where jig_id = $1) as \"additional_resources!: Vec<(AdditionalResourceId,)>\"\nfrom jig\nwhere id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "creator_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 3,
          "name": "author_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 4,
          "name": "publish_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "language",
          "type_info": "Text"
        },
        {
          "ordinal": 7,
          "name": "description",
          "type_info": "Text"
        },
        {
          "ordinal": 8,
          "name": "is_public",
          "type_info": "Bool"
        },
        {
          "ordinal": 9,
          "name": "direction: TextDirection",
          "type_info": "Int2"
        },
        {
          "ordinal": 10,
          "name": "display_score",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "theme: ThemeId",
          "type_info": "Int2"
        },
        {
          "ordinal": 12,
          "name": "audio_background!: Option<AudioBackground>",
          "type_info": "Int2"
        },
        {
          "ordinal": 13,
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 14,
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 15,
          "name": "modules!: Vec<(ModuleId, ModuleKind)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 16,
          "name": "goals!: Vec<(GoalId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 17,
          "name": "categories!: Vec<(CategoryId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 18,
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 19,
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 20,
          "name": "additional_resources!: Vec<(AdditionalResourceId,)>",
          "type_info": "RecordArray"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ]
    }
  },
  "74b512fde797ad5d92d4a9fca1ce7d546e799815ed95169ad0591de8db129393": {
    "query": "\nselect user_id\nfrom user_auth_basic\nwhere\n    email = $1::text and\n    not exists(select 1 from user_email where email = $1)\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "760185608bd03a9a30aba9100ecc18e170aed0b1008c5f51ad0c7c6f564b090e": {
    "query": "select user_id from user_auth_google where google_id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "763b624c44e2aa3d267be1fc384f4f066c45f9ea71d5a9ee18f8a215a7fe4b30": {
    "query": "\nselect\n    id as \"id: JigId\",\n    display_name,\n    creator_id,\n    author_id,\n    publish_at,\n    updated_at,\n    language,\n    description,\n    is_public,\n    direction as \"direction: TextDirection\",\n    display_score,\n    theme as \"theme: ThemeId\",\n    audio_background as \"audio_background!: Option<AudioBackground>\",\n    array(select row(unnest(audio_feedback_positive))) as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\", -- TODO: fix ugly!\n    array(select row(unnest(audio_feedback_negative))) as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n    array(\n        select row (id, kind)\n        from jig_module\n        where jig_id = jig.id\n        order by \"index\"\n    ) as \"modules!: Vec<(ModuleId, ModuleKind)>\",\n    array(select row(goal_id) from jig_goal where jig_id = jig.id) as \"goals!: Vec<(GoalId,)>\",\n    array(select row(category_id) from jig_category where jig_id = jig.id) as \"categories!: Vec<(CategoryId,)>\",\n    array(select row(affiliation_id) from jig_affiliation where jig_id = jig.id) as \"affiliations!: Vec<(AffiliationId,)>\",\n    array(select row(age_range_id) from jig_age_range where jig_id = jig.id) as \"age_ranges!: Vec<(AgeRangeId,)>\",\n    array(select row(id) from jig_additional_resource where jig_id = jig.id) as \"additional_resources!: Vec<(AdditionalResourceId,)>\"\nfrom jig\ninner join unnest($1::uuid[]) with ordinality t(id, ord) USING (id)\norder by t.ord\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "creator_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 3,
          "name": "author_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 4,
          "name": "publish_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "language",
          "type_info": "Text"
        },
        {
          "ordinal": 7,
          "name": "description",
          "type_info": "Text"
        },
        {
          "ordinal": 8,
          "name": "is_public",
          "type_info": "Bool"
        },
        {
          "ordinal": 9,
          "name": "direction: TextDirection",
          "type_info": "Int2"
        },
        {
          "ordinal": 10,
          "name": "display_score",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "theme: ThemeId",
          "type_info": "Int2"
        },
        {
          "ordinal": 12,
          "name": "audio_background!: Option<AudioBackground>",
          "type_info": "Int2"
        },
        {
          "ordinal": 13,
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 14,
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 15,
          "name": "modules!: Vec<(ModuleId, ModuleKind)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 16,
          "name": "goals!: Vec<(GoalId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 17,
          "name": "categories!: Vec<(CategoryId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 18,
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 19,
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "type_info": "RecordArray"
        },
        {
          "ordinal": 20,
          "name": "additional_resources!: Vec<(AdditionalResourceId,)>",
          "type_info": "RecordArray"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ]
    }
  },
  "7f13eff963b91007e55a4a80fc4e32b866781dab9548bb01db0d20a12cb664ed": {
    "query": "\nselect id as \"id: TagId\", display_name, index from \"image_tag\"\norder by index\n            ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: TagId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false
      ]
    }
  },
  "80e114ec0b610550438d73280239678e249985eb19134c9917b39b34ead292c6": {
    "query": "select id as \"id: ImageId\" from user_image_library where id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "81d346d41686f94b2bbb1477d0e7e407d67e12bb2c2cccfb474c536ddd8f0eeb": {
    "query": "update user_image_upload set processed_at = now(), processing_result = false where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "8313a67bf42c71861a5f4935f1cd53fda46e3da275e46cdaa266a785595b8cd1": {
    "query": "select id as \"id: AudioId\" from user_audio_library where id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AudioId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "83a19967d79935450a0c984ec7c3cde0626f3347618e8dd1d84e883f73ae2898": {
    "query": "update image_metadata set last_synced_at = now() where id = any($1)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": []
    }
  },
  "84f05210fc0d761dda68090751705c6448814262eab6eae4c3c1fc04290cf357": {
    "query": "insert into web_media_library (\"hash\", kind) values($1, $2) returning id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "8731b3b67aae4e9ceaab3893d91215f857dbe9642a301409ebc50fc1860342b6": {
    "query": "\nselect\n    id as \"id: u32\",\n    bundle_id,\n    section,\n    item_kind_id,\n    english,\n    hebrew,\n    status as \"status: EntryStatus\",\n    zeplin_reference,\n    comments,\n    in_app, \n    in_element, \n    in_mock\nfrom locale_entry\nwhere $2 or bundle_id = any($1)\norder by id\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: u32",
          "type_info": "Int4"
        },
        {
          "ordinal": 1,
          "name": "bundle_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 2,
          "name": "section",
          "type_info": "Text"
        },
        {
          "ordinal": 3,
          "name": "item_kind_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 4,
          "name": "english",
          "type_info": "Text"
        },
        {
          "ordinal": 5,
          "name": "hebrew",
          "type_info": "Text"
        },
        {
          "ordinal": 6,
          "name": "status: EntryStatus",
          "type_info": "Int2"
        },
        {
          "ordinal": 7,
          "name": "zeplin_reference",
          "type_info": "Text"
        },
        {
          "ordinal": 8,
          "name": "comments",
          "type_info": "Text"
        },
        {
          "ordinal": 9,
          "name": "in_app",
          "type_info": "Bool"
        },
        {
          "ordinal": 10,
          "name": "in_element",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "in_mock",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Bool"
        ]
      },
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false
      ]
    }
  },
  "87c78754f010d2cd7d18cc1024071cfd6d00983eb0d01153d7b4ad368ba20f71": {
    "query": "\nselect exists(select 1 from user_scope where user_id = $1 and scope = any($2)) as \"authed!\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "authed!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "8b32471db2fb8011d2d247dead069cf5a02f6c57c34be037b9b7a0894be6f981": {
    "query": "select count(*) - 1 as \"max_index!\" from jig_module where jig_id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "max_index!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "8b5a14ecfd4982d3bc52a06e56d522b2ab65afecc898e2de015adcaa2b039a93": {
    "query": "select exists(select 1 from user_auth_basic where email = lower($1)) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "8d817d6384c10aa3eddcbe4b990c830b69970f782ad4ecdd5af9380994dfef0c": {
    "query": "\nselect media_id,\n       kind as \"kind: MediaKind\"\nfrom web_media_library_url\ninner join web_media_library on id = media_id\nwhere media_url = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "media_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind: MediaKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "8e91b63b58e15b8c898573ffd729ea87968e8d2efa24ee4d855ac357c193087b": {
    "query": "insert into web_media_library_url (media_id, media_url) values ($1, $2) on conflict (media_id, media_url) do nothing",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "8f373a91b6dab0b7b89a03f5479b2ebe6dd2657bc06ebbe3aca37b1bac312f0e": {
    "query": "\nwith cte as (\n    insert into user_font\n    (user_id, name, index)\n    values ($1, $2, (select count(*) from user_font where user_id = $1)) returning name\n), names as (\n    select name\n    from user_font\n    where user_id = $1\n    order by index\n)\nselect name as \"name!\" from names\nunion all\nselect name as \"name!\" from cte\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "name!",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "8ff3594259d04d0786b415f1e6577c3252ad2779bf0a9336d3ea985d54d78556": {
    "query": "\nselect parent_id, index from category where id = $1 for update\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "parent_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        true,
        false
      ]
    }
  },
  "90602fc9ca11e63510d2c997d8659d0c69acc67f316f44d7b50eb9ab3b812468": {
    "query": "\ndelete from jig_additional_resource\nwhere jig_id = $1 and id = $2\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "935cf4ce421493abb692f656fec3ce0ab905299cf9c11ea7fa4bfcec718dd779": {
    "query": "\nselect id,\n    display_name as \"name\",\n    array((select affiliation_id from jig_affiliation where jig_id = jig.id)) as \"affiliations!\",\n    array((select affiliation.display_name\n           from affiliation\n                    inner join jig_affiliation on affiliation.id = jig_affiliation.affiliation_id\n           where jig_affiliation.jig_id = jig.id))                            as \"affiliation_names!\",\n    array((select age_range_id from jig_age_range where jig_id = jig.id))     as \"age_ranges!\",\n    array((select age_range.display_name\n           from age_range\n                    inner join jig_age_range on age_range.id = jig_age_range.age_range_id\n           where jig_age_range.jig_id = jig.id))                              as \"age_range_names!\",\n    array((select goal_id from jig_goal where jig_id = jig.id))     as \"goals!\",\n    array((select goal.display_name\n           from goal\n                    inner join jig_goal on goal.id = jig_goal.goal_id\n           where jig_goal.jig_id = jig.id))                              as \"goal_names!\",\n    array((select category_id from jig_category where jig_id = jig.id))       as \"categories!\",\n    array((select name\n           from category\n                    inner join jig_category on category.id = jig_category.category_id\n           where jig_category.jig_id = jig.id))                               as \"category_names!\",\n    (publish_at < now() is true) as \"is_published!\",\n    author_id as \"author\"\nfrom jig\nwhere\n    last_synced_at is null or\n    (updated_at is not null and last_synced_at < updated_at) or\n    (publish_at < now() is true and last_synced_at < publish_at)\nlimit 100\nfor no key update skip locked;\n     ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "affiliations!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 3,
          "name": "affiliation_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 4,
          "name": "age_ranges!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 5,
          "name": "age_range_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 6,
          "name": "goals!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 7,
          "name": "goal_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 8,
          "name": "categories!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 9,
          "name": "category_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 10,
          "name": "is_published!",
          "type_info": "Bool"
        },
        {
          "ordinal": 11,
          "name": "author",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        true
      ]
    }
  },
  "93d7d603f686856e0d93b5d1a99b75e6d829c974243d423c907e1c6a95b802f5": {
    "query": "\nselect id,\n       parent_id,\n       name,\n       index,\n       created_at,\n       updated_at,\n       (select count(*) from image_category where category_id = id)::int8 as \"image_count!\",\n       (select count(*) from jig_category where category_id = id)::int8 as \"jig_count!\"\nfrom category\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "parent_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 2,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 3,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 4,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "image_count!",
          "type_info": "Int8"
        },
        {
          "ordinal": 7,
          "name": "jig_count!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        true,
        null,
        null
      ]
    }
  },
  "95cc52570b87e1413c93a9588cee5f081824028c269803aba12a578cada7395b": {
    "query": "select user_id from user_auth_basic where user_id <> $1 and email = $2 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          {
            "Custom": {
              "name": "citext",
              "kind": "Simple"
            }
          }
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "974e49b8fa518e9402ae2494147cd25953503851952b4ba97d635a2aeb5bd729": {
    "query": "\nwith delete as (\n        delete from user_color\n    where user_id = $1 and index = $2\n)\nselect 1 as discard\nfrom user_color\nwhere user_id = $1 and index > $2\nfor update\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "discard",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "9baca0e0cc5e462bafb40e834a5c894d9f02dbb61ec75d81609cc32c946f5857": {
    "query": "select exists(select 1 from image_metadata where id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "9e3fc9a239cb6ad98628e2f2bf16be1ab3d6db751bb97bedaaf004500f6bcffc": {
    "query": "select exists(select 1 from global_animation_upload where animation_id = $1 for no key update) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "9fc35349eacb6647e398e2756c8229e73c6b7fbef00988de47589866241487db": {
    "query": "update image_upload set processed_at = now(), processing_result = false where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "a0d48e53ffcf69c3a2fbaa6b994e9ad3636a4f6b0f0fbe9850492693c8e1c6e9": {
    "query": "\nselect user_id\nfrom session\nwhere \n    token = $1 and\n    expires_at < now() is not true and\n    (scope_mask & $2) = $2 and\n    (impersonator_id is null or exists(select 1 from user_scope where user_scope.user_id = impersonator_id and user_scope.scope = $3))\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "a16036b8f5f8431ae1f10fb2ce15ff302ff8667c9bf5d9a769905a3fad069498": {
    "query": "select exists(select 1 from image_upload where image_id = $1 for no key update) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "a16eb62a07ad20ae873b5ff0ad296e434ecf42bce94a6b5bcedadefa874690d5": {
    "query": "\nwith draft as (\n    select draft_id as id from jig_draft_join where live_id = $1\n)\ndelete from jig where id = $1 or id = (select id from draft)\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "a196efbd15600fad1de6cd53a5fbdcc2f070b122f30811275dd7d5567f455346": {
    "query": "\ninsert into jig_additional_resource(jig_id, url)\nselect $1, url from jig_additional_resource where jig_id = $2\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "a3af2a61a6203066df29365b0df9b228de0f14c411b6fbe18094085479509b13": {
    "query": "\ninsert into jig_category(jig_id, category_id)\nselect $1, category_id from jig_category where jig_id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "a63ac1a1a79b480f537e93a26809448dd7cfe54bd82fc63e24626521da82f7c8": {
    "query": "delete from session where token = $1 and (scope_mask & $2) = $2 returning user_id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "user_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "a87ea4169f26518cbf7f88c1777bd15bbf72f938d6352567cd549bbe970db5f2": {
    "query": "\nupdate user_color\nset index = index - 1\nwhere index > $2 and user_id = $1\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "a88c0449faed385cbc111b4e25068a8dd76a2118de2b5615e6315af23f8ce946": {
    "query": "update global_animation_upload set processed_at = now(), processing_result = false where animation_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "a927e1b316983d98397a454a3198b08fcd37cb54056c0a5e57c18bbfcaa0985c": {
    "query": "\nselect exists(select 1 from user_recent_image where user_id = $1 and image_id = $2) as \"exists!\"\n            ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "a9780ea48594dbed705b4df8442e7c58416785833da7e04ef32aa8a3bfcd0e21": {
    "query": "delete from user_auth_basic where user_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "aec729ae876f9816b6a64f6527c6e8497140391a8bebb7a00fc5418cb07682a8": {
    "query": "\ndelete from image_tag where index = $1\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "af84d5780cd749a90a3f26b3606bb5a737bcbe2c08998a9c5e7deb28310d9ead": {
    "query": "select 1 as discard from user_audio_library where id = $1 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "discard",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "b093762d4b40e825b57962cb833a8144a57270a3029f0cd6362d956b701e0651": {
    "query": "select token from \"session\" order by created_at limit 1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "token",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "b0abad8e6c605062d886f6f1e3dfd7aaab57f30c3615de97e484cd4c6645bba4": {
    "query": "\ninsert into jig_additional_resource (jig_id, url)\nvalues ($1, $2)\nreturning id\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "b3ced9e053666b805804107a80e32f6e8612a8668dec205803c6b50c6bca241f": {
    "query": "\nupdate jig\nset audio_feedback_positive = $2,\n    audio_feedback_negative = $3,\n    updated_at = now()\nwhere id = $1 and ($2 <> audio_feedback_positive or $3 <> audio_feedback_negative)\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2Array"
        ]
      },
      "nullable": []
    }
  },
  "b4f3858831e1685ac7bf663ebddc340a804437258fce9803fd079c084b38e470": {
    "query": "update global_animation_upload set processed_at = now(), processing_result = true where animation_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "b73bc1e83d2008fc5b9cc7e9a6c9a6b67b136c45a41e39a8929b554dc5c98485": {
    "query": "update \"settings\" set algolia_index_version = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "b905ebd3fd48e7f0b745d22fbcad52f94b84cb750a6b3bf39b0f6cd2a596742a": {
    "query": "\nupdate jig\nset publish_at = $2, updated_at = now()\nwhere id = $1 and $2 is distinct from publish_at",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Timestamptz"
        ]
      },
      "nullable": []
    }
  },
  "ba59bad8a7aef54f3ee9054118d79bbb2be4ce0371960a979ea74feced71d8e2": {
    "query": "\nselect name\nfrom user_font\nwhere user_id = $1\norder by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "name",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "bb5a9faaff748e864bcb9fb956585e7577313b263dbf2fe0e146a8c48af134c9": {
    "query": "select user_id as \"id\" from user_profile where (user_id = $1 and $1 is not null) or (username = $2 and $2 is not null)",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "bc508f39223de64b609a1890b6a9bf504a087f92fe96544e7919a75e56a5dc60": {
    "query": "\ninsert into jig_draft_join (draft_id, live_id)\nvalues ($1, $2)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "bc780ffba7cd48b5c9b829c87ef663b4dc398986888f9f5285b413b1563db729": {
    "query": "\nselect id,\n    name,\n    kind as \"kind: ImageKind\",\n    description,\n    array((select affiliation_id from image_affiliation where image_id = image_metadata.id)) as \"affiliations!\",\n    array((select affiliation.display_name\n           from affiliation\n                    inner join image_affiliation on affiliation.id = image_affiliation.affiliation_id\n           where image_affiliation.image_id = image_metadata.id))                            as \"affiliation_names!\",\n           array((select style_id from image_style where image_id = image_metadata.id))             as \"styles!\",\n           array((select style.display_name\n                  from style\n                           inner join image_style on style.id = image_style.style_id\n           where image_style.image_id = image_metadata.id))                                  as \"style_names!\",\n    array((select age_range_id from image_age_range where image_id = image_metadata.id))     as \"age_ranges!\",\n    array((select age_range.display_name\n           from age_range\n                    inner join image_age_range on age_range.id = image_age_range.age_range_id\n           where image_age_range.image_id = image_metadata.id))                              as \"age_range_names!\",\n    array((select category_id from image_category where image_id = image_metadata.id))       as \"categories!\",\n    array((select name\n           from category\n                    inner join image_category on category.id = image_category.category_id\n           where image_category.image_id = image_metadata.id))                               as \"category_names!\",\n    array((select tag_id from image_tag_join where image_id = image_metadata.id))       as \"tags!\",\n    array((select name\n           from image_tag\n                    inner join image_tag_join on image_tag.id = image_tag_join.tag_id\n           where image_tag_join.image_id = image_metadata.id))                               as \"tag_names!\",\n    (publish_at < now() is true) as \"is_published!\",\n    is_premium\nfrom image_metadata\nwhere \n    last_synced_at is null or\n    (updated_at is not null and last_synced_at < updated_at) or\n    (publish_at < now() is true and last_synced_at < publish_at)\nlimit 100\nfor no key update skip locked;\n     ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "kind: ImageKind",
          "type_info": "Int2"
        },
        {
          "ordinal": 3,
          "name": "description",
          "type_info": "Text"
        },
        {
          "ordinal": 4,
          "name": "affiliations!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 5,
          "name": "affiliation_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 6,
          "name": "styles!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 7,
          "name": "style_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 8,
          "name": "age_ranges!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 9,
          "name": "age_range_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 10,
          "name": "categories!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 11,
          "name": "category_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 12,
          "name": "tags!",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 13,
          "name": "tag_names!",
          "type_info": "TextArray"
        },
        {
          "ordinal": 14,
          "name": "is_published!",
          "type_info": "Bool"
        },
        {
          "ordinal": 15,
          "name": "is_premium",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false
      ]
    }
  },
  "bdedb2c9dea3363859d3dbe22b6665efda3bf686a9c1eca1ffc9fb298de68d6f": {
    "query": "\n            select id as \"id: AgeRangeId\", display_name, created_at, updated_at from age_range\n            order by index\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: AgeRangeId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "c0503b4756010f70f84bfc842758cc356568bcb7324b0c0a8454f49511300942": {
    "query": "insert into user_scope (user_id, scope) values ($1, $2)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "c0f2792d2f5f952c0f6becbd49c168ca420c910e6c93102ad8896704aecc39ac": {
    "query": "\nupdate category\nset updated_at = now(),\n    index = index + 1\nwhere index >= $1 and index < $2 and parent_id is not distinct from $3\n                ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "c9871e12739d5ae1acd8e3026e00ed927a54f717d5e5cd12f78456b99a7aa23b": {
    "query": "delete from session where user_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "cd49cef54182b43dd7943bcd51fd3c535f4a8ec0dae95cbc8ceb39f7f757fe02": {
    "query": "delete from locale_entry where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      },
      "nullable": []
    }
  },
  "d201d9e5aec8be8b9ecf9a698f834a73a0fabc887886d198e12d387b8e9d78f5": {
    "query": "\nselect kind as \"kind: ImageKind\"\nfrom image_metadata\ninner join image_upload on image_metadata.id = image_upload.image_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of image_upload\nfor share of image_metadata\nskip locked\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "kind: ImageKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "d24c286c6094e2009d400e4f366ffb3ba255c34bf4848598a30a63c2f1106889": {
    "query": "\n        select id as \"id: TagId\", display_name, created_at, updated_at, index from \"image_tag\"\n        order by index\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: TagId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "display_name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 4,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true,
        false
      ]
    }
  },
  "d32e3899d7c0ea60a1ea6d88446a9b182763d14c95a5c7f3084d2928aa286406": {
    "query": "\nwith cte as (\n    insert into user_color\n    (user_id, color, index)\n    values ($1, $2, (select count(*) from user_color where user_id = $1)) returning color\n), colors as (\n    select color\n    from user_color\n    where user_id = $1\n    order by index\n)\nselect color as \"color!\" from colors\nunion all\nselect color as \"color!\" from cte\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "color!",
          "type_info": "Int4"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "d5a143bebf6db49e4f58840659f284deba7a047a39f298149f074b029c8d9b05": {
    "query": "\nwith module as (\n         update jig_module set jig_id = $1 where jig_id = $4\n     ),\n     affiliation as (\n         update jig_affiliation set jig_id = $1 where jig_id = $4\n     ),\n     category as (\n         update jig_category set jig_id = $1 where jig_id = $4\n     ),\n     goal as (\n         update jig_goal set jig_id = $1 where jig_id = $4\n     ),\n     age_range as (\n         update jig_age_range set jig_id = $1 where jig_id = $4\n     ),\n     additional_resource as (\n         update jig_additional_resource set jig_id = $1 where jig_id = $4\n     )\nupdate jig\nset id = $1, publish_at = $2, is_public = $3\nwhere id = $4\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Timestamptz",
          "Bool",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "da24841a3eb28555d3242508c7be3a7c9f802ef0acb2328578ad0d137453cd44": {
    "query": "\ninsert into jig (display_name, parents, creator_id, author_id, language, description, publish_at, is_public,\n                 direction, display_score, theme, audio_background, audio_feedback_positive, audio_feedback_negative)\nselect display_name,\n       parents,\n       creator_id,\n       author_id,\n       language,\n       description,\n       $2,\n       false,\n       direction,\n       display_score,\n       theme,\n       audio_background,\n       audio_feedback_positive,\n       audio_feedback_negative       \nfrom jig\nwhere id = $1\nreturning id as \"id: JigId\"\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: JigId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Timestamptz"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "daa77824c0c1372877839ffbc0bd3b0d8b4a0a9754a5e98d1e0bd1e9c15640c7": {
    "query": "select exists(select 1 from user_image_upload where image_id = $1 for no key update) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "dda8d8d2bc07da17016ae44616deda2fe94bf8a0db546e60b07200c95caa40f1": {
    "query": "select uploaded_at from user_image_upload where image_id = $1 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "uploaded_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        true
      ]
    }
  },
  "e13fed8948ad863f394fefbda8a3b5a002208ed80892e3a5751742eb6d938815": {
    "query": "\nselect user_id as \"id\",\n    username,\n    user_email.email::text                                                              as \"email!\",\n    given_name,\n    family_name,\n    language,\n    locale,\n    opt_into_edu_resources,\n    over_18,\n    timezone,\n    user_profile.created_at,\n    user_profile.updated_at,\n    organization,\n    location,\n    array(select scope from user_scope where user_scope.user_id = \"user\".id) as \"scopes!: Vec<i16>\",\n    array(select subject_id from user_subject where user_subject.user_id = \"user\".id) as \"subjects!: Vec<Uuid>\",\n    array(select affiliation_id from user_affiliation where user_affiliation.user_id = \"user\".id) as \"affiliations!: Vec<Uuid>\",\n    array(select age_range_id from user_age_range where user_age_range.user_id = \"user\".id) as \"age_ranges!: Vec<Uuid>\"\nfrom \"user\"\ninner join user_profile on \"user\".id = user_profile.user_id\ninner join user_email using(user_id)\nwhere id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "username",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "email!",
          "type_info": "Text"
        },
        {
          "ordinal": 3,
          "name": "given_name",
          "type_info": "Text"
        },
        {
          "ordinal": 4,
          "name": "family_name",
          "type_info": "Text"
        },
        {
          "ordinal": 5,
          "name": "language",
          "type_info": "Text"
        },
        {
          "ordinal": 6,
          "name": "locale",
          "type_info": "Text"
        },
        {
          "ordinal": 7,
          "name": "opt_into_edu_resources",
          "type_info": "Bool"
        },
        {
          "ordinal": 8,
          "name": "over_18",
          "type_info": "Bool"
        },
        {
          "ordinal": 9,
          "name": "timezone",
          "type_info": "Text"
        },
        {
          "ordinal": 10,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 11,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 12,
          "name": "organization",
          "type_info": "Text"
        },
        {
          "ordinal": 13,
          "name": "location",
          "type_info": "Jsonb"
        },
        {
          "ordinal": 14,
          "name": "scopes!: Vec<i16>",
          "type_info": "Int2Array"
        },
        {
          "ordinal": 15,
          "name": "subjects!: Vec<Uuid>",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 16,
          "name": "affiliations!: Vec<Uuid>",
          "type_info": "UuidArray"
        },
        {
          "ordinal": 17,
          "name": "age_ranges!: Vec<Uuid>",
          "type_info": "UuidArray"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        false,
        null,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        null,
        null,
        null,
        null
      ]
    }
  },
  "e2208cd51b8f286e61ee74d078c7730e5aadc156b9e22b75109ce746d354dbc4": {
    "query": "update jig_module set index = index - 1 where jig_id = $1 and index > $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "e3385b6d93728cc62d0995e839f0148aaba5e572c06049512a4f31d44f03c269": {
    "query": "\nupdate user_font \n    set name = $3\n    where user_id = $1\n    and index = $2\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "e3d429cb70f383b9088a61bd28fca38365ac88aa817d1e6825397e77f0a20bef": {
    "query": "\nupdate jig_module\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere jig_id = $1 and index between $3 and $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      },
      "nullable": []
    }
  },
  "e3ee149ba3066bd72758e68b8e0437b9a3e3e1dfa3e8b1d940ae002d4b285805": {
    "query": "update image_upload set processed_at = now(), processing_result = true where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "e418a5ae9bbbbfa0526d7d90d699ae1e4d2edb798ecf3434a1ed4529770c8faf": {
    "query": "update user_image_upload set uploaded_at = now(), processing_result = null where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "e476295de7bbf205eb11c2a4046c46c9352f30eb4c32bad44714b9053841fd58": {
    "query": "delete from \"user\" where id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "e53665c81494eec03a5148d47f3a8e68b49071f7e69717c95e91dee992efa6bf": {
    "query": "\ninsert into user_image_library default values\nreturning id as \"id: ImageId\"\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: ImageId",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "e805579cae1a6b599640e1bedcc0aa45db9538e223ae3a572a2bbb7d85510cf2": {
    "query": "\nselect id,\n       kind as \"kind: MediaKind\"\nfrom web_media_library\nwhere hash = $1\nfor update\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "kind: MediaKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "e84b872096758317f1b40bf74ff81fafb5eb0b45a17137bdb67780f427e39011": {
    "query": "\ninsert into jig_module (jig_id, \"index\", kind, contents)\nvalues ($1, $2, $3, $4)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2",
          "Jsonb"
        ]
      },
      "nullable": []
    }
  },
  "eb85238e221f20b3ad291f2bc9f6db1c632136d7e15358dbf5d0947c60a3aaa6": {
    "query": "insert into web_media_library_url (media_id, media_url) values ($1, $2)",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "edf5cb94b8714ed9995df1c7266d8837390d35250f6c20f3d65b73974e50da4b": {
    "query": "\nwith recursive cte(parent_id) as (\nselect parent_id from category where id = $1\nunion all\nselect c.parent_id from category c inner join cte on cte.parent_id = c.id\n) select exists(select 1 from cte where parent_id = $2) as \"would_cycle!\"\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "would_cycle!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "f113abb5ad8ed84da251652d0852b9e24e70e579fcb494e3644f4b1fdacfe0b1": {
    "query": "\ninsert into jig_goal(jig_id, goal_id)\nselect $1, goal_id from jig_goal where jig_id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "f47f80cc6e3d0cdb4c122e3178a2e9a137b5d2192f80f5457d4f7d30954ba908": {
    "query": "\ninsert into jig_module (\"index\", jig_id, kind, contents)\nselect \"index\", $2 as \"jig_id\", kind, contents\nfrom jig_module where jig_id = $1\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "f48faeb03b1a3f94308c075c38d25ec0495ded0eb3cd21e20980e0bb5c8e0609": {
    "query": "select count(*) as \"count!: i64\" from image_metadata where publish_at < now() is not distinct from $1 or $1 is null",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "count!: i64",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "Bool"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "f4d6632fc60abf4351be966b89b2490a3c3aef6f9f59d9ab4ea2eecc68d8cb72": {
    "query": "update user_image_upload set processed_at = now(), processing_result = true where image_id = $1",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "f61ec8402e7de26b770073be29eee23dd893751db1fe71f55def28f880b32e3a": {
    "query": "select id, display_name as name from locale_item_kind order by created_at",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "f6e4ade33b9e6e50bc9b357ca067ef9b054892afb720cffe07d3ef1b6ecf712c": {
    "query": "\nupdate jig_additional_resource\nset url = coalesce($3, url)\nwhere jig_id = $1 and id = $2\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "f7803338a676de1c4fad713fa774406743480aea8ceb9a4b6ba8ec80b74f9b3d": {
    "query": "update image_metadata set last_synced_at = null",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": []
      },
      "nullable": []
    }
  },
  "f885c76fd750edde5adbd1d426d6f92c91f336d5ffbbcee318e1f18cf31ca72b": {
    "query": "insert into \"user\" default values returning id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false
      ]
    }
  },
  "f917dd67e6adf095a4c6da8d9338a2c5772af4635fc7343add1e2f58ee06908b": {
    "query": "select exists(select 1 from user_email where email = lower($1)) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "f9342b5ec8f32c20788dc706143f9506fcdee6a955105a81e1b13e2aee29e360": {
    "query": "with recursive links as\n                   (\n                       select id,\n                              parent_id\n                       from category co\n                       where id = any ($1::uuid[])\n                       union all\n                       select co.id,\n                              co.parent_id\n                       from category co\n                                inner join links ct on (ct.parent_id = co.id)\n                   )\n\nselect distinct id,\n       category.parent_id,\n       name,\n       category.index,\n       created_at,\n       updated_at,\n       (select count(*) from image_category where category_id = id)::int8 as \"image_count!\",\n       (select count(*)::int8 from jig_category where category_id = id) as \"jig_count!\"\nfrom category\n         inner join links using (id);\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "parent_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 2,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 3,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 4,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 5,
          "name": "updated_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 6,
          "name": "image_count!",
          "type_info": "Int8"
        },
        {
          "ordinal": 7,
          "name": "jig_count!",
          "type_info": "Int8"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        true,
        null,
        null
      ]
    }
  },
  "f952ba3dea24e228c56c46db14e1db511e5325d96026dfe1ba8cd06cb2864e62": {
    "query": "\ninsert into image_tag (index, display_name)\nvalues ($1, $2)\nreturning id as \"id: TagId\", index as \"index: i16\", display_name\n            ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: TagId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "index: i16",
          "type_info": "Int2"
        },
        {
          "ordinal": 2,
          "name": "display_name",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Text"
        ]
      },
      "nullable": [
        false,
        false,
        false
      ]
    }
  },
  "f9df2f28e8d06b6804d2bfc813d94ee93bbebe9148b2d2f5e00857adfed502ed": {
    "query": "select email::text as \"email!\" from user_email where user_id = $1 for share",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "email!",
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "fb0694a24ef38695af5be6116509287bb61b1d70653bdc55100af75abbef275c": {
    "query": "delete from web_media_library where id = $1 returning kind as \"kind: MediaKind\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "kind: MediaKind",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "fc6bfe176017b10253bc42ecb9f96f0533953b10ea0ad57299f99a3a17bc6721": {
    "query": "\nupdate image_metadata\nset publish_at = $2, updated_at = now()\nwhere id = $1 and $2 is distinct from publish_at",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Timestamptz"
        ]
      },
      "nullable": []
    }
  },
  "fcd42906805bb3286c6bbc9c46b68140d5058bc71706c382081ab301a0c577e1": {
    "query": "select uploaded_at from web_media_library where kind = $1 and id = $2 for update",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "uploaded_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      },
      "nullable": [
        true
      ]
    }
  },
  "fe196f274875c6e293c5e80be927ac1e35c46f7699975b24a28b8cc1c136881d": {
    "query": "\ninsert into user_auth_basic (user_id, email, password)\nvalues ($1, $2::text, $3)\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      },
      "nullable": []
    }
  },
  "ffba3546e7aab533895681b3d8c307c4debe0dd7bf5434625ba9d6c5fdc1e491": {
    "query": "select exists(select 1 from jig_draft_join where live_id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  }
}
