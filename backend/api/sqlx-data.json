{
  "db": "PostgreSQL",
  "01a135ff430fa6ab0ac75454f6d1c25d2198d9f885e1abfdb4ca22c888df32a5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate jig_data\nset description = $2,\n    translated_description = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description"
  },
  "0275b21fac8ef6473d7a30163979cfca243fe9fcfa294dbe0d4d3f8b22ee7c67": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from resource_data_resource \"rdr\" where resource_data_id = $1\n    and rdr.id = $2) as \"exists!\"\n    "
  },
  "028a39dbccbe063de367c06c73959dee25793addad0a13388cd4d464a2496005": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "live_id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id, live_id from course where id = $1\n"
  },
  "02c99d434bef7ea8602e6e462c5e93d9a0e11f47771b10b90d9482e79c18cfb0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "delete from web_media_library_url where media_url = $1"
  },
  "02fe14cf31fdfa9521ea1058132c0079963ed2ba0f16ae69f38978453bda6c10": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from playlist where playlist.id = $1\n"
  },
  "034484d9f50cb98103b4a710a59bd6367b5934bd4aff7668d71ca85df3fb198e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data_module\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere jig_data_id = $1 and index between $2 and $3\n"
  },
  "0379e2a93becd328af1177045c2060becee6c16ff12487edf53446ceb7d9165d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data_age_range(resource_data_id, age_range_id)\nselect $2, age_range_id\nfrom resource_data_age_range\nwhere resource_data_id = $1\n        "
  },
  "039d6681b802a8e5e073af8a11e422f8dcf355d5126b73dc960699a685f7d5a7": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect playlist_data.id,\n       display_name\nfrom playlist_data\ninner join playlist on live_id = playlist_data.id\nwhere display_name <> ''\n      and translated_name = '{}'\n      and published_at is not null\n      and name_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 20 for no key update skip locked;\n "
  },
  "041c763ec559907841f70e45f627d3864a9e9fef4929d6b96327064617a2f5ec": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from user_profile where user_id = $1) as \"exists!\""
  },
  "04237ddf4199bff3727b4e83a0def6c41ffc32a9efe01fb50d780b8de3f29f53": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Int2",
          "Bool",
          "Bool",
          "Bool",
          "Timestamptz"
        ]
      }
    },
    "query": "\ninsert into jig_player_session (jig_id, index, direction, display_score, track_assessments, drag_assist, expires_at)\nvalues ($1, $2, $3, $4, $5, $6, $7)\n\n"
  },
  "04fb89e42da5ea9503934560463dca443ce0dbb9ba2fc38977da4aeb355f8d77": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate jig_play_count\nset play_count = play_count + 1\nwhere jig_id = $1;\n            "
  },
  "05144993949a15074c9fbbea7e89123579ed994a9b5132c902b17874b902e2a5": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "location?",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "bio?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "jig_count?",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "resource_count?",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "course_count?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "playlist_count?",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "total_asset_count!",
          "ordinal": 15,
          "type_info": "Int8"
        },
        {
          "name": "circles!: Vec<CircleId>",
          "ordinal": 16,
          "type_info": "UuidArray"
        },
        {
          "name": "following!",
          "ordinal": 17,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Uuid"
        ]
      }
    },
    "query": "\n        select  user_id                as \"id!: UserId\",\n                username               as \"username!\",\n                given_name             as \"given_name!\",\n                family_name            as \"family_name!\",\n                profile_image_id       as \"profile_image?: ImageId\",\n                badge                  as \"badge?: UserBadge\",\n                (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)      as \"languages_spoken?: Vec<String>\",\n                (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n                (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n                (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?\",\n                (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from jig where jig.author_id = \"user\".id and jig.published_at is not null)      as \"jig_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from resource where resource.author_id = \"user\".id and resource.published_at is not null)      as \"resource_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from course where course.author_id = \"user\".id and course.published_at is not null)      as \"course_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null)      as \"playlist_count?\",\n                ((select count(*) from jig where jig.author_id = \"user\".id and jig.published_at is not null) + \n                (select count(*) from resource where resource.author_id = \"user\".id and resource.published_at is not null) + \n                (select count(*) from course where course.author_id = \"user\".id and course.published_at is not null) + \n                (select count(*) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null))      as \"total_asset_count!\",\n                (select array(select circle.id\n                    from circle_member bm\n                    inner join circle on bm.id = circle.id\n                    where bm.user_id = \"user\".id\n                )) as \"circles!: Vec<CircleId>\",\n                exists(select 1 from user_follow where follower_id = $2 and user_id = \"user\".id) as \"following!\"\n            from \"user\"\n            inner join user_profile on \"user\".id = user_profile.user_id\n            inner join unnest($1::uuid[])\n            with ordinality t(id, ord) using (id)\n"
  },
  "05a4685f0d14b81adbe59d8b6c9ee2537bd36bdddae315827dfd4630f0cab262": {
    "describe": {
      "columns": [
        {
          "name": "id!: CourseUnitId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect unit_id              as \"id!: CourseUnitId\",\n       display_name         as \"display_name!\",\n       description          as \"description!\",\n       value                as \"value!\"\nfrom course_data_unit \"pddr\"\nwhere course_data_id = $1\n  and pddr.unit_id = $2\n        "
  },
  "07c23d4be4038602fadd286c040a438b0366a8308e634d0ef4f5325c7b07b225": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\n            update image_tag set index = $2 where index = $1\n            "
  },
  "085304fd00f042843830c03dab547f7547aad3b4f611d26beb5ec22b583686d8": {
    "describe": {
      "columns": [
        {
          "name": "color",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect color\nfrom user_color\nwhere user_id = $1\norder by index\n"
  },
  "085a3f1da9ea1c91ef70dae39e77c7381000397be1ce5e545e9e783e0a39d6fb": {
    "describe": {
      "columns": [
        {
          "name": "live_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "UuidArray"
        ]
      }
    },
    "query": "\nupdate jig\nset author_id = $1,\n    creator_id = $1\nwhere (creator_id = $2 or author_id = $2)\nand id = any($3)\nreturning live_id\n        "
  },
  "089181a3a2d32d0eacc5e0c0e0aeff11b4590f88f3422f1a825996a812d13486": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect jig_data.id,\n       display_name\nfrom jig_data\ninner join jig on live_id = jig_data.id\nwhere display_name <> '' and translated_name = '{}'\nand published_at is not null\nand name_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 30 for no key update skip locked;\n         "
  },
  "0978a2ae9cbe0c16d58c15229324bad8325b60d9128b982a6476980be6965677": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate category\nset updated_at = now(),\n    index = least((select count(*)::int2 from category c where c.parent_id is not distinct from parent_id), $1)\nwhere id = $2\n"
  },
  "09c1cfec82b7cb56b3cc85a61216442c9e218a0f4126160c35bd16fab13c09fd": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from resource join resource_data on resource.draft_id = resource_data.id where resource.id = $1 for update\n"
  },
  "0a1f9e5fee4b10a173b8723976cecfb920f90a4828d723abb14f6e0215cf880b": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "select exists(select 1 from locale_entry where id = $1 for update) as \"exists!\""
  },
  "0b196a94e239793ee64662ed09fe41987e6d1b47ac8035f08d2df0a8f414c983": {
    "describe": {
      "columns": [
        {
          "name": "max_index!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select count(*) - 1 as \"max_index!\" from course_data_unit where course_data_id = $1"
  },
  "0b806e26d1df6f374e4a0bb40fb4135c666b7bcc1a14b924af53687679106d77": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate resource_data\nset updated_at = now()\nfrom resource\nwhere resource.live_id = $1\n            "
  },
  "0c1c7b277c304f840daa9bc798c86d9d5d42a3ccaa6929d6fe668626ccf95c15": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\n            update resource_curation_data\n            set curation_status = $2\n            where resource_id = $1 and $2 is distinct from curation_status\n             "
  },
  "0db02aca55bd8f7c7ecdf168ac6d80c6a556ebf2efc5cdafe0afee57a49aeff1": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "kind: AnimationKind",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect id,  kind as \"kind: AnimationKind\"\nfrom animation_metadata\ninner join global_animation_upload on animation_metadata.id = global_animation_upload.animation_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of global_animation_upload\nfor share of animation_metadata\nskip locked\n"
  },
  "0e1b634064472c2a561c10537567da0c0972ee53bf78607152231c742a1c3654": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n    update user_asset_data \n    set playlist_count = playlist_count - 1,\n        total_asset_count = total_asset_count - 1\n    from playlist\n    where author_id = user_id and\n          published_at is not null and \n          id = $1\n          "
  },
  "0e9cec4ea69218f08784c12a17bcd8b15c22486f0e76051fea80fd21b12af760": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "jig_id!: JigId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "report_type!: JigReportType",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "reporter_id?: Uuid",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "name?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "email?",
          "ordinal": 6,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id                                   as \"id!: ReportId\",\n       jig_id                               as \"jig_id!: JigId\",    \n       report_type                          as \"report_type!: JigReportType\",                  \n       created_at,\n       reporter_id                          as \"reporter_id?: Uuid\",\n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = reporter_id\n        )                                       as \"name?\",\n        (\n            select email::text\n            from user_email\n            where user_email.user_id = reporter_id\n        )                                       as \"email?\"\nfrom jig_report\nwhere id = $1 and jig_id = $2\n"
  },
  "0f15170b401de47fa6e6ec802a12a8c00412902a4d3bf942897c8bb8e41f44fa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "insert into image_upload (image_id) values($1)"
  },
  "0fa3d6c3b75e08c7dde2c450f7dc25cbe15f58cface2d765b16c13594d95c571": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update resource_curation_data\n    set description = $2\n    where resource_id = $1 and $2 is distinct from description\n                "
  },
  "0faf5c9d762670c316d4f96d22ea8d00e3916ee4293fe5c2eb837f117e73bb90": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n    update user_asset_data \n    set resource_count = resource_count - 1,\n        total_asset_count = total_asset_count - 1\n    from resource\n    where author_id = user_id and\n          published_at is not null and \n          id = $1\n    "
  },
  "11623dd925dc935401e7c2ef73941a1a46d253df579b98af410e69d1e578850d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_curation_data\nset display_name = $2\nwhere jig_id = $1 and $2 is distinct from display_name\n            "
  },
  "117aec1ce14cfb2c45f31a37e6ea9acba4cff35c27710ed57499a6f7ec709844": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "TextArray"
        ]
      }
    },
    "query": "\nupdate user_profile\nset persona = $2,\n    updated_at = now()\nwhere user_id = $1 and persona is distinct from $2\n        "
  },
  "11be0aa19af23c8c3ee5c0b166fa7f4127ffe6dc9d2f62b01a11e7385e5b5202": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data_additional_resource(jig_data_id, resource_type_id, display_name, resource_content)\nselect $2, resource_type_id, display_name, resource_content\nfrom jig_data_additional_resource\nwhere jig_data_id = $1\n        "
  },
  "11c3d54d1f9d611a8d5fb20586d426b10909496f063701144437d8d6ca345b5d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate user_profile\nset badge      = $2,\n    updated_at = now()\nwhere user_id = $1\nand ($2 is distinct from badge)\n        "
  },
  "124802b593631b117b5b2e1d2eb43712d579be04d5b218f7c19f382f3fe5dcca": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Uuid",
          "Text",
          "Text",
          "Int2",
          "Text",
          "Text",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into locale_entry (bundle_id, section, item_kind_id, english, hebrew, status, zeplin_reference, comments, in_app, in_element, in_mock)\nvalues ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\nreturning id\n"
  },
  "12733111814b439e48d7e9f8ce720e88382a2e0a92dc6ec1dc077c09ad4a47a9": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists (select 1 from \"user\" where id = $1) as \"exists!\""
  },
  "12fef31b2094fc7e8df6e3e7f483b70c196398c43ae4cc4b4946b58b2cb3ffe0": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(user_profile.user_id))[1]\n            from user_profile\n            left join \"user\" on \"user\".id = user_profile.user_id\n            left join user_email using(user_id)\n            where (\"user\".id = $1 or $1 is null)\n            group by family_name\n            order by family_name desc\n        )\n        select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id, ord)\n        "
  },
  "130b4c817d8c638084228964f196761cce7ac5f7f8991b0f4d278111920669b6": {
    "describe": {
      "columns": [
        {
          "name": "course_id: CourseId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "privacy_level: PrivacyLevel",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "published_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "plays",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "duration",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "display_name!",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "updated_at",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "language!",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 14,
          "type_info": "Jsonb"
        },
        {
          "name": "draft_or_live!: DraftOrLive",
          "ordinal": 15,
          "type_info": "Int2"
        },
        {
          "name": "other_keywords!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "rating?: CourseRating",
          "ordinal": 18,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 22,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "units!: Vec<(CourseUnitId, String, String, Value)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray",
          "Int4",
          "Int4",
          "Int4",
          "Bool"
        ]
      }
    },
    "query": "\nwith cte as (\n    select (array_agg(pdd.id))[1]\n    from course_data \"pdd\"\n          left join course on (draft_id = pdd.id or (live_id = pdd.id and pdd.last_synced_at is not null and published_at is not null))\n          left join course_admin_data \"admin\" on admin.course_id = course.id\n          left join course_data_resource \"resource\" on pdd.id = resource.course_data_id\n    where (author_id = $1 or $1 is null)\n        and (pdd.draft_or_live = $2 or $2 is null)\n        and (blocked = $8 or $8 is null)\n        and (pdd.privacy_level = any($3) or $3 = array[]::smallint[])\n        and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n    group by coalesce(updated_at, created_at), plays\n        order by case when $7 = 0 then plays\n        else extract(epoch from coalesce(updated_at, created_at))\n    end desc\n),\ncte1 as (\n    select * from unnest(array(select cte.array_agg from cte)) with ordinality t(id\n   , ord) order by ord\n)\nselect course.id                                                                as \"course_id: CourseId\",\n    privacy_level                                                               as \"privacy_level: PrivacyLevel\",\n    creator_id                                                                  as \"creator_id?: UserId\",\n    author_id                                                                   as \"author_id?: UserId\",\n    (select given_name || ' '::text || family_name\n     from user_profile\n     where user_profile.user_id = author_id)                                     as \"author_name\",\n    published_at,\n    likes,\n    plays,\n    duration,\n    live_up_to_date,\n    display_name                                                                  as \"display_name!\",\n    updated_at,\n    language                                                                      as \"language!\",\n    description                                                                   as \"description!\",\n    translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n    draft_or_live                                                                 as \"draft_or_live!: DraftOrLive\",\n    other_keywords                                                                as \"other_keywords!\",\n    translated_keywords                                                           as \"translated_keywords!\",\n    rating                                     as \"rating?: CourseRating\",\n    blocked                                    as \"blocked!\",\n    curated                                    as \"curated!\",\n    is_premium                                 as \"premium!\",\n    (\n        select row(course_data_module.id, kind, is_complete)\n        from course_data_module\n        where course_data_id = course_data.id and \"index\" = 0\n        order by \"index\"\n    )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n    array(select row (category_id)\n            from course_data_category\n            where course_data_id = course_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n    array(select row (id, display_name, resource_type_id, resource_content)\n                from course_data_resource\n                where course_data_id = course_data.id\n          )                                          as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n    array(\n            select row(pddu.unit_id, pddu.display_name, pddu.description, pddu.value)\n            from course_data_unit \"pddu\"\n            where pddu.course_data_id = course_data.id\n            order by \"index\"\n    )                                                     as \"units!: Vec<(CourseUnitId, String, String, Value)>\"\nfrom cte1\ninner join course_data on cte1.id = course_data.id\ninner join course on (\n    course_data.id = course.draft_id\n    or (\n        course_data.id = course.live_id\n        and last_synced_at is not null\n        and course.published_at is not null\n    )\n)\nleft join course_admin_data \"admin\" on admin.course_id = course.id\nwhere ord > (1 * $5 * $6)\norder by ord asc\nlimit $6\n"
  },
  "131b0ba5b42db6c02145b25d2f21f6e7f37af65f4dca9eadd6287f0405c5482a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nupdate jig_data\nset last_synced_at = now()\nwhere jig_data.id = any (select live_id from jig where jig.id = any ($1))\n"
  },
  "137a46c39e9037a81b12017740d3aba9c8a9971f2ee4d71cb83f3f82d50057a3": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from jig where jig.id = $4 and jig.author_id <> $1)\n) as \"authed!\"\n"
  },
  "13a585a91078e3a8d974641dd55160e6057508e815fabeb3386fe4011c79153f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update user_asset_data \n        set resource_count = resource_count + 1,\n        total_asset_count = total_asset_count + 1\n        from resource\n        where author_id = user_id and\n              published_at is null and \n              id = $1"
  },
  "13ff5f48acc1806d421ced3ab8c3fd2e59e5d3912a6ba12b6d08c42b89672a2e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update user_asset_data \n        set playlist_count = playlist_count + 1,\n        total_asset_count = total_asset_count + 1\n        from playlist\n        where author_id = user_id and\n              published_at is null and \n              id = $1"
  },
  "140ff97c5bd0b551e1c2b0026a53c713117faf011a3f7f9e6f7e420cc481204a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n        update jig_curation_data\n        set additional_resources = $2\n        where jig_id = $1 and $2 is distinct from additional_resources\n                    "
  },
  "145cde06bc00df1855bd4307423b6f6f7f36a4560ed6e354a127f166d0d21011": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_audio_upload set uploaded_at = now(), processing_result = null where audio_id = $1"
  },
  "14874f07db89a6edf7d6088fe4a671471751e7166d43a9ce458ad646d697da07": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from school where school_name_id = $1) as \"exists!\""
  },
  "14f012bfa5f6e21f23b17bc3d4a56b40dcffe39be966cd8b6af3aba87631968a": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from user_pdf_upload where pdf_id = $1 for no key update) as \"exists!\""
  },
  "14f0ed12b10806b7fe6560be1938f67fc0030badc4dd552ec57b10bf8d8bf7d2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate resource_data_resource\nset resource_content = $3\nwhere resource_data_id = $1 and id = $2\n            "
  },
  "160b640822791b21c7d5d057e0d388bfdf669e70b2a2eeb99056919681a607ee": {
    "describe": {
      "columns": [
        {
          "name": "id: ResourceTypeId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id as \"id: ResourceTypeId\", display_name, created_at, updated_at from \"resource_type\"\norder by index\n"
  },
  "16b8e7596de9c8c57e8a50d4b6788e6d7874603ce815762fae2380223a4ddfc0": {
    "describe": {
      "columns": [
        {
          "name": "id: AudioId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "select id as \"id: AudioId\" from user_audio_library order by created_at desc"
  },
  "172c8df92f296df4a816c4c9d77c091c56919f84f54bc1cc1174060aff2d64c6": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "bundle_id",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "section",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "item_kind_id",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "english",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "hebrew",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "status: EntryStatus",
          "ordinal": 6,
          "type_info": "Int2"
        },
        {
          "name": "zeplin_reference",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "comments",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "in_app",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "in_element",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "in_mock",
          "ordinal": 11,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nselect\n    id as \"id\",\n    bundle_id,\n    section,\n    item_kind_id,\n    english,\n    hebrew,\n    status as \"status: EntryStatus\",\n    zeplin_reference,\n    comments,\n    in_app, \n    in_element, \n    in_mock\nfrom locale_entry\nwhere id = $1\n"
  },
  "1741fba5ea72ed756e06fb400afd097f4febbd19464a0c857165655abc8c642b": {
    "describe": {
      "columns": [
        {
          "name": "jig_id: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "creator_id: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "published_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "language",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 11,
          "type_info": "Jsonb"
        },
        {
          "name": "direction: TextDirection",
          "ordinal": 12,
          "type_info": "Int2"
        },
        {
          "name": "display_score",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "track_assessments",
          "ordinal": 14,
          "type_info": "Bool"
        },
        {
          "name": "drag_assist",
          "ordinal": 15,
          "type_info": "Bool"
        },
        {
          "name": "theme: ThemeId",
          "ordinal": 16,
          "type_info": "Int2"
        },
        {
          "name": "audio_background: AudioBackground",
          "ordinal": 17,
          "type_info": "Int2"
        },
        {
          "name": "liked_count",
          "ordinal": 18,
          "type_info": "Int8"
        },
        {
          "name": "play_count",
          "ordinal": 19,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "locked",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords",
          "ordinal": 23,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords",
          "ordinal": 24,
          "type_info": "Text"
        },
        {
          "name": "rating?: JigRating",
          "ordinal": 25,
          "type_info": "Int2"
        },
        {
          "name": "blocked",
          "ordinal": 26,
          "type_info": "Bool"
        },
        {
          "name": "curated",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "premium",
          "ordinal": 28,
          "type_info": "Bool"
        },
        {
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "ordinal": 29,
          "type_info": "RecordArray"
        },
        {
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "ordinal": 30,
          "type_info": "RecordArray"
        },
        {
          "name": "modules!: Vec<(ModuleId, ModuleKind, bool)>",
          "ordinal": 31,
          "type_info": "RecordArray"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 32,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 33,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 34,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 35,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select id      as \"jig_id\",\n           creator_id,\n           author_id,\n           liked_count,\n           play_count,\n           live_up_to_date,\n           case\n               when $2 = 0 then jig.draft_id\n               when $2 = 1 then jig.live_id\n               end as \"draft_or_live_id\",\n           published_at,\n           rating,\n           blocked,\n           curated,\n           is_premium\n    from jig\n    left join jig_play_count on jig_play_count.jig_id = jig.id\n    left join jig_admin_data \"admin\" on admin.jig_id = jig.id\n    where id = $1\n)\nselect cte.jig_id                                          as \"jig_id: JigId\",\n        display_name,\n        creator_id                                          as \"creator_id: UserId\",\n        author_id                                           as \"author_id: UserId\",\n        (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id)            as \"author_name\",\n        created_at,\n        updated_at,\n        published_at,\n        privacy_level                                       as \"privacy_level!: PrivacyLevel\",\n        language,\n        description,\n        translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n        direction                                           as \"direction: TextDirection\",\n        display_score,\n        track_assessments,\n        drag_assist,\n        theme                                               as \"theme: ThemeId\",\n        audio_background                                    as \"audio_background: AudioBackground\",\n        liked_count,\n        play_count,\n        live_up_to_date,\n        exists(select 1 from jig_like where jig_id = $1 and user_id = $3)    as \"is_liked!\",\n        locked,\n        other_keywords,\n        translated_keywords,\n        rating                                               as \"rating?: JigRating\",\n        blocked                                              as \"blocked\",\n        curated,\n        is_premium                                           as \"premium\",\n        array(select row (unnest(audio_feedback_positive))) as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\",\n        array(select row (unnest(audio_feedback_negative))) as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n        array(\n                select row (jig_data_module.id, kind, is_complete)\n                from jig_data_module\n                where jig_data_id = jig_data.id\n                order by \"index\"\n        )                                               as \"modules!: Vec<(ModuleId, ModuleKind, bool)>\",\n        array(select row (category_id)\n                from jig_data_category\n                where jig_data_id = cte.draft_or_live_id)     as \"categories!: Vec<(CategoryId,)>\",\n        array(select row (affiliation_id)\n                from jig_data_affiliation\n                where jig_data_id = cte.draft_or_live_id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n        array(select row (age_range_id)\n                from jig_data_age_range\n                where jig_data_id = cte.draft_or_live_id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n        array(\n                select row (jdar.id, jdar.display_name, resource_type_id, resource_content)\n                from jig_data_additional_resource \"jdar\"\n                where jdar.jig_data_id = cte.draft_or_live_id\n    )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\"\nfrom jig_data\n         inner join cte on cte.draft_or_live_id = jig_data.id\n"
  },
  "177c7395ea47c83da0df908560908656dd874684a4f64eb216435e81f4742af6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data\nset display_name = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from display_name"
  },
  "1781983a4042cb8447163d98ee232c71d24ef75c29ea58219fc7604d95780767": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "select id, display_name as name from locale_bundle order by created_at"
  },
  "17c068f0940d505201e9323c0d5d93d2565806c21b75c86f167f18f17caf652f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_curation_data\nset categories = $2\nwhere jig_id = $1 and $2 is distinct from categories\n            "
  },
  "186b601e5471ff005bb0c6e1ddeb8321d6e3d7dbf05f77ff8db9f962baec9710": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1\n    from resource_like\n    where\n        resource_id = $1\n        and user_id = $2\n) as \"exists!\"\n    "
  },
  "190abdc3f0a691d3b3e02b9ec75c214e58b8264734da76ead622688d7b191f68": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate circle\nset image = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from image"
  },
  "1920891993d8927a88d3fc291f1b99e47d8826748b92810b34f1f637f07726ad": {
    "describe": {
      "columns": [
        {
          "name": "index: i16",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "select index as \"index: i16\" from image_tag where index = $1 for update"
  },
  "1967c95aeff5916cbe0737394d29ceecb925877408c76f7e6518075e6d62a90e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate resource_data\nset display_name = $2,\n    translated_name = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from display_name"
  },
  "198e5ee1a96ddebe5b4b174beffdc24f980858e148b2aba35b516386d09d39ef": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into user_account\n(user_id, account_id, subscription_tier, admin, verified)\nvalues\n($1, $2, $3, $4, $5)"
  },
  "19e0b4ddf95507058d054928c0275e5091e02c75fd1b74867e54d0188ba2c56a": {
    "describe": {
      "columns": [
        {
          "name": "id: AgeRangeId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "short_display_name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            select id as \"id: AgeRangeId\", display_name, short_display_name, created_at, updated_at from age_range\n            order by index\n        "
  },
  "19e13d35722d768bfabd2104aaabd88c7c6b7436ac230485dfe370a6b4609aee": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "insert into user_auth_google (user_id, google_id) values ($1, $2)"
  },
  "1a8b1e8b534e0c03972838146a54d715f11f647be57465718d61defdd7af242d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Text"
        ]
      }
    },
    "query": "update image_tag set display_name = $2 where index = $1"
  },
  "1aab27aee650ab912d213f82166e73065633df0ef0df0da0379cdcbe778d83bf": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into resource_data\n   (display_name, language, description, draft_or_live)\nvalues ($1, $2, $3, $4)\nreturning id\n"
  },
  "1ab7020421fe6db5755143b488adb73f547bebecd211deed9a0e19dd23da0e92": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate course_data_resource\nset resource_type_id = coalesce($2, resource_type_id)\nwhere id = $1 and $2 is distinct from resource_type_id\n            "
  },
  "1b4740bdaed3605d201ab98a0dad5a254a2a58631d916d0b708e6542fcb22424": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select exists(select 1 from user_email where email = $1::text) as \"exists!\""
  },
  "1befda2de2314fd9e593d33d5426a5f527e64afa4042a456b7b9e6266410445f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "updated_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "language!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 6,
          "type_info": "Jsonb"
        },
        {
          "name": "other_keywords!",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 9,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 10,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 11,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 12,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 13,
          "type_info": "RecordArray"
        },
        {
          "name": "items!: Vec<(JigId,)>",
          "ordinal": 14,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect  id,\n        display_name                                       as \"display_name!\",\n        updated_at,\n        privacy_level                                      as \"privacy_level!: PrivacyLevel\",\n        language                                           as \"language!\",\n        description                                         as \"description!\",\n        translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n        other_keywords                             as \"other_keywords!\",\n        translated_keywords                        as \"translated_keywords!\",\n        (\n            select row(playlist_data_module.id, kind, is_complete)\n            from playlist_data_module\n            where playlist_data_id = playlist_data.id and \"index\" = 0\n            order by \"index\"\n        )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n        array(select row (category_id)\n            from playlist_data_category\n            where playlist_data_id = playlist_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n        array(select row (affiliation_id)\n            from playlist_data_affiliation\n            where playlist_data_id = playlist_data.id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n        array(select row (age_range_id)\n            from playlist_data_age_range\n            where playlist_data_id = playlist_data.id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n        array(\n            select row (jdar.id, jdar.display_name, resource_type_id, resource_content)\n            from playlist_data_resource \"jdar\"\n            where jdar.playlist_data_id = playlist_data.id\n        )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n        array(\n            select row(jig_id)\n            from playlist_data_jig\n            where playlist_data_jig.playlist_data_id = playlist_data.id\n            order by \"index\"\n        )                                                     as \"items!: Vec<(JigId,)>\"\nfrom playlist_data\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\norder by ord asc\n"
  },
  "1c34eda829dd92980a83bf0ff3b38800febb950fd3b6e5f3e3694938b7bc19e3": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "report_type!: JigReportType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "name?",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "email?",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "creator_name!",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name                               as \"display_name!\",    \n       report_type                                as \"report_type!: JigReportType\",                  \n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = reporter_id\n        )                                       as \"name?\",\n        (\n            select email::text\n            from user_email\n            where user_email.user_id = reporter_id\n        )                                       as \"email?\",\n        (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = creator_id\n        )                                       as \"creator_name!\"\nfrom jig_report\n    left join jig on jig.id = jig_report.jig_id\n    left join jig_data on jig_data.id = jig.live_id\nwhere jig_report.id = $1 and jig_report.jig_id = $2\n"
  },
  "1c72ff4451fa5342ae8ae20bb4169b62efa25b9b44c80ce26bf9a9619336dd60": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from user_pdf_library where id = $1"
  },
  "1c7400d27c33a6b7204302b5cf2ced8fb445de00304be5b424133f3b7afbf1cb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "insert into user_auth_basic (user_id, email, password) values ($1, $2::text, $3)"
  },
  "1ca172f2f399db6888f233df2ab959edcabfef47e2af649589ae9f8b99be85cb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_like(resource_id, user_id)\nvalues ($1, $2)\n            "
  },
  "1d1f0368934f600bc36f0955ac595e554d8d1aeb0632ddd325177529c983e0d9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate jig_data\nset updated_at = now()\nfrom jig\nwhere jig.live_id = $1\n            "
  },
  "1d90375e397bd5b404a5d617c6c6d03667204108a45e8c589f9f281e8abe6e85": {
    "describe": {
      "columns": [
        {
          "name": "id!: CourseId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into course(creator_id, author_id, parents, live_id, draft_id)\nselect creator_id, $2, array_append(parents, $1), $3, $4\nfrom course\nwhere id = $1\nreturning id as \"id!: CourseId\"\n"
  },
  "1e42e953fa2d327cc392c6c2d4452b88773ab521e72d754f8b08ae44b005ef8f": {
    "describe": {
      "columns": [
        {
          "name": "ip_address",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "user_agent",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "jig_id!: JigId",
          "ordinal": 2,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom jig_player_session_instance\nwhere id = $1\nreturning ip_address, user_agent, (\n    select jig_id\n    from jig_player_session_instance\n             join jig_player_session on session_index = index\n) as \"jig_id!: JigId\"\n        "
  },
  "1f8df54bb87c543c4a975eb72c8c981ecd033664f68e66a2caff692ac30c14c3": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate category\nset parent_id = $1,\n    updated_at = now(),\n    index = (select count(*)::int2 from category where parent_id is not distinct from $1)\nwhere id = $2\nreturning index\n"
  },
  "20246d4d1716c91056d77d60188959d9d1e217772bd789a8003103a1c2322a12": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\nupdate playlist_admin_data\nset\n    rating = coalesce($2, rating),\n    blocked = coalesce($3, blocked),\n    curated = coalesce($4, curated),\n    is_premium = coalesce($5, is_premium)\nwhere playlist_id = $1\n"
  },
  "204dda649632168b8f9dd7bd3b6149d2a3b3f20336fb19143b3696db62e1091f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "translated_name!: Json<HashMap<String, String>>",
          "ordinal": 5,
          "type_info": "Jsonb"
        },
        {
          "name": "resource_types!",
          "ordinal": 6,
          "type_info": "UuidArray"
        },
        {
          "name": "resource_type_names!",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "categories!",
          "ordinal": 8,
          "type_info": "UuidArray"
        },
        {
          "name": "category_names!",
          "ordinal": 9,
          "type_info": "TextArray"
        },
        {
          "name": "units!",
          "ordinal": 10,
          "type_info": "UuidArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 11,
          "type_info": "Int2"
        },
        {
          "name": "author_id",
          "ordinal": 12,
          "type_info": "Uuid"
        },
        {
          "name": "other_keywords!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "author_name",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "likes!",
          "ordinal": 16,
          "type_info": "Int8"
        },
        {
          "name": "plays!",
          "ordinal": 17,
          "type_info": "Int8"
        },
        {
          "name": "published_at",
          "ordinal": 18,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        false,
        true,
        false,
        false,
        null,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect course.id,\n       display_name                                                                                                 as \"name\",\n       language                                                                                                     as \"language!\",\n       description                                                                                                  as \"description!\",\n       translated_description                                                                                       as \"translated_description!: Json<HashMap<String, String>>\",\n       translated_name                                                                                              as \"translated_name!: Json<HashMap<String, String>>\",\n       array((select resource_type_id\n               from course_data_resource\n               where course_data_id = course_data.id))                                                              as \"resource_types!\",\n       array((select resource_type.display_name\n             from resource_type\n                       inner join course_data_resource on resource_type.id = course_data_resource.resource_type_id\n            where course_data_resource.course_data_id = course_data.id))                                            as \"resource_type_names!\",\n       array((select category_id\n              from course_data_category\n              where course_data_id = course_data.id))                                                               as \"categories!\",\n       array((select name\n              from category\n                       inner join course_data_category on category.id = course_data_category.category_id\n              where course_data_category.course_data_id = course_data.id))                                          as \"category_names!\",\n        array(\n           (select unit_id\n            from course_data_unit\n            where course_data_unit.course_data_id = course_data.id)\n       )                                                                                                            as \"units!\",\n       privacy_level                                                                                                as \"privacy_level!: PrivacyLevel\",\n       author_id                                                                                                    as \"author_id\",\n       other_keywords                                                                                               as \"other_keywords!\",\n       translated_keywords                                                                                          as \"translated_keywords!\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = course.author_id)                                                             as \"author_name\",\n        likes                                                                                                       as \"likes!\",\n        plays                                                                                                       as \"plays!\",\n        published_at                                                                                                as \"published_at\"\nfrom course\n         inner join course_data on live_id = course_data.id\nwhere (last_synced_at is null and published_at is not null)\n    or (updated_at is not null and last_synced_at < updated_at)\n    or (published_at < now() is true and last_synced_at < published_at)\nlimit 100 for no key update skip locked;\n     "
  },
  "20537b1ca5eb554873aa9c688d010e1919aedf4d1f959568a548aa1d64f0b0d3": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "location?",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "bio?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "jig_count?",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "resource_count?",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "course_count?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "playlist_count?",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "total_asset_count!",
          "ordinal": 15,
          "type_info": "Int8"
        },
        {
          "name": "circles!: Vec<CircleId>",
          "ordinal": 16,
          "type_info": "UuidArray"
        },
        {
          "name": "following!",
          "ordinal": 17,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n    select  user_id as \"id!: UserId\",\n            username   as \"username!\",\n            given_name  as \"given_name!\",\n            family_name as \"family_name!\",\n            profile_image_id       as \"profile_image?: ImageId\",\n            badge                  as \"badge?: UserBadge\",\n            (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)      as \"languages_spoken?: Vec<String>\",\n            (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n            (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n            (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?\",\n            (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n            (select (CASE WHEN count(*) > 0 THEN count(*) else null end) from jig where jig.author_id = \"user\".id and jig.published_at is not null)      as \"jig_count?\",\n            (select (CASE WHEN count(*) > 0 THEN count(*) else null end) from resource where resource.author_id = \"user\".id and resource.published_at is not null)      as \"resource_count?\",\n            (select (CASE WHEN count(*) > 0 THEN count(*) else null end) from course where course.author_id = \"user\".id and course.published_at is not null)      as \"course_count?\",\n            (select (CASE WHEN count(*) > 0 THEN count(*) else null end) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null)      as \"playlist_count?\",\n            ((select count(*) from jig where jig.author_id = \"user\".id and jig.published_at is not null) + \n            (select count(*) from resource where resource.author_id = \"user\".id and resource.published_at is not null) + \n            (select count(*) from course where course.author_id = \"user\".id and course.published_at is not null) + \n            (select count(*) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null))      as \"total_asset_count!\",\n            array(select circle.id\n                from circle_member bm\n                inner join circle on bm.id = circle.id\n                where bm.user_id = \"user\".id\n            ) as \"circles!: Vec<CircleId>\",\n            exists(select 1 from user_follow where follower_id = $2 and user_id = \"user\".id) as \"following!\"\n        from \"user\"\n        inner join user_profile on \"user\".id = user_profile.user_id\n        where id = $1\n        "
  },
  "20aa732d3b4278e50430e1d04090784169f3fbc96a5b91ba446892fe2ded17ef": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into playlist_data\n   (display_name, language, description, draft_or_live)\nvalues ($1, $2, $3, $4)\nreturning id\n"
  },
  "225183f4275cd621a8cb4c64520cf9b7ccf82e218fc6a67508217a72d71ec97f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update user_asset_data\n        set course_count = course_count + 1,\n        total_asset_count = total_asset_count + 1\n        from course\n        where author_id = user_id and\n              published_at is null and\n              id = $1"
  },
  "2295a177e44e56e84159bf565b08cba996720374985a467cd52f8e1f0669bfe2": {
    "describe": {
      "columns": [
        {
          "name": "id!",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "creator_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "bio?",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 4,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "location?: String",
          "ordinal": 7,
          "type_info": "Jsonb"
        },
        {
          "name": "circles!",
          "ordinal": 8,
          "type_info": "UuidArray"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n     select up.user_id                                  as \"id!\",\n            username                                 as \"username!\",\n            given_name || ' '::text || family_name   as \"creator_name!\",\n            (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n            (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)  as \"languages_spoken?: Vec<String>\",\n            (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n            (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n            (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?: String\",\n            (select array(select circle.id\n                from circle_member bm\n                inner join circle on bm.id = circle.id\n                where bm.user_id = \"user\".id\n            )) as \"circles!\"\n    from user_profile \"up\"\n    inner join \"user\" on \"user\".id = up.user_id\n    inner join public_user on public_user.user_id = up.user_id\n    where (public_user.last_synced_at is null or\n          (up.updated_at is not null and public_user.last_synced_at < up.updated_at))\n    limit 100 for no key update skip locked;\n       "
  },
  "23307aa6d384c434c13fa6b6572ff0e774a348c80a2100ef9e533e55eeb2c9d7": {
    "describe": {
      "columns": [
        {
          "name": "school_name_id!: SchoolNameId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into school_name (name, verified)\nvalues ($1::text::citext, $2)\nreturning school_name_id as \"school_name_id!: SchoolNameId\"\n"
  },
  "23a8521d00447ec2e9a085665eb0ac2ee6b39b4e06a4e490c0b3ab5f6299f96c": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Bool",
          "Timestamptz",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into image_metadata (name, description, is_premium, publish_at, size) values ($1, $2, $3, $4, $5)\nreturning id as \"id: ImageId\"\n        "
  },
  "2465e5d91d55a5e139028ba817696e39279be65cfe6eb2af482ec5cc16dd8061": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update jig_data\n                            set translated_description = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "24b6540dd4cfb65eb24f128455991b94a8ffc7c18e81661909b590fba80c09b3": {
    "describe": {
      "columns": [
        {
          "name": "id: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id as \"id: JigId\"\nfrom jig\nwhere jig_focus = 1\nlimit 150\n"
  },
  "25860c59889da796ca09dadde97f5ca87b634e16509c431b66485fc4bab7426c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data_unit\nset display_name    = coalesce($3, display_name),\n    description     = coalesce($4, description)\nwhere course_data_id = $1\n  and index = $2\n"
  },
  "262b13911165728439f387888fd7af894d88affed22585d8dd8bbd396c7531a4": {
    "describe": {
      "columns": [
        {
          "name": "circle_id!: CircleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "image!: ImageId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "member_count!",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "creator_id!: UserId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "created_at!",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "joined!",
          "ordinal": 8,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Uuid"
        ]
      }
    },
    "query": "\nselect  id            as \"circle_id!: CircleId\",\n        display_name  as \"display_name!\",\n        description   as \"description!\",\n        image         as \"image!: ImageId\",\n        member_count  as \"member_count!\",\n        creator_id    as \"creator_id!: UserId\",\n        created_at    as \"created_at!\",\n        updated_at,\n        exists(select 1 from circle_member where user_id = $2 and circle.id = circle_member.id) as \"joined!\"\nfrom circle\ninner join unnest($1::uuid[])\nwith ordinality t(id, ord) using (id)\n"
  },
  "26efd17cb0658fa49a15076f4b0a628fe22eb3dd3b2c3a466eb9eae6880b9eb3": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "resource_type_id!: ResourceTypeId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "resource_content!",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name         as \"display_name!\",\n       resource_type_id     as \"resource_type_id!: ResourceTypeId\",\n       resource_content    as \"resource_content!\"\nfrom playlist_data_resource \"jdar\"\nwhere playlist_data_id = $1\n  and jdar.id = $2\n        "
  },
  "2771396d20d869e9cec94affe1be6219c175fd8b0303f0f7fa33ffbb11c1cc01": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from resource_like\nwhere resource_id = $1 and user_id = $2\n    "
  },
  "27f199cc02f9f0907e721289cef732c416f8ae49849f3f6ecb341b98c007106c": {
    "describe": {
      "columns": [
        {
          "name": "account_id!: AccountId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "account_type!: AccountType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "stripe_customer_id?: CustomerId",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "payment_method?: serde_json::Value",
          "ordinal": 3,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    account_id as \"account_id!: AccountId\",\n    account_type as \"account_type!: AccountType\",\n    stripe_customer_id as \"stripe_customer_id?: CustomerId\",\n    payment_method as \"payment_method?: serde_json::Value\",\n    created_at,\n    updated_at\nfrom account\njoin user_account using (account_id)\nwhere user_account.user_id = $1\n"
  },
  "29a3fff0ef9ba759cb66de761d80243c888b264c14cfc2045ded1d2403c9d453": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate playlist_data_resource\nset resource_type_id = coalesce($2, resource_type_id)\nwhere id = $1 and $2 is distinct from resource_type_id\n            "
  },
  "2ab2664126a2fe3c1f250ef588a47ca653de0e2544d378347dc665f81685a65f": {
    "describe": {
      "columns": [
        {
          "name": "published_at?",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect published_at  as \"published_at?\"\nfrom resource\nwhere id = $1\n    "
  },
  "2b5917ce47d524b21cfd1b402fc774c68a119d81d8b9146ce9413d3b42567067": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from playlist where playlist.id = $4 and playlist.author_id <> $1)\n) as \"authed!\"\n"
  },
  "2c8896d6d67a29594c0be64d8aa6bb861b28bd669bf64caf6d267e945e9bf398": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "location?",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "bio?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "jig_count?",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "resource_count?",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "course_count?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "playlist_count?",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "total_asset_count!",
          "ordinal": 15,
          "type_info": "Int8"
        },
        {
          "name": "circles!: Vec<CircleId>",
          "ordinal": 16,
          "type_info": "UuidArray"
        },
        {
          "name": "following!",
          "ordinal": 17,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\n        with follower as (\n            select (array_agg(follower_id))[1]\n            from user_follow\n            where user_id = $1\n            group by followed_at\n            order by followed_at desc\n        ),\n        cte as (\n            select * from unnest(array(select follower.array_agg from follower)) with ordinality t(id, ord) order by ord\n        )\n        select  \"user\".id         as \"id!: UserId\",\n                username               as \"username!\",\n                given_name             as \"given_name!\",\n                family_name            as \"family_name!\",\n                profile_image_id       as \"profile_image?: ImageId\",\n                badge                  as \"badge?: UserBadge\",\n                (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)      as \"languages_spoken?: Vec<String>\",\n                (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n                (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n                (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?\",\n                (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from jig where jig.author_id = \"user\".id and jig.published_at is not null)      as \"jig_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from resource where resource.author_id = \"user\".id and resource.published_at is not null)      as \"resource_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from course where course.author_id = \"user\".id and course.published_at is not null)      as \"course_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null)      as \"playlist_count?\",\n                ((select count(*) from jig where jig.author_id = \"user\".id and jig.published_at is not null) + \n                (select count(*) from resource where resource.author_id = \"user\".id and resource.published_at is not null) + \n                (select count(*) from course where course.author_id = \"user\".id and course.published_at is not null) + \n                (select count(*) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null))      as \"total_asset_count!\",\n                (select array(select circle.id\n                    from circle_member bm\n                    left join circle on bm.id = circle.id\n                    where bm.user_id = \"user\".id or circle.creator_id = \"user\".id\n                )) as \"circles!: Vec<CircleId>\",\n                exists(select 1 from user_follow where follower_id = $4 and user_id = \"user\".id) as \"following!\"\n        from cte\n        inner join user_profile on cte.id = user_profile.user_id\n        inner join \"user\" on (cte.id = \"user\".id)\n        where ord > (1 * $2 * $3)\n        limit $3;\n            "
  },
  "2c9269da9de0d178512713b7fc2789ad3472cc1dcea22eecd5fb941415d37bc4": {
    "describe": {
      "columns": [
        {
          "name": "id: PdfId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into user_pdf_library(user_id)\nvalues($1)\nreturning id as \"id: PdfId\"\n        "
  },
  "2d7bafd7b464bb3dd87cf57bc759efe7e5cb73de4ee63feed43f08e2edc1270f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nwith del_data as (\n    delete from course_data\n        where id is not distinct from $1 or id is not distinct from $2)\ndelete\nfrom course\nwhere id is not distinct from $3\n\n"
  },
  "2d994248b9ca987a534f74b59259b90354229a730cf1b22ad6fe3f8b035e2e46": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "resource_id!: ResourceId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "report_type!: ResourceReportType",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "reporter_id?: Uuid",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "name?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "email?",
          "ordinal": 6,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id                                   as \"id!: ReportId\",\n       resource_id                               as \"resource_id!: ResourceId\",    \n       report_type                          as \"report_type!: ResourceReportType\",                  \n       created_at,\n       reporter_id                          as \"reporter_id?: Uuid\",\n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = reporter_id\n        )                                       as \"name?\",\n        (\n            select email::text\n            from user_email\n            where user_email.user_id = reporter_id\n        )                                       as \"email?\"\nfrom resource_report\nwhere id = $1 and resource_id = $2\n"
  },
  "2e7d45524ed2fe392b804b9225b512539934c9ac4f837f8ae1ad64faab24e2ce": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data\n(display_name, created_at, updated_at, language, last_synced_at, description, privacy_level, other_keywords, translated_keywords, translated_description)\nselect display_name,\n       created_at,\n       updated_at,\n       language,\n       last_synced_at,\n       description,\n       privacy_level,\n       other_keywords,\n       translated_keywords,\n       translated_description::jsonb\nfrom playlist_data\nwhere id = $1\nreturning id\n        "
  },
  "2e8b8fc6284f216dd0ddaba73da461f72cfcd37a805ce30311f45b73f1eb38d2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update resource_curation_data\n        set updated_at = now()\n        where resource_id = $1\n    "
  },
  "2ec95b3f7213532d7d6813c840997e1de03f9b9fba6d0f9cec07873630a1fe23": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb"
        ]
      }
    },
    "query": "\n    update course_data_unit\n    set value = coalesce($3, value)\n    where course_data_id = $1\n      and index = $2\n    "
  },
  "2f6ca33e3cb1e774922b88b18a179fc3d3a95c49c78210e9259a0ae78afe2cba": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "update user_profile set last_synced_at = now() where user_id = any($1)"
  },
  "309109ef31f64630b41aa1fcd908b73399c46ebc23656d54f3266964eedc2bd3": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into user_email (user_id, email)\nselect session.user_id, lower(user_auth_basic.email)\nfrom session\ninner join user_auth_basic on user_auth_basic.user_id = session.user_id\nwhere\n    session.token = $1 and\n    session.expires_at > now() and\n    (session.scope_mask & $2) = $2\nreturning user_id as \"id!: UserId\"\n"
  },
  "30e211c77af70b7a52d9ffde24d7a442e3565e2135840cb8d2646bb7fa048509": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "kind: MediaKind",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "urls!",
          "ordinal": 4,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect id,\n       kind as \"kind: MediaKind\",\n       created_at,\n       updated_at,\n       array(select media_url from web_media_library_url where media_id = $1) as \"urls!\"\nfrom web_media_library\nwhere id = $1"
  },
  "31ce17afc04ee73392c393cd0ad04a56b0b78c6a155dfb0e7a8d8f6397f13b04": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "insert into user_email (user_id, email) values ($1, lower($2::text))"
  },
  "32bbb9dc2446795abc480d132b14960dc9b5d636d4b95d75400cffae27762155": {
    "describe": {
      "columns": [
        {
          "name": "id: AffiliationId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            select id as \"id: AffiliationId\", display_name, created_at, updated_at from affiliation\n            order by index\n        "
  },
  "33b3def525f80ae097847489feda1bcb7cc23f2b24ae237dbb93e17802d5fb74": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "update category set name = $1, updated_at = now() where id = $2"
  },
  "340e501a7da4700b5bccce3e503981333ee8176b2043bf55410d9292833ccea1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data\nset language         = coalesce($2, language),\n    theme            = coalesce($3, theme),\n    updated_at = now()\nwhere id = $1\n  and (($2::text is not null and $2 is distinct from language) or\n       ($3::smallint is not null and $3 is distinct from theme))\n"
  },
  "34b1dd32f76952aba5206b08017300b1a6bc63f329481d1fc5858d0a87fad235": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update resource_curation_data\n    set affiliations = $2\n    where resource_id = $1 and $2 is distinct from affiliations\n                "
  },
  "355368af31f9c974cfebab6c9048d7980072218ba9ece8dc073ec245dd75e8e5": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "language!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 6,
          "type_info": "Jsonb"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 7,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 8,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 9,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 10,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 11,
          "type_info": "RecordArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 12,
          "type_info": "Int2"
        },
        {
          "name": "locked!",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 15,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect id,\n       display_name                                                                  as \"display_name!\",\n       created_at                                                                    as \"created_at!\",\n       updated_at,\n       language                                                                      as \"language!\",\n       description                                                                   as \"description!\",\n       translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n       (\n                select row (resource_data_module.id, kind, is_complete)\n                from resource_data_module\n                where resource_data_id = resource_data.id\n       )                                                  as \"cover?: (ModuleId, ModuleKind, bool)\",\n       array(select row (category_id)\n             from resource_data_category\n             where resource_data_id = resource_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n       array(select row (affiliation_id)\n             from resource_data_affiliation\n             where resource_data_id = resource_data.id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n       array(select row (age_range_id)\n             from resource_data_age_range\n             where resource_data_id = resource_data.id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n       array(\n                select row (rdr.id, rdr.display_name, resource_type_id, resource_content)\n                from resource_data_resource \"rdr\"\n                where rdr.resource_data_id = resource_data.id\n            )                                               as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n       privacy_level                              as \"privacy_level!: PrivacyLevel\",\n       locked                                     as \"locked!\",\n       other_keywords                             as \"other_keywords!\",\n       translated_keywords                        as \"translated_keywords!\"\nfrom resource_data\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\norder by ord asc\n"
  },
  "36005548de905f2ece80b219f2e9f5e9c43d646c5e24f7b99e0e4de639f4295d": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect cdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom playlist_data_module \"cdm\"\ninner join playlist on playlist.live_id = cdm.playlist_data_id\nwhere cdm.id is not distinct from $1\n"
  },
  "37362a36cc3729a69d0f7db3d7b6dc381a35293d3ac94d2da2fd655322e73bbe": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate resource_curation_data\nset display_name = $2\nwhere resource_id = $1 and $2 is distinct from display_name\n            "
  },
  "3748ef20e3bb94c3218657a8aca6c8fc7ba28e9caacc752774ab527540981175": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid",
          "Bool",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(jig.id))[1]\n            from jig\n                  inner join jig_data jd on (draft_id = jd.id or (live_id = jd.id and jd.last_synced_at is not null and published_at is not null))\n                  left join jig_admin_data \"admin\" on admin.jig_id = jig.id\n                  left join jig_data_additional_resource \"resource\" on jd.id = resource.jig_data_id\n            where (jd.draft_or_live = $1 or $1 is null)\n              and (author_id = $2 or $2 is null)\n              and (blocked = $3 or $3 is null)\n              and (jd.privacy_level = any($4) or $4 = array[]::smallint[])\n              and (resource.resource_type_id = any($5) or $5 = array[]::uuid[])\n            group by updated_at, created_at, jig.published_at, admin.jig_id, jig_id\n        )\n            select count(*) as \"count!\" from unnest(array((select cte.array_agg from cte))) with ordinality t(id\n           , ord)\n        "
  },
  "3765d16e8cb33d735c7cffb2c54b7451bf087dd7382c39ae9f251e1b0e7cd876": {
    "describe": {
      "columns": [
        {
          "name": "valid!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from circle where id = $1) as \"valid!\"\n"
  },
  "37733ecf394ecc562185c51b3465186f6c539f6b456c8c6a19a8929b710b7587": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into circle_member(id, user_id) values($1, $2)\n"
  },
  "37aab869785f4e1dca931fbe7ba47fce2bda3bba7b1cad074b9f6b9ff6d4027d": {
    "describe": {
      "columns": [
        {
          "name": "account_id: AccountId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select account_id as \"account_id: AccountId\" from school where school_id = $1"
  },
  "38f4583733b6c9997f177207df1454333810b9c7de7d7993b9b20f9b1a6efaf6": {
    "describe": {
      "columns": [
        {
          "name": "id: CircleId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into circle (display_name, description, image, creator_id) values ($1, $2, $3, $4)\nreturning id as \"id: CircleId\"\n        "
  },
  "391179cc32e75ffc1449762c744f7b5f1e6eb52eb5f10fd6288f7afc59383811": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom course_data_resource\nwhere course_data_id = $1\n   or course_data_id = $2\n    and id = $3\n        "
  },
  "3942e29aed4f2a0b9ec6801f805cf42a0ce6592ae4077c3e5d3d7375370ff18d": {
    "describe": {
      "columns": [
        {
          "name": "plan_id: PlanId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "plan_type: PlanType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "price_id: StripePriceId",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at: DateTime<Utc>",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at: DateTime<Utc>",
          "ordinal": 4,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    plan_id as \"plan_id: PlanId\",\n    plan_type as \"plan_type: PlanType\",\n    price_id as \"price_id: StripePriceId\",\n    created_at as \"created_at: DateTime<Utc>\",\n    updated_at as \"updated_at: DateTime<Utc>\"\nfrom subscription_plan\nwhere plan_id = $1\n"
  },
  "396d7483ca9925bbfa041ecb8e27425869aada253e3c63dcb709825313875d79": {
    "describe": {
      "columns": [
        {
          "name": "course_id: CourseId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "published_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 7,
          "type_info": "Int2"
        },
        {
          "name": "language",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "likes",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "plays",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "duration",
          "ordinal": 16,
          "type_info": "Int8"
        },
        {
          "name": "rating?: CourseRating",
          "ordinal": 17,
          "type_info": "Int2"
        },
        {
          "name": "blocked",
          "ordinal": 18,
          "type_info": "Bool"
        },
        {
          "name": "curated",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "premium",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 21,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 22,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "units!: Vec<(CourseUnitId, String, String, Value)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4"
        ]
      }
    },
    "query": "\nwith cte as (\n    select id      as \"course_id\",\n           creator_id,\n           author_id,\n           likes,\n           plays,\n           live_up_to_date,\n           case\n               when $2 = 0 then course.draft_id\n               when $2 = 1 then course.live_id\n               end as \"draft_or_live_id\",\n           published_at,\n           rating,\n           blocked,\n           curated,\n           is_premium\n    from course\n    left join course_admin_data \"admin\" on admin.course_id = course.id\n    where id = $1\n)\nselect cte.course_id                                          as \"course_id: CourseId\",\n       display_name,\n       creator_id                                             as \"creator_id?: UserId\",\n       author_id                                              as \"author_id?: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id)            as \"author_name\",\n       published_at,\n       updated_at,\n       privacy_level                                       as \"privacy_level!: PrivacyLevel\",\n       language,\n       description,\n       translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n       likes,\n       plays,\n       live_up_to_date,\n       other_keywords,\n       translated_keywords,\n       duration,\n       rating                                               as \"rating?: CourseRating\",\n       blocked                                              as \"blocked\",\n       curated,\n       is_premium                                           as \"premium\",\n       (\n            select row(course_data_module.id, kind, is_complete)\n            from course_data_module\n            where course_data_id = cte.draft_or_live_id and \"index\" = 0\n            order by \"index\"\n        )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n       array(select row (category_id)\n             from course_data_category\n             where course_data_id = cte.draft_or_live_id)     as \"categories!: Vec<(CategoryId,)>\",\n       array(\n             select row (pddr.id, pddr.display_name, resource_type_id, resource_content)\n             from course_data_resource \"pddr\"\n             where pddr.course_data_id = cte.draft_or_live_id\n       )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n       array(\n            select row(pddu.unit_id, pddu.display_name, pddu.description, pddu.value)\n            from course_data_unit \"pddu\"\n            where pddu.course_data_id = course_data.id\n            order by \"index\"\n    )                                                     as \"units!: Vec<(CourseUnitId, String, String, Value)>\"\nfrom course_data\n         inner join cte on cte.draft_or_live_id = course_data.id\n"
  },
  "399f537a8091d51635c2cd32bf16449c26317d1f56c576064968a2bfd57953e0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Uuid",
          "Uuid",
          "Text",
          "Text",
          "Int2",
          "Bool",
          "Bool",
          "Bool",
          "Bool",
          "Text",
          "Bool",
          "Text",
          "Bool",
          "Text"
        ]
      }
    },
    "query": "\nupdate locale_entry\nset\n    bundle_id = coalesce(bundle_id, $2),\n    item_kind_id = coalesce($3, item_kind_id),\n    english = coalesce($4, english),\n    hebrew = coalesce($5, hebrew),\n    status = coalesce($6, status),\n    in_app = coalesce($7, in_app),\n    in_element = coalesce($8, in_element),\n    in_mock = coalesce($9, in_mock),\n    section = case when $10 then $11 else section end,\n    zeplin_reference = case when $12 then $13 else zeplin_reference end,\n    comments = case when $14 then $15 else comments end\nwhere id = $1"
  },
  "39a8d9f6b645305b1a6282c110154c481dcdd211fabf7944655438c13b55511c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "update category set name = $1 where id = $2"
  },
  "39b31581380a0a23120ba243d769d95b2b7da4abd9691e7c16262e27b57fe272": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate resource_data_module\nset index = index - 1\nwhere resource_data_id = $1\n  and index > $2\n"
  },
  "39d36f875c957786a521b3a8c0e706950cb60e19fa03c95cb169c8360ef3a995": {
    "describe": {
      "columns": [
        {
          "name": "resource_id: ResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "creator_id: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "published_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "language",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 11,
          "type_info": "Jsonb"
        },
        {
          "name": "likes",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "views",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 14,
          "type_info": "Bool"
        },
        {
          "name": "locked",
          "ordinal": 15,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "rating?: ResourceRating",
          "ordinal": 18,
          "type_info": "Int2"
        },
        {
          "name": "blocked",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "curated",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "premium",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 23,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 26,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 27,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        null,
        false,
        false,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select id      as \"resource_id\",\n           creator_id,\n           author_id,\n           likes,\n           views,\n           live_up_to_date,\n           case\n               when $2 = 0 then resource.draft_id\n               when $2 = 1 then resource.live_id\n               end as \"draft_or_live_id\",\n           published_at,\n           rating,\n           blocked,\n           curated,\n           is_premium\n    from resource\n    left join resource_admin_data \"admin\" on admin.resource_id = resource.id\n    where id = $1\n)\nselect cte.resource_id                                          as \"resource_id: ResourceId\",\n        display_name,\n        creator_id                                          as \"creator_id: UserId\",\n        author_id                                           as \"author_id: UserId\",\n        (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id)            as \"author_name\",\n        created_at,\n        updated_at,\n        published_at,\n        privacy_level                                       as \"privacy_level!: PrivacyLevel\",\n        language,\n        description,\n        translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n        likes,\n        views,\n        live_up_to_date,\n        locked,\n        other_keywords,\n        translated_keywords,\n        rating                                               as \"rating?: ResourceRating\",\n        blocked                                              as \"blocked\",\n        exists(select 1 from resource_like where resource_id = $1 and user_id = $3)  as \"is_liked!\",\n        curated,\n        is_premium                                           as \"premium\",\n        (\n                select row(resource_data_module.id, kind, is_complete)\n                from resource_data_module\n                where resource_data_id = resource_data.id\n        )                                               as \"cover?: (ModuleId, ModuleKind, bool)\",\n        array(select row (category_id)\n                from resource_data_category\n                where resource_data_id = cte.draft_or_live_id)     as \"categories!: Vec<(CategoryId,)>\",\n        array(select row (affiliation_id)\n                from resource_data_affiliation\n                where resource_data_id = cte.draft_or_live_id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n        array(select row (age_range_id)\n                from resource_data_age_range\n                where resource_data_id = cte.draft_or_live_id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n        array(\n                select row (rdr.id, rdr.display_name, resource_type_id, resource_content)\n                from resource_data_resource \"rdr\"\n                where rdr.resource_data_id = cte.draft_or_live_id\n    )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\"\nfrom resource_data\n         inner join cte on cte.draft_or_live_id = resource_data.id\n"
  },
  "39f64cd116aebc8283a0b732722a5d198b6e48d255c1f3de2ad0919bee76fb4b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_module\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere course_data_id = $1 and index between $3 and $2\n"
  },
  "3a4bccd79e5f29fff7f31c82be3d3cb1f6f7a068503bd0b3104182f8f47ef0a9": {
    "describe": {
      "columns": [
        {
          "name": "check_from!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (select 1 from \"user\" where id = $1) as \"check_from!\"\n        "
  },
  "3ad66986079ea2df21f1a6af0c50510d362a19addcf3bc0f62b8f3948ea14cf8": {
    "describe": {
      "columns": [
        {
          "name": "id: AnimationStyleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nwith cte as (\n    select distinct style_id as id\n    from animation_style\n)\nselect id as \"id: AnimationStyleId\", display_name, created_at, updated_at\nfrom cte inner join style using (id)\norder by index\n        "
  },
  "3b2e5122650710a48747204a38c55ed72b3b28c24bd1a2d8b4a7eae178acf34e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\nupdate resource_data\nset other_keywords = $2,\n    translated_keywords = (case when ($3::text is not null) then $3::text else (translated_keywords) end),\n    updated_at = now()\nwhere id = $1 and $2 is distinct from other_keywords"
  },
  "3b926329fcaf30335c56ff3e90b216622443ca7d240d412895995eb8ed8bae5b": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "location?",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "bio?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "jig_count?",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "resource_count?",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "course_count?",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "playlist_count?",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "total_asset_count!",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "circles!: Vec<CircleId>",
          "ordinal": 16,
          "type_info": "UuidArray"
        },
        {
          "name": "following!",
          "ordinal": 17,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Int4",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\n        with cte1 as (\n            select (array_agg(public_user.user_id))[1]\n            from public_user\n            left join user_asset_data \"uad\" on public_user.user_id = uad.user_id\n            inner join \"user\" on public_user.user_id = \"user\".id \n            left join circle_member \"cm\" on cm.user_id = public_user.user_id\n            where cm.id = any($1) or $1 = array[]::uuid[]\n            group by \"user\".created_at, total_asset_count\n            order by case when $4 = 0 then total_asset_count\n                else extract(epoch from \"user\".created_at)\n            end desc        \n        ),\n        cte2 as (\n            select * from unnest(array(select cte1.array_agg from cte1)) with ordinality t(id\n           , ord) order by ord\n        )\n        select  user_profile.user_id                as \"id!: UserId\",\n                username               as \"username!\",\n                given_name             as \"given_name!\",\n                family_name            as \"family_name!\",\n                profile_image_id       as \"profile_image?: ImageId\",\n                badge                  as \"badge?: UserBadge\",\n                (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)      as \"languages_spoken?: Vec<String>\",\n                (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n                (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n                (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?\",\n                (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n                (select (CASE WHEN jig_count > 0 THEN jig_count else null end))      as \"jig_count?\",\n                (select (CASE WHEN resource_count > 0 THEN resource_count else null end))      as \"resource_count?\",\n                (select (CASE WHEN course_count > 0 THEN course_count else null end))      as \"course_count?\",\n                (select (CASE WHEN playlist_count > 0 THEN playlist_count else null end))      as \"playlist_count?\",\n                total_asset_count      as \"total_asset_count!\",\n                (select array(select circle.id\n                    from circle_member bm\n                    inner join circle on bm.id = circle.id\n                    where bm.user_id = \"user\".id\n                )) as \"circles!: Vec<CircleId>\",\n                exists(select 1 from user_follow where follower_id = $5 and user_id = \"user\".id) as \"following!\"\n        from cte2\n        inner join user_profile on cte2.id = user_profile.user_id\n        inner join user_asset_data \"uad\" on cte2.id = uad.user_id  \n        inner join \"user\" on cte2.id = \"user\".id\n        where ord > (1 * $2 * $3)\n        order by ord\n        limit $3\n            "
  },
  "3bae9ebe8985f50000f0f1a3ba9badfaddfef99574b5ca5c35dd0aa8ca8b0fc8": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect cdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom course_data_module \"cdm\"\ninner join course on course.live_id = cdm.course_data_id\nwhere cdm.id is not distinct from $1\n"
  },
  "3baefe8f0818e61f1611c99aa8d808d7c2c9717a88bfeb161433b733f2928fd1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                                update image_metadata\n                                set translated_description = $2,\n                                    last_synced_at = null\n                                where id = $1\n                            "
  },
  "3bc3d5919da8639f36fa262d3f7294004774ae8c98b735b8c569301c6d9fba60": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "library: MediaLibrary",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "last_used: DateTime<Utc>",
          "ordinal": 2,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into user_recent_image (user_id, image_id, media_library)\nvalues ($1, $2, $3)\nON CONFLICT (user_id, image_id) DO UPDATE\n  SET user_id = $1,\n    image_id = $2,\n    media_library = $3,\n    last_used = now()\nreturning image_id as \"id: ImageId\", media_library as \"library: MediaLibrary\", last_used as \"last_used: DateTime<Utc>\";\n        "
  },
  "3c1025c0e5077f8551901ecf90a36391a3e6e6b43d0046290ce9c6ec12e03236": {
    "describe": {
      "columns": [
        {
          "name": "jig_id: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "privacy_level: PrivacyLevel",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "published_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "liked_count",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "play_count!",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "display_name!",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 15,
          "type_info": "Jsonb"
        },
        {
          "name": "direction!: TextDirection",
          "ordinal": 16,
          "type_info": "Int2"
        },
        {
          "name": "display_score!",
          "ordinal": 17,
          "type_info": "Bool"
        },
        {
          "name": "track_assessments!",
          "ordinal": 18,
          "type_info": "Bool"
        },
        {
          "name": "drag_assist!",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "theme!: ThemeId",
          "ordinal": 20,
          "type_info": "Int2"
        },
        {
          "name": "audio_background!: Option<AudioBackground>",
          "ordinal": 21,
          "type_info": "Int2"
        },
        {
          "name": "draft_or_live!: DraftOrLive",
          "ordinal": 22,
          "type_info": "Int2"
        },
        {
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "modules!: Vec<(ModuleId, ModuleKind, bool)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 26,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 27,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 28,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 29,
          "type_info": "RecordArray"
        },
        {
          "name": "locked!",
          "ordinal": 30,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 31,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 32,
          "type_info": "Text"
        },
        {
          "name": "rating!: Option<JigRating>",
          "ordinal": 33,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 34,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 35,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 36,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        false,
        true,
        true,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Int2Array",
          "UuidArray",
          "Int4",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select array_agg(jd.id)\n    from jig_data \"jd\"\n          inner join jig on (draft_id = jd.id or (live_id = jd.id and jd.last_synced_at is not null and published_at is not null))\n          left join jig_admin_data \"admin\" on admin.jig_id = jig.id\n          left join jig_data_additional_resource \"resource\" on jd.id = resource.jig_data_id\n    where (author_id = $1 or $1 is null)\n        and (jd.draft_or_live = $2 or $2 is null)\n        and (blocked = $3 or $3 is null)\n        and (jd.privacy_level = any($4) or $4 = array[]::smallint[])\n        and (resource.resource_type_id = any($5) or $5 = array[]::uuid[])\n    group by updated_at, created_at, jig.published_at, admin.jig_id\n    order by case when $6 = 0 then created_at\n        when $6 = 1 then published_at\n        else coalesce(updated_at, created_at)\n  end desc, jig_id\n),\ncte1 as (\n    select * from unnest(array((select cte.array_agg[1] from cte))) with ordinality t(id\n   , ord) order by ord\n)\nselect jig.id                                              as \"jig_id: JigId\",\n    privacy_level                                       as \"privacy_level: PrivacyLevel\",\n    creator_id                                          as \"creator_id?: UserId\",\n    author_id                                           as \"author_id?: UserId\",\n    (select given_name || ' '::text || family_name\n        from user_profile\n     where user_profile.user_id = author_id)            as \"author_name\",\n    created_at,\n    updated_at,\n    published_at,\n    liked_count,\n    live_up_to_date,\n    exists(select 1 from jig_like where jig_id = jig.id and user_id = $9) as \"is_liked!\",\n    (\n         select play_count\n         from jig_play_count\n         where jig_play_count.jig_id = jig.id\n    )                                                   as \"play_count!\",\n   display_name                                                                  as \"display_name!\",\n   language                                                                      as \"language!\",\n   description                                                                   as \"description!\",\n   translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n   direction                                                                     as \"direction!: TextDirection\",\n   display_score                                                                 as \"display_score!\",\n   track_assessments                                                             as \"track_assessments!\",\n   drag_assist                                                                   as \"drag_assist!\",\n   theme                                                                         as \"theme!: ThemeId\",\n   audio_background                                                              as \"audio_background!: Option<AudioBackground>\",\n   draft_or_live                                                                 as \"draft_or_live!: DraftOrLive\",\n   array(select row (unnest(audio_feedback_positive)))                           as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\",\n   array(select row (unnest(audio_feedback_negative)))                           as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n   array(\n           select row (jig_data_module.id, kind, is_complete)\n           from jig_data_module\n           where jig_data_id = jig_data.id\n           order by \"index\"\n    )                                               as \"modules!: Vec<(ModuleId, ModuleKind, bool)>\",\n   array(select row (category_id)\n         from jig_data_category\n         where jig_data_id = jig_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n   array(select row (affiliation_id)\n         from jig_data_affiliation\n         where jig_data_id = jig_data.id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n   array(select row (age_range_id)\n         from jig_data_age_range\n         where jig_data_id = jig_data.id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n   array(\n            select row (jdar.id, jdar.display_name, resource_type_id, resource_content)\n            from jig_data_additional_resource \"jdar\"\n            where jdar.jig_data_id = jig_data.id\n        )                                               as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n   locked                                     as \"locked!\",\n   other_keywords                             as \"other_keywords!\",\n   translated_keywords                        as \"translated_keywords!\",\n   rating                                     as \"rating!: Option<JigRating>\",\n   blocked                                    as \"blocked!\",\n   curated                                    as \"curated!\",\n   is_premium                                 as \"premium!\"\nfrom cte1\ninner join jig_data on cte1.id = jig_data.id\ninner join jig on (\n    jig_data.id = jig.draft_id\n    or (\n        jig_data.id = jig.live_id\n        and last_synced_at is not null\n        and jig.published_at is not null\n    )\n)\nleft join jig_admin_data \"admin\" on admin.jig_id = jig.id\nwhere ord > (1 * $7 * $8)\norder by ord asc\nlimit $8\n"
  },
  "3cda9dc75a601fac9d7e1dea7520bafe04c37e7e3e761c8d0c2a11479fc03376": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid",
          "Bool",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select array_agg(rd.id)\n            from resource_data \"rd\"\n                  inner join resource on (draft_id = rd.id or (live_id = rd.id and rd.last_synced_at is not null and published_at is not null))\n                  left join resource_admin_data \"admin\" on admin.resource_id = resource.id\n                  left join resource_data_resource \"rdr\" on rd.id = rdr.resource_data_id\n            where (rd.draft_or_live = $1 or $1 is null)\n                and (author_id = $2 or $2 is null)\n                and (blocked = $3 or $3 is null)\n                and (rd.privacy_level = any($4) or $4 = array[]::smallint[])\n                and (rdr.resource_type_id = any($5) or $5 = array[]::uuid[])\n            group by updated_at, created_at, resource.published_at, admin.resource_id, resource_id\n        )\n            select count(*) as \"count!\" from unnest(array((select cte.array_agg[1] from cte))) with ordinality t(id\n           , ord)\n        "
  },
  "3cfa772cac043b6accabfde5a1fd872956182b08d67b5a9ab2e35a6bb95405b3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "delete from session where user_id = $1 and (scope_mask | $2) <> 0"
  },
  "3d7f34b0a68663b4dfabdda7b80b57be439217d19e68cd97080853168abb620b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from resource_data where id = $1\n    "
  },
  "3e940a4ae4a432d2cc0ce4a8de4f98eacd1a9b8b356ecfaeeb5c9cd686ad008e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n        update user_email\n        set email = $3::text\n        where user_id = $1 and email = $2::text\n        "
  },
  "3f7ad7f5eb03139f9584aa6928a1b805b4f8908a1df023a12a7cf8cba3d56d26": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "delete from session where token = $1"
  },
  "406a9225e00ac74b1e4bb2988774ca554e97ebe660c07bc1184b7ac93c8c5e43": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into user_image_library (user_id, size)\nvalues ($1, $2)\nreturning id as \"id: ImageId\"\n"
  },
  "40bb444f63e339442ab06c565b77f38a9196dcce2afcd517807106fe0b8719f3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data_module (\"index\", jig_data_id, kind, is_complete, contents)\nselect \"index\", $2 as \"jig_id\", kind, is_complete, contents\nfrom jig_data_module\nwhere jig_data_id = $1\n        "
  },
  "422a1de63f939133e80b36a64ecb1bece887bac87023707fee599f6e63f131d3": {
    "describe": {
      "columns": [
        {
          "name": "admin",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "select admin from user_account where user_id = $1 and account_id = $2"
  },
  "43082d5f34ede50dd2d6b87b05e46f7b293f1dca74afba83f33361d5314b746b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset last_synced_at = now()\nwhere playlist_data.id = any (select live_id from playlist where playlist.id = any ($1))\n"
  },
  "43fe8702f219dcd783e0f253f7dfe3c1786829a7dc2d043a8e79eb3deaf061e9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate user_font\nset index = index - 1\nwhere index > $2 and user_id = $1\n        "
  },
  "4430bd26da5d8c88b520bdb3933083e2dcc3a67b8416f4cc4c9cb2d5e36baaab": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nselect user_id          \"id!: UserId\"\nfrom user_auth_basic\nwhere\n    email = $1::text and\n    not exists(select 1 from user_email where email = $1)\n"
  },
  "44559bdf72e9071b9dd849039e4ae6ccf90281a3e751b1bd2ff5ecf18132e53e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid",
          "Uuid",
          "Timestamptz",
          "Int2"
        ]
      }
    },
    "query": "insert into session (token, user_id, impersonator_id, expires_at, scope_mask) values ($1, $2, $3, $4, $5)"
  },
  "457c728cb149fc869a3625cb05fc1188616305fa009f1dedcafecd42e3814998": {
    "describe": {
      "columns": [
        {
          "name": "plan_id: PlanId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "plan_type: PlanType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "price_id: StripePriceId",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at: DateTime<Utc>",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at: DateTime<Utc>",
          "ordinal": 4,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\nselect\n    plan_id as \"plan_id: PlanId\",\n    plan_type as \"plan_type: PlanType\",\n    price_id as \"price_id: StripePriceId\",\n    created_at as \"created_at: DateTime<Utc>\",\n    updated_at as \"updated_at: DateTime<Utc>\"\nfrom subscription_plan\nwhere plan_type = $1\n"
  },
  "45d86a834246b8317d003c67da62ac549ae35c246c037b3121d9a033bf7c53b8": {
    "describe": {
      "columns": [
        {
          "name": "resource_id: ResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "privacy_level: PrivacyLevel",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "published_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "views",
          "ordinal": 9,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "display_name!",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 15,
          "type_info": "Jsonb"
        },
        {
          "name": "draft_or_live!: DraftOrLive",
          "ordinal": 16,
          "type_info": "Int2"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 17,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 18,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 19,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 20,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 21,
          "type_info": "RecordArray"
        },
        {
          "name": "locked!",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 23,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 24,
          "type_info": "Text"
        },
        {
          "name": "rating!: Option<ResourceRating>",
          "ordinal": 25,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 26,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 28,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        false,
        true,
        true,
        false,
        false,
        false,
        null,
        false,
        false,
        false,
        false,
        true,
        null,
        null,
        null,
        null,
        null,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool",
          "Int2Array",
          "UuidArray",
          "Int2",
          "Int4",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select array_agg(rd.id)\n    from resource_data \"rd\"\n          inner join resource on (draft_id = rd.id or (live_id = rd.id and rd.last_synced_at is not null and published_at is not null))\n          left join resource_admin_data \"admin\" on admin.resource_id = resource.id\n          left join resource_data_resource \"rdr\" on rd.id = rdr.resource_data_id\n    where (author_id = $1 or $1 is null)\n        and (blocked = $2 or $2 is null)\n        and (rd.privacy_level = any($3) or $3 = array[]::smallint[])\n        and (rdr.resource_type_id = any($4) or $4 = array[]::uuid[])\n        and (draft_or_live = $5 or $5 is null)\n    group by updated_at, created_at, resource.published_at, admin.resource_id\n    order by case when $6 = 0 then created_at\n        when $6 = 1 then published_at\n        else coalesce(updated_at, created_at)\n  end desc, resource_id\n),\ncte1 as (\n    select * from unnest(array((select cte.array_agg[1] from cte))) with ordinality t(id\n   , ord) order by ord\n)\nselect resource.id                                              as \"resource_id: ResourceId\",\n    privacy_level                                       as \"privacy_level: PrivacyLevel\",\n    creator_id                                          as \"creator_id?: UserId\",\n    author_id                                           as \"author_id?: UserId\",\n    (select given_name || ' '::text || family_name\n        from user_profile\n     where user_profile.user_id = author_id)            as \"author_name\",\n    created_at,\n    updated_at,\n    published_at,\n    likes,\n    views,\n    live_up_to_date,\n    exists(select 1 from resource_like where resource_id = resource.id and user_id = $9)                         as \"is_liked!\",\n   display_name                                                                  as \"display_name!\",\n   language                                                                      as \"language!\",\n   description                                                                   as \"description!\",\n   translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n   draft_or_live                                                                 as \"draft_or_live!: DraftOrLive\",\n   (\n       select row(resource_data_module.id, kind, is_complete)\n       from resource_data_module\n       where resource_data_id = resource_data.id\n    )                                               as \"cover?: (ModuleId, ModuleKind, bool)\",\n   array(select row (category_id)\n         from resource_data_category\n         where resource_data_id = resource_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n   array(select row (affiliation_id)\n         from resource_data_affiliation\n         where resource_data_id = resource_data.id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n   array(select row (age_range_id)\n         from resource_data_age_range\n         where resource_data_id = resource_data.id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n   array(\n            select row (rdr.id, rdr.display_name, resource_type_id, resource_content)\n            from resource_data_resource \"rdr\"\n            where rdr.resource_data_id= resource_data.id\n        )                                               as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n   locked                                     as \"locked!\",\n   other_keywords                             as \"other_keywords!\",\n   translated_keywords                        as \"translated_keywords!\",\n   rating                                     as \"rating!: Option<ResourceRating>\",\n   blocked                                    as \"blocked!\",\n   curated                                    as \"curated!\",\n   is_premium                                 as \"premium!\"\nfrom cte1\ninner join resource_data on cte1.id = resource_data.id\ninner join resource on (\n    resource_data.id = resource.draft_id\n    or (\n        resource_data.id = resource.live_id\n        and last_synced_at is not null\n        and resource.published_at is not null\n    )\n)\nleft join resource_admin_data \"admin\" on admin.resource_id = resource.id\nwhere ord > (1 * $7 * $8)\norder by ord asc\nlimit $8\n"
  },
  "46c33b81e5196642a75aa8374f72f013f66a7b798de0b2a5a5f5a2928b1f7d7d": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect index from course_data_unit\nwhere course_data_id = $1 and course_data_unit.unit_id is not distinct from $2\n"
  },
  "477cc11eb6ff88e4c8c0779c11ab3480de42748968c29564bc0e70db1f18a9bc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Int2",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_data_module\nset contents    = coalesce($3, contents),\n    kind        = coalesce($4, kind),\n    is_complete = coalesce($5, is_complete)\nwhere jig_data_id = $1\n  and index = $2\n"
  },
  "4783cc4d1b317c1b58f392738ab9399d63ec4926354e35348c91fa13564f016d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_audio_upload set processed_at = now(), processing_result = true where audio_id = $1"
  },
  "47f87006d700bed96cbf873d8addacbd9c160cf71e5cd0a4543b1fd7754d563d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from user_recent_image\nwhere user_id = $1 and image_id = $2\n            "
  },
  "4808ae9f63ec5723740307315d7e321d5430e5163c3febb1aed395fa5e1db671": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect resource_data.id,\n       display_name\nfrom resource_data\ninner join resource on live_id = resource_data.id\nwhere display_name <> '' and translated_name = '{}'\nand published_at is not null\nand name_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 10 for no key update skip locked;\n         "
  },
  "493430ee614459b5e6c10b8e1c36c73590856fe597a77c5db6be8e8c768f8452": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset privacy_level = coalesce($2, privacy_level),\n    updated_at = now()\nwhere id = $1\n  and $2 is distinct from privacy_level\n    "
  },
  "497d102ecb4180c0d121a24d6005b7bf078dd8c59dc68949b82c62bbb41951c0": {
    "describe": {
      "columns": [
        {
          "name": "id!: CommentId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "jig_id!: JigId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "comment",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "author_id!: Uuid",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "author_name!",
          "ordinal": 5,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id                                   as \"id!: CommentId\",\n       jig_id                               as \"jig_id!: JigId\",                      \n       comment,\n       created_at,\n       author_id                            as \"author_id!: Uuid\",\n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = author_id\n        )                                       as \"author_name!\"\nfrom jig_curation_comment\nwhere id = $1 and jig_id = $2\n"
  },
  "49b32d516e56680d33cb7719087afaa160328580f2c5a9f548b4f6da3dbdd66f": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect jdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom resource_data_module \"jdm\"\ninner join resource on resource.draft_id = jdm.resource_data_id \nwhere jdm.id is not distinct from $1 \n"
  },
  "49e49fd07ac30a6dde52fa0090ae8a616a808e045e474fedac23568b6d876fdb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data_category(jig_data_id, category_id)\nselect $2, category_id\nfrom jig_data_category\nwhere jig_data_id = $1\n        "
  },
  "4a09cde76f1f96d6371426cce0a43af062a180bd5df8443df2e979894aeac071": {
    "describe": {
      "columns": [
        {
          "name": "playlist_id: PlaylistId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "privacy_level: PrivacyLevel",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "published_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "plays",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "display_name!",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "updated_at",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "language!",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 14,
          "type_info": "Jsonb"
        },
        {
          "name": "draft_or_live!: DraftOrLive",
          "ordinal": 15,
          "type_info": "Int2"
        },
        {
          "name": "other_keywords!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "rating!: Option<PlaylistRating>",
          "ordinal": 18,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 22,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 26,
          "type_info": "RecordArray"
        },
        {
          "name": "items!: Vec<(JigId,)>",
          "ordinal": 27,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        true,
        false,
        false,
        false,
        null,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect playlist.id                                                                as \"playlist_id: PlaylistId\",\n    privacy_level                                                               as \"privacy_level: PrivacyLevel\",\n    creator_id                                                                  as \"creator_id?: UserId\",\n    author_id                                                                   as \"author_id?: UserId\",\n    (select given_name || ' '::text || family_name\n     from user_profile\n     where user_profile.user_id = author_id)                                     as \"author_name\",\n    published_at,\n    likes,\n    plays,\n    live_up_to_date,\n    exists(select 1 from playlist_like where playlist_id = playlist.id and user_id = $2)    as \"is_liked!\",\n    display_name                                                                  as \"display_name!\",\n    updated_at,\n    language                                                                      as \"language!\",\n    description                                                                   as \"description!\",\n    translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n    draft_or_live                                                                 as \"draft_or_live!: DraftOrLive\",\n    other_keywords                                                                as \"other_keywords!\",\n    translated_keywords                                                           as \"translated_keywords!\",\n    rating                                     as \"rating!: Option<PlaylistRating>\",\n    blocked                                    as \"blocked!\",\n    curated                                    as \"curated!\",\n    is_premium                                 as \"premium!\",\n    (\n        select row(playlist_data_module.id, kind, is_complete)\n        from playlist_data_module\n        where playlist_data_id = playlist_data.id and \"index\" = 0\n        order by \"index\"\n    )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n    array(select row (category_id)\n            from playlist_data_category\n            where playlist_data_id = playlist_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n    array(select row (affiliation_id)\n            from playlist_data_affiliation\n            where playlist_data_id = playlist_data.id)          as \"affiliations!: Vec<(AffiliationId,)>\",\n    array(select row (age_range_id)\n            from playlist_data_age_range\n            where playlist_data_id = playlist_data.id)          as \"age_ranges!: Vec<(AgeRangeId,)>\",\n    array(select row (id, display_name, resource_type_id, resource_content)\n                from playlist_data_resource\n                where playlist_data_id = playlist_data.id\n          )                                          as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n    array(\n        select row(jig_id)\n        from playlist_data_jig\n        where playlist_data_jig.playlist_data_id = playlist_data.id\n        order by \"index\"\n    )                                                     as \"items!: Vec<(JigId,)>\"\nfrom playlist_data_jig \"pdj\"\ninner join playlist_data on pdj.playlist_data_id = playlist_data.id\ninner join playlist on\n        playlist_data.id = playlist.live_id\n        and last_synced_at is not null\n        and playlist.published_at is not null\nleft join playlist_admin_data \"admin\" on admin.playlist_id = playlist.id\nwhere jig_id = $1\norder by coalesce(updated_at, created_at) desc\n"
  },
  "4a2d566af2fd9e2d39053c9cbc6c49aba95e0b29119030f2ca2e534c1a09017c": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        select count(follower_id)  as \"count!: i64\"\n        from user_follow\n        where user_id = $1\n            "
  },
  "4a5db1ebad6d217717b56533f1c6147d1decddb324981a107dc95e2bfd8f1872": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "resource_type_id!: ResourceTypeId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "resource_content!",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name         as \"display_name!\",\n       resource_type_id     as \"resource_type_id!: ResourceTypeId\",\n       resource_content    as \"resource_content!\"\nfrom jig_data_additional_resource \"jdar\"\nwhere jig_data_id = $1\n  and jdar.id = $2\n        "
  },
  "4ab4c7e45ea4d4dead6ad479dd764474979f932fbb3f8e65657c946afea2d4eb": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect index from resource_data_module\nwhere resource_data_id = $1 and resource_data_module.id is not distinct from $2\n"
  },
  "4aba8094109d0eec8afa425d389e51a8b139fbc87dd904adfbdfc12504db3d76": {
    "describe": {
      "columns": [
        {
          "name": "account_id!: AccountId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "account_type!: AccountType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "stripe_customer_id?: CustomerId",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "payment_method?: serde_json::Value",
          "ordinal": 3,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    account_id as \"account_id!: AccountId\",\n    account_type as \"account_type!: AccountType\",\n    stripe_customer_id as \"stripe_customer_id?: CustomerId\",\n    payment_method as \"payment_method?: serde_json::Value\",\n    created_at,\n    updated_at\nfrom account\nwhere account_id = $1\n"
  },
  "4b0a802704e088bec4174f5d5998820846fa31f711bd57e683c27891f7a3b12e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_unit\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere course_data_id = $1 and index between $2 and $3\n"
  },
  "4b59765bf5f97002c95e723a2d831e75df863ce1f73be3c0cc7714aee57b54a7": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nselect exists(\n        select 1\n        from user_font\n        where user_id = $1\n            and index = $2\n        for update\n) as \"exists!\"\n        "
  },
  "4ce0b3cd3acb70b250136f3b5d951fb79e8cfec345f875c95582f5b276cbca72": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_audio_upload set processed_at = now(), processing_result = false where audio_id = $1"
  },
  "4d327320e1810b7c419009172dc1137243a3d1d67ec65c614afb0101e374c4fc": {
    "describe": {
      "columns": [
        {
          "name": "id: PdfId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select id as \"id: PdfId\" from user_pdf_library where id = $1"
  },
  "4d342678ea651f6e7f490380f0f42a6fe0146cec33cede8baf574bdde540ea79": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_unit\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere course_data_id = $1 and index between $3 and $2\n"
  },
  "4d406cb8e5d3e19b5e8cb863383e5027dfd3564a28a4a3725acfbc9ebb30e467": {
    "describe": {
      "columns": [
        {
          "name": "author_id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "published_at?",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect author_id    \"author_id: UserId\",\n       published_at  as \"published_at?\"\nfrom resource\nwhere id = $1\n    "
  },
  "4da342b750d6e83378148ab97f88ce799bffc4adafdfb19935281816a7b1327a": {
    "describe": {
      "columns": [
        {
          "name": "id!: SchoolId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!: SchoolNameId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "location?: serde_json::Value",
          "ordinal": 2,
          "type_info": "Jsonb"
        },
        {
          "name": "email!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "website",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "organization_type",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "account_id!: AccountId",
          "ordinal": 8,
          "type_info": "Uuid"
        },
        {
          "name": "created_at",
          "ordinal": 9,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 10,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        null,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    school_id as \"id!: SchoolId\",\n    school_name_id as \"name!: SchoolNameId\",\n    location as \"location?: serde_json::Value\",\n    email::text as \"email!\",\n    description,\n    profile_image_id as \"profile_image?: ImageId\",\n    website,\n    organization_type,\n    account_id as \"account_id!: AccountId\",\n    created_at,\n    updated_at\nfrom school\nwhere school_id = $1\n"
  },
  "4da84f765be4de8af75314d6e1912c42adad868e0db6011eda70acc0c4e78a2f": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\n    insert into resource_report(resource_id, report_type)\n    values ($1, $2)\n    returning id as \"id!: ReportId\"\n            "
  },
  "4e39ede2fa760d6ea636ace5bcc8b0848ff8f8d2b480eb937e463ce0e45963fa": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1\n    from playlist_like\n    where\n        playlist_id = $1\n        and user_id = $2\n) as \"exists!\"\n    "
  },
  "4e803ce9db7e63196433531408bdcd6378a8580e06ab09ab6a302924b9444929": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset updated_at = now()\nfrom playlist\nwhere playlist.live_id = $1\n            "
  },
  "4fb49fe4ad3204755e0a09d701e36d421c6a6696509bd37c238b1a835e022d7b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_like(jig_id, user_id)\nvalues ($1, $2)\n            "
  },
  "50ff48a8d492e560f61066b5217a70876d23552f79fcb6d43dbbcd5331da14ef": {
    "describe": {
      "columns": [
        {
          "name": "kind: AnimationKind",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from animation_metadata where id = $1 returning kind as \"kind: AnimationKind\""
  },
  "5191c36820fdd5dbf670d0af9ca46bc7158a12f9bfe1bdd3f39d4d5fef49df6f": {
    "describe": {
      "columns": [
        {
          "name": "subscription_tier?: SubscriptionTier",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "plan_type?: PlanType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "subscription_status?: SubscriptionStatus",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "is_admin!",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "verified!",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "school_id?: SchoolId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "overdue!",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        true,
        false,
        false,
        false,
        false,
        false,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    user_account.subscription_tier as \"subscription_tier?: SubscriptionTier\",\n    subscription_plan.plan_type as \"plan_type?: PlanType\",\n    subscription.status as \"subscription_status?: SubscriptionStatus\",\n    user_account.admin as \"is_admin!\",\n    user_account.verified as \"verified!\",\n    school.school_id as \"school_id?: SchoolId\",\n    case\n        when subscription.amount_due > 0 then true\n        else false\n    end as \"overdue!\"\nfrom user_account\ninner join account using (account_id)\nleft join school using (account_id)\nleft join (\n    select subscription.account_id, status, amount_due, subscription_plan_id\n    from subscription\n    join (\n        select\n            account_id, subscription_id, max(created_at)\n        from subscription\n        group by account_id, subscription_id\n        order by created_at desc\n        limit 1\n    ) as recent_subscription using (subscription_id)\n) as subscription using (account_id)\nleft join subscription_plan on subscription.subscription_plan_id = subscription_plan.plan_id\nwhere user_account.user_id = $1\n"
  },
  "51a40f41372d3ac245973b6c148c56e71684c771e64465cf5c188241d4416d4a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate category\nset index = index - 1, updated_at = now()\nwhere index > $1 and index <= $2 is not false and parent_id is not distinct from $3\n"
  },
  "51e85fb9e3f2250f2f6eed2f5473a875162ab1399d001002c78ee453a196b3d1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate resource_data_resource\nset display_name = coalesce($2, display_name)\nwhere id = $1 and $2 is distinct from display_name\n            "
  },
  "520d422c41cb46765a696172e5b37e168577f310ef6625e764331052e100c6a3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n    delete from user_follow where user_id = $1 and follower_id = $2\n            "
  },
  "5330258c1771d3e64b884d567ed1290ab484fb36f84360c05a1ac06fb8e11032": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data_affiliation(jig_data_id, affiliation_id)\nselect $2, affiliation_id\nfrom jig_data_affiliation\nwhere jig_data_id = $1\n        "
  },
  "542c1ed6d3c478319c191c8ef59cb3e0bb931e31c86f7bf1c3886755d61d24ea": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_admin_data\nset\n    rating = coalesce($2, rating),\n    blocked = coalesce($3, blocked),\n    curated = coalesce($4, curated),\n    is_premium = coalesce($5, is_premium)\nwhere jig_id = $1\n"
  },
  "5486fe6499a2253171fa11aaa873fe04f3136bd0f50e203ec4961bd1cff1d76e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(up.user_id))[1]\n            from user_profile \"up\"\n            inner join \"user\" on up.user_id = \"user\".id \n            left join circle_member \"cm\" on cm.user_id = up.user_id\n            where cm.id = any($1) or $1 = array[]::uuid[]\n            group by \"user\".created_at\n        )\n            select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id\n           , ord)        \n        "
  },
  "54bd0fd9b43e386d322274148c5ed9b47efb8479f32da5b1cacff2f7ce55c397": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate image_metadata\nset is_premium  = coalesce($2, is_premium),\n    updated_at  = now()\nwhere id = $1\n  and ($2::boolean is not null and $2 is distinct from is_premium)"
  },
  "553077643f8e2943593651973afe7e2e6710791e2b5d00fba06fd31e09fea9f5": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bool",
          "Int2"
        ]
      }
    },
    "query": "\nselect count(*) as \"count!: i64\" \nfrom image_metadata\n        inner join image_upload on image_id = id \nwhere processing_result is not distinct from true \n    and (publish_at < now() is not distinct from $1 or $1 is null)\n    and (size is not distinct from $2 or $2 is null)"
  },
  "561648a77b79a8344da93ed389e064da68a73f023319105cbd333fec76604916": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Bool",
          "Text",
          "Text",
          "Uuid",
          "Text",
          "Text",
          "TextArray",
          "Text",
          "Bool",
          "Text",
          "TextArray",
          "Jsonb"
        ]
      }
    },
    "query": "\ninsert into user_profile\n    (user_id, username, over_18, given_name, family_name, profile_image_id, language_app, language_emails, languages_spoken, timezone, opt_into_edu_resources, organization, persona, location)\nvalues\n    ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)\non conflict (user_id) do update\nset\n    over_18 = $3,\n    given_name = $4,\n    family_name = $5,\n    profile_image_id = $6,\n    language_app = $7,\n    language_emails = $8,\n    languages_spoken = $9,\n    timezone = $10,\n    opt_into_edu_resources = $11,\n    organization = $12,\n    persona = $13,\n    location = $14\n"
  },
  "56567f2d09b683dfb6209093ff0ded597cda78b614466626b84956d955eb69c6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update jig_play_count\n        set play_count = play_count + 1\n        where jig_id = $1\n        "
  },
  "565914a8fc1c1af596e272f153892585c460566614844181566d2a531e0a613a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2Array"
        ]
      }
    },
    "query": "\nupdate jig_data\nset audio_feedback_positive = $2,\n    audio_feedback_negative = $3,\n    updated_at = now()\nwhere id = $1 and ($2 <> audio_feedback_positive or $3 <> audio_feedback_negative)\n            "
  },
  "56ac9a00c8b93c8034d360fbab5d4db7412ab88e8cd7905483409fde22de4e30": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate playlist_data_module\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere playlist_data_id = $1 and index between $3 and $2\n"
  },
  "57693aa7ccdb79cbaa9b0d32177b781785ab822732c8e156740692a8d160cc53": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate resource_data_resource\nset resource_type_id = coalesce($2, resource_type_id)\nwhere id = $1 and $2 is distinct from resource_type_id\n            "
  },
  "57b72bbdece8deb3ac84c44b94157afbd3d50d16c893613f54145b9ca7e255d0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "insert into user_audio_upload (audio_id) values($1)"
  },
  "57b8e0205c4afcbd1b5f5544b1fed0750f1be4e904e34f7c4862e321cb67982c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update resource_data\n                            set translated_name = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "581277a6c2291f58d22661f85991403210b2477cd4d6ebaa0772b2b4ad2206f9": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "resource_type_id!: ResourceTypeId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "resource_content!",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name         as \"display_name!\",\n       resource_type_id     as \"resource_type_id!: ResourceTypeId\",\n       resource_content    as \"resource_content!\"\nfrom resource_data_resource \"rdr\"\nwhere resource_data_id = $1\n  and rdr.id = $2\n        "
  },
  "5842389dd9a03ba291f04a518e3eccc249eb3664c1ecd12b294de7a81d132a59": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from user_audio_library where id = $1"
  },
  "584c1a6c3683272dc4cb0785bdb9ee07ca772df2c04a8ce0cbe406a3d1487016": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_pdf_upload set processed_at = now(), processing_result = false where pdf_id = $1"
  },
  "58b3000106a9df0e238d79453b3a2b66dff16b2dc1489b92eefe86d1b314089c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "translated_name!: Json<HashMap<String, String>>",
          "ordinal": 5,
          "type_info": "Jsonb"
        },
        {
          "name": "affiliations!",
          "ordinal": 6,
          "type_info": "UuidArray"
        },
        {
          "name": "affiliation_names!",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "resource_types!",
          "ordinal": 8,
          "type_info": "UuidArray"
        },
        {
          "name": "resource_type_names!",
          "ordinal": 9,
          "type_info": "TextArray"
        },
        {
          "name": "age_ranges!",
          "ordinal": 10,
          "type_info": "UuidArray"
        },
        {
          "name": "age_range_names!",
          "ordinal": 11,
          "type_info": "TextArray"
        },
        {
          "name": "categories!",
          "ordinal": 12,
          "type_info": "UuidArray"
        },
        {
          "name": "category_names!",
          "ordinal": 13,
          "type_info": "TextArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 14,
          "type_info": "Int2"
        },
        {
          "name": "author_id",
          "ordinal": 15,
          "type_info": "Uuid"
        },
        {
          "name": "locked!",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "author_name",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "rating",
          "ordinal": 20,
          "type_info": "Int2"
        },
        {
          "name": "likes!",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "views!",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "published_at",
          "ordinal": 23,
          "type_info": "Timestamptz"
        },
        {
          "name": "blocked!",
          "ordinal": 24,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        true,
        false,
        false,
        false,
        null,
        true,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect resource.id,\n       display_name                                                                                                 as \"name\",\n       language                                                                                                     as \"language!\",\n       description                                                                                                  as \"description!\",\n       translated_description                                                                                       as \"translated_description!: Json<HashMap<String, String>>\",\n       translated_name                                                                                              as \"translated_name!: Json<HashMap<String, String>>\",\n       array((select affiliation_id\n              from resource_data_affiliation\n              where resource_data_id = resource_data.id))                                                                     as \"affiliations!\",\n       array((select affiliation.display_name\n              from affiliation\n                       inner join resource_data_affiliation on affiliation.id = resource_data_affiliation.affiliation_id\n              where resource_data_affiliation.resource_data_id = resource_data.id))                                                as \"affiliation_names!\",\n        array((select resource_type_id\n                from resource_data_resource\n                where resource_data_id = resource_data.id))                                                                     as \"resource_types!\",\n        array((select resource_type.display_name\n              from resource_type\n                        inner join resource_data_resource on resource_type.id = resource_data_resource.resource_type_id\n             where resource_data_resource.resource_data_id = resource_data.id))                                         as \"resource_type_names!\",\n       array((select age_range_id\n              from resource_data_age_range\n              where resource_data_id = resource_data.id))                                                                     as \"age_ranges!\",\n       array((select age_range.display_name\n              from age_range\n                       inner join resource_data_age_range on age_range.id = resource_data_age_range.age_range_id\n              where resource_data_age_range.resource_data_id = resource_data.id))                                                  as \"age_range_names!\",\n       array((select category_id\n              from resource_data_category\n              where resource_data_id = resource_data.id))                                                                     as \"categories!\",\n       array((select name\n              from category\n                       inner join resource_data_category on category.id = resource_data_category.category_id\n              where resource_data_category.resource_data_id = resource_data.id))                                                   as \"category_names!\",\n       privacy_level                                                                                                as \"privacy_level!: PrivacyLevel\",\n       author_id                                                                                                    as \"author_id\",\n       locked                                                                                                       as \"locked!\",\n       other_keywords                                                                                               as \"other_keywords!\",\n       translated_keywords                                                                                          as \"translated_keywords!\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = resource.author_id)                                                            as \"author_name\",\n        rating                                                                                                      as \"rating\",\n        likes                                                                                                       as \"likes!\",\n        views                                                                                                       as \"views!\",\n        published_at                                                                                                as \"published_at\",\n        blocked                                                                                                     as \"blocked!\"\nfrom resource\n         inner join resource_data on live_id = resource_data.id\n         inner join resource_admin_data \"rad\" on rad.resource_id = resource.id\nwhere ((last_synced_at is null and published_at is not null)\n   or (updated_at is not null and last_synced_at < updated_at)\n    or (published_at < now() is true and last_synced_at < published_at))\nlimit 100 for no key update skip locked;\n     "
  },
  "58ed84397822e7790a3c721f37579e8cbe5aa2e6836c533323229873e88e247d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from image_metadata where id = $1"
  },
  "598a0f5d29bc909d2970a2225e7aaac73ed2b37370aa6d83b81b602f9893a532": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset draft_or_live = $2\nwhere id = $1\n            "
  },
  "59c49f0ffacb928c16d48a8a91fc04e16057b123de225183c88bfd1348042e1b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate user_image_upload\nset uploaded_at       = now(),\n    processed_at      = now(),\n    processing_result = true\nwhere image_id = $1\n"
  },
  "5a313ec777ef83ffab443c1a2da405969ff1cc04c9252b62df0da4ca22442364": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "insert into course (creator_id, author_id, live_id, draft_id) values ($1, $1, $2, $3) returning id"
  },
  "5a9b960255b6c6fc729f2378573e914379136b0174c0fe049afbc8c5cf0dfe5e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate resource_data\nset draft_or_live = $2\nwhere id = $1\n            "
  },
  "5c1a115b0d19fbd9cf70491dbf05e47ce8af063817b55567e0f3733b432c364c": {
    "describe": {
      "columns": [
        {
          "name": "total_schools!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bool",
          "Text"
        ]
      }
    },
    "query": "\nselect\n    count(*) as \"total_schools!\"\nfrom school_name\nwhere\n    (\n        (not $1::bool is null and (verified = $1::bool))\n        or $1::bool is null\n    )\n    and (\n        (not $2::text is null and (school_name.name like ('%' || $2::text || '%')::citext))\n        or $2::text is null\n    )\n"
  },
  "5c74fc8320e9a7a78b6ac4fc29214b03fade67d4023300f5ec44f258167df11c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data_jig(playlist_data_id, jig_id, index)\nselect $2, jig_id, index\nfrom playlist_data_jig\nwhere playlist_data_id = $1\n        "
  },
  "5d39b246259043965846dc0fd205dc25a7a1263d74d2a6451b15c70052ec4844": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from image_upload where image_id = $1"
  },
  "5d7020b3759281d303b515cf05ae1445d421aabf48d2212565a20faf794e6fc2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2Array",
          "Uuid"
        ]
      }
    },
    "query": "update category set user_scopes= $1, updated_at = now() where id = $2"
  },
  "5daa06279831770307bdc0bbf7ecfad3ba4338634f2b76f518b0d3a93bdbc993": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate image_metadata\nset description = $2,\n    translated_description = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description"
  },
  "5db8993ee5d00df44d48007636297504ce52b6f236c785cc04e4e39df9f4a3ce": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update jig_curation_data\n    set age_ranges = $2\n    where jig_id = $1 and $2 is distinct from age_ranges\n                "
  },
  "5de961fbc4aa926cf5bdb20eb606c667acf04b955d2dc70a859254869ce6513f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data_affiliation(playlist_data_id, affiliation_id)\nselect $2, affiliation_id\nfrom playlist_data_affiliation\nwhere playlist_data_id = $1\n        "
  },
  "5e4bfa7c86f036663500b75df28a943c55cbc671a2dd296514568680f1b3733f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "kind: MediaKind",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "urls!",
          "ordinal": 4,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nselect id,\n       kind as \"kind: MediaKind\",\n       created_at,\n       updated_at,\n       array(select media_url from web_media_library_url where media_id = id) as \"urls!\"\nfrom web_media_library\nwhere id = (select media_id from web_media_library_url where media_url = $1)\n"
  },
  "5e89bdeb27222e234b132b2ed865c145fccfb5c289870288c2122344b5dcf5b7": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from circle where id = $1) as \"exists!\""
  },
  "5e95b7a4cf4b4306606ac78ddc60556eae64d0be55ec64b06198b6ab6cec761b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "insert into jig (creator_id, author_id, live_id, draft_id) values ($1, $1, $2, $3) returning id"
  },
  "5ec5720dbad1cd3172490973ae06e764c2b0d9fb97df958d159ae81af0470ec8": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect index from playlist_data_module\nwhere playlist_data_id = $1 and playlist_data_module.id is not distinct from $2\n"
  },
  "5f3fd649e82c3d0a8deb3a4c0bd9c6afddb137b24f8b45ed4e673acb8f00b651": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "live_id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id, live_id from jig where id = $1\n"
  },
  "5ff5fa2a87043688acf1a71be7f3a293bd4cad618ed473b7ef536a116dabf50c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update jig_curation_data\n    set description = $2\n    where jig_id = $1 and $2 is distinct from description\n                "
  },
  "600ffac5984f995edf37a3c6a2b350b104c1b9d55ac661ace81449a8f4ab1131": {
    "describe": {
      "columns": [
        {
          "name": "playlist_id: PlaylistId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "privacy_level: PrivacyLevel",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "published_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "plays",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "display_name!",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "updated_at",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "language!",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 14,
          "type_info": "Jsonb"
        },
        {
          "name": "draft_or_live!: DraftOrLive",
          "ordinal": 15,
          "type_info": "Int2"
        },
        {
          "name": "other_keywords!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "rating?: PlaylistRating",
          "ordinal": 18,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 22,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 26,
          "type_info": "RecordArray"
        },
        {
          "name": "items!: Vec<(JigId,)>",
          "ordinal": 27,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        true,
        false,
        false,
        false,
        null,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select (array_agg(cd.id))[1]\n    from playlist_data \"cd\"\n          left join playlist on (draft_id = cd.id or (live_id = cd.id and cd.last_synced_at is not null and published_at is not null))\n          left join playlist_data_resource \"resource\" on cd.id = resource.playlist_data_id\n    where (author_id = $1 or $1 is null)\n        and (cd.draft_or_live = $2 or $2 is null)\n        and (cd.privacy_level = any($3) or $3 = array[]::smallint[])\n        and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n    group by coalesce(updated_at, created_at)\n    order by coalesce(updated_at, created_at) desc\n),\ncte1 as (\n    select * from unnest(array(select cte.array_agg from cte)) with ordinality t(id\n   , ord) order by ord\n)\nselect playlist.id                                                                as \"playlist_id: PlaylistId\",\n    privacy_level                                                               as \"privacy_level: PrivacyLevel\",\n    creator_id                                                                  as \"creator_id?: UserId\",\n    author_id                                                                   as \"author_id?: UserId\",\n    (select given_name || ' '::text || family_name\n     from user_profile\n     where user_profile.user_id = author_id)                                     as \"author_name\",\n    published_at,\n    likes,\n    plays,\n    live_up_to_date,\n    exists(select 1 from playlist_like where playlist_id = playlist.id and user_id = $7)    as \"is_liked!\",\n    display_name                                                                  as \"display_name!\",\n    updated_at,\n    language                                                                      as \"language!\",\n    description                                                                   as \"description!\",\n    translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n    draft_or_live                                                                 as \"draft_or_live!: DraftOrLive\",\n    other_keywords                                                                as \"other_keywords!\",\n    translated_keywords                                                           as \"translated_keywords!\",\n    rating                                     as \"rating?: PlaylistRating\",\n    blocked                                    as \"blocked!\",\n    curated                                    as \"curated!\",\n    is_premium                                 as \"premium!\",\n    (\n        select row(playlist_data_module.id, kind, is_complete)\n        from playlist_data_module\n        where playlist_data_id = playlist_data.id and \"index\" = 0\n        order by \"index\"\n    )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n    array(select row (category_id)\n            from playlist_data_category\n            where playlist_data_id = playlist_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n    array(select row (affiliation_id)\n            from playlist_data_affiliation\n            where playlist_data_id = playlist_data.id)          as \"affiliations!: Vec<(AffiliationId,)>\",\n    array(select row (age_range_id)\n            from playlist_data_age_range\n            where playlist_data_id = playlist_data.id)          as \"age_ranges!: Vec<(AgeRangeId,)>\",\n    array(select row (id, display_name, resource_type_id, resource_content)\n                from playlist_data_resource\n                where playlist_data_id = playlist_data.id\n          )                                          as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n    array(\n        select row(jig_id)\n        from playlist_data_jig\n        where playlist_data_jig.playlist_data_id = playlist_data.id\n        order by \"index\"\n    )                                                     as \"items!: Vec<(JigId,)>\"\nfrom cte1\ninner join playlist_data on cte1.id = playlist_data.id\ninner join playlist on (\n    playlist_data.id = playlist.draft_id\n    or (\n        playlist_data.id = playlist.live_id\n        and last_synced_at is not null\n        and playlist.published_at is not null\n    )\n)\nleft join playlist_admin_data \"admin\" on admin.playlist_id = playlist.id\nwhere ord > (1 * $5 * $6)\norder by ord asc\nlimit $6\n"
  },
  "605f9b9b03ca7908ff0a89bb4794d447710484326f57bdc6e31b59d8efbee5e8": {
    "describe": {
      "columns": [
        {
          "name": "id!: AddId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "resource_type_id!: TypeId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "resource_content!",
          "ordinal": 3,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n        with cte as (\n            select jdar.id              as id,\n                   jdar.display_name,\n                   resource_type_id,\n                   resource_content,\n                   author_id,\n                   updated_at,\n                   created_at\n            from jig_data_additional_resource \"jdar\"\n            inner join jig on jig.live_id = jdar.jig_data_id\n            inner join jig_data on jig.live_id = jig_data.id\n            where author_id = $1 and jig.published_at is not null\n           ),\n           cte1 as (\n              select cdr.id              as id,\n                cdr.display_name,\n                resource_type_id,\n                resource_content,\n                author_id,\n                updated_at,\n                created_at\n          from playlist_data_resource \"cdr\"\n          inner join playlist on playlist.live_id = cdr.playlist_data_id\n          inner join playlist_data on playlist.live_id = playlist_data.id\n          where author_id = $1 and playlist.published_at is not null\n          ),\n          cte2 as (\n            select *\n            from unnest(array(\n                select\n                (array_agg(id))[1] as id\n                from (select id, updated_at, created_at from cte union all select id, updated_at, created_at from cte1)\n                resource\n                group by resource.updated_at, resource.created_at\n                order by coalesce(resource.updated_at, created_at))) with ordinality t(id\n                , ord) order by ord\n         )\n          select cte3.id                as \"id!: AddId\",\n                 display_name           as \"display_name!\",\n                 resource_type_id       as \"resource_type_id!: TypeId\",\n                 resource_content        as \"resource_content!\"\n         from\n          (select * from cte\n          union all\n          select * from cte1) cte3\n        inner join cte2 on cte2.id = cte3.id\n        where ord > (1 * $2 * $3)\n        order by ord asc\n        limit $3\n            "
  },
  "608570654b76fe283fddb937731c721ebfee382fd9004821681ba0ebaaa953f6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\n        delete from \"user\" \n        using session\n        where \"user\".id = session.user_id \n        and (scope_mask & $1) = $1 \n        and expires_at <= now() \n     "
  },
  "60fdda4012013484a983eed9796f927be1c3e18a509b46bc3c7d17b522367b4d": {
    "describe": {
      "columns": [
        {
          "name": "id!",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "email!: String",
          "ordinal": 4,
          "type_info": {
            "Custom": {
              "kind": "Simple",
              "name": "citext"
            }
          }
        },
        {
          "name": "language_emails!",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "organization?",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "location?",
          "ordinal": 7,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n     select up.user_id                               as \"id!\",\n            username                                 as \"username!\",\n            given_name                               as \"given_name!\",\n            family_name                              as \"family_name!\",\n            email                                    as \"email!: String\",\n            language_emails                          as \"language_emails!\",\n            organization                             as \"organization?\",\n            location                                 as \"location?\",\n            user_email.created_at                    as \"created_at\"\nfrom user_profile \"up\"\n        inner join \"user\" on \"user\".id = up.user_id\n        inner join user_email on user_email.user_id = up.user_id\nwhere (last_synced_at is null or\n       (up.updated_at is not null and last_synced_at < up.updated_at))\nlimit 100 for no key update skip locked;\n     "
  },
  "61129f773aa2da10acaece369181c3c64a8b02f263db63b0f14b6439245d4956": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_like(playlist_id, user_id)\nvalues ($1, $2)\n            "
  },
  "620638cd11c57d625c799e1d5ada2d57161cb59e06559bc3bd7ee3e3e3a8d5ee": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from user_image_library where user_id = $1 and id = $2) as \"exists!\"\n    "
  },
  "62d96e4b30f7828cbc7255b3be93f16aa1a868bd5a9780ae80079dbbfe858694": {
    "describe": {
      "columns": [
        {
          "name": "id!: AdditionalResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\ninsert into jig_data_additional_resource (jig_data_id, resource_type_id, resource_content, display_name)\nvalues ((select draft_id from jig where id = $1), $2, $3, $4)\nreturning id as \"id!: AdditionalResourceId\"\n        "
  },
  "63282a245bbfff4db34ea00a9f53cf8f6cbbd26ff4106d3b53f3edf3e48197d0": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "library: MediaLibrary",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "last_used: DateTime<Utc>",
          "ordinal": 2,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int8"
        ]
      }
    },
    "query": "\nselect image_id as \"id: ImageId\", media_library as \"library: MediaLibrary\", last_used as \"last_used: DateTime<Utc>\"\nfrom user_recent_image\nwhere user_id = $1\norder by last_used desc\nlimit $2\n            "
  },
  "632d00dc2765c5c309cc7abb128dfbea29aeb9323d8b5aec5e098e3bd50ff771": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\nupdate resource_admin_data\nset\n    rating = coalesce($2, rating),\n    blocked = coalesce($3, blocked),\n    curated = coalesce($4, curated),\n    is_premium = coalesce($5, is_premium)\nwhere resource_id = $1\n"
  },
  "633f41a575ccfa1f498ffc6cc6b60f8abc8aa88714085e966a3732769d3fa290": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update playlist_data\n                            set translated_description = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "63a9ba01a124f3d9755abb0c3649bc0224d1ac27f4fe3fb52399cde83d266fd0": {
    "describe": {
      "columns": [
        {
          "name": "id: SubjectId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            select subject_id as \"id: SubjectId\", display_name, created_at, updated_at from subject\n            order by index\n        "
  },
  "640b89322af8a3bbd2f1a6c68299ec477e9a58e1aa95ffb5e23e314daf05702a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\n    update jig_data\n    set last_synced_at = null\n    where id = any($1)\n            "
  },
  "64cfdb8662f781313ee5765279e6d4b9a03cc12c3873a00386e94a1eda9e472b": {
    "describe": {
      "columns": [
        {
          "name": "discard",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nwith delete as (\n        delete from user_font\n    where user_id = $1 and index = $2\n)\nselect 1 as discard\nfrom user_font\nwhere user_id = $1 and index > $2\nfor update\n        "
  },
  "65bbbe5cb9eba5f0bf454b10f8b07ccf8eb3f519970d09868b486cbaa7d560a1": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "parent_id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from category where id = $1 returning index, parent_id"
  },
  "66c7f2798010ff1fc00b0ec452672d72b7bef299ec172672b47578822c963f0f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into course_data\n   (display_name, language, description, draft_or_live)\nvalues ($1, $2, $3, $4)\nreturning id\n"
  },
  "682dbdf7b9a0f373daad74e4f4face9e425a493e9965c6ba7c9a11e74252c866": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "update public_user set last_synced_at = now() where user_id = any($1)"
  },
  "684289dd550908cfb5adac9278ac9beb606e7d0ac91d8aa8a95d81100f357c3c": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\n    insert into jig_report(jig_id, report_type)\n    values ($1, $2)\n    returning id as \"id!: ReportId\"\n            "
  },
  "68a6cedcf31dbac17f23ec2cf4cdead5973b0bf72e32708d64e680ecc2997f6b": {
    "describe": {
      "columns": [
        {
          "name": "play_count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect play_count from jig_play_count\nwhere jig_id = $1;\n            "
  },
  "695ed5200a6ec80ca01f9ca3950a0ff0bc60dee8bcbe4a0954376eb26a38af1b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Int2",
          "Bool"
        ]
      }
    },
    "query": "\nupdate resource_data_module\nset contents    = coalesce($3, contents),\n    kind        = coalesce($4, kind),\n    is_complete = coalesce($5, is_complete)\nwhere resource_data_id = $1\n  and index = $2\n"
  },
  "695f61600966e7be0be50f3536900ac2a78517c4ef39c5386cd8f7936119ffa3": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text",
          "Int2",
          "Bool",
          "Bool",
          "Bool",
          "Int2"
        ]
      }
    },
    "query": "\ninsert into jig_data\n   (display_name, language, description, direction, display_score, track_assessments, drag_assist, draft_or_live)\nvalues ($1, $2, $3, $4, $5, $6, $7, $8)\nreturning id\n"
  },
  "69b512127b70875985bb54e50242397b7e362535b1a338276778abde7b695787": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int4"
        ]
      }
    },
    "query": "update user_color set color = $3 where user_id = $1 and index = $2"
  },
  "6a0747806924b7638b2356bfec11e1800fc35314d887112d74731d830f397283": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data_age_range(playlist_data_id, age_range_id)\nselect $2, age_range_id\nfrom playlist_data_age_range\nwhere playlist_data_id = $1\n        "
  },
  "6a2fcbea5b62e0a5c0eb65c28769c1b3e70e3376f664d5ad84c864aaef8f0548": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update global_animation_upload set uploaded_at = now(), processing_result = null where animation_id = $1"
  },
  "6ad4df2298dcd688eb035ff09918b592e3be2dac06b5ffb13012fb166daa814b": {
    "describe": {
      "columns": [
        {
          "name": "id: CategoryId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "user_scopes",
          "ordinal": 4,
          "type_info": "Int2Array"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id                                                                 as \"id: CategoryId\",\n       name,\n       created_at,\n       updated_at,\n       user_scopes\nfrom category\nwhere parent_id is null\norder by index\n "
  },
  "6b18f4d20c2efb63ec1be956c25ebb85875cd8972346f74e21ca7f429d2fb9d5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data_affiliation(resource_data_id, affiliation_id)\nselect $2, affiliation_id\nfrom resource_data_affiliation\nwhere resource_data_id = $1\n        "
  },
  "6b23aa76c017f61c1cec5fb58bb315c57ab46929dcc301602997c6c71a2fc22c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate resource_data\nset privacy_level = coalesce($2, privacy_level)\nwhere id = $1\n  and $2 is distinct from privacy_level\n    "
  },
  "6b4c6c34aa0869454c523369f97f9040e30804768922f3a31bffe03c5bf80ecd": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "updated_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "language!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 6,
          "type_info": "Jsonb"
        },
        {
          "name": "duration",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "other_keywords!",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 10,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 11,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 12,
          "type_info": "RecordArray"
        },
        {
          "name": "units!: Vec<(CourseUnitId, String, String, Value)>",
          "ordinal": 13,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect  id,\n        display_name                                       as \"display_name!\",\n        updated_at,\n        privacy_level                                      as \"privacy_level!: PrivacyLevel\",\n        language                                           as \"language!\",\n        description                                         as \"description!\",\n        translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n        duration                                           as \"duration\",\n        other_keywords                             as \"other_keywords!\",\n        translated_keywords                        as \"translated_keywords!\",\n        (\n            select row(course_data_module.id, kind, is_complete)\n            from course_data_module\n            where course_data_id = course_data.id and \"index\" = 0\n            order by \"index\"\n        )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n        array(select row (category_id)\n            from course_data_category\n            where course_data_id = course_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n        array(\n            select row (pddr.id, pddr.display_name, resource_type_id, resource_content)\n            from course_data_resource \"pddr\"\n            where pddr.course_data_id = course_data.id\n        )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n        array(\n            select row(pddu.unit_id, pddu.display_name, pddu.description, pddu.value)\n            from course_data_unit \"pddu\"\n            where pddu.course_data_id = course_data.id\n            order by \"index\"\n        )                                                     as \"units!: Vec<(CourseUnitId, String, String, Value)>\"\nfrom course_data\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\norder by ord asc\n"
  },
  "6bebe392e7dfa7d248a777b4c799d3000dd21c525c70300fbe2701cb9047c020": {
    "describe": {
      "columns": [
        {
          "name": "resource_id!: ResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "language",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "categories",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "description",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "age_ranges",
          "ordinal": 5,
          "type_info": "Bool"
        },
        {
          "name": "affiliations",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "additional_resources",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "curation_status!: ResourceCurationStatus",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "comments!: Vec<(ResourceCurationComment)>",
          "ordinal": 9,
          "type_info": "RecordArray"
        },
        {
          "name": "reports!: Vec<(ResourceReport)>",
          "ordinal": 10,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect resource_id                               as \"resource_id!: ResourceId\",\n       display_name,\n       language,\n       categories,\n       description,\n       age_ranges,\n       affiliations,\n       additional_resources,\n       curation_status                          as \"curation_status!: ResourceCurationStatus\",\n       array(\n            select row (rcc.id, rcc.resource_id, comment, created_at, author_id)\n            from resource_curation_comment  \"rcc\"\n            where rcd.resource_id = rcc.resource_id\n            order by created_at desc\n       )                                         as \"comments!: Vec<(ResourceCurationComment)>\",\n       array(\n           select row (rr.id, rr.resource_id, report_type, reporter_id, created_at,      \n                        (\n                        select given_name || ' '::text || family_name\n                        from user_profile\n                        where user_profile.user_id = reporter_id\n                        ),\n                        (\n                            select email::text\n                            from user_email\n                            where user_email.user_id = reporter_id\n                        )                                                                       \n            )\n           from resource_report \"rr\"\n           where rcd.resource_id = rr.resource_id\n           order by created_at desc\n       )                                                    as \"reports!: Vec<(ResourceReport)>\"\nfrom resource_curation_data \"rcd\"\nwhere resource_id = $1\n"
  },
  "6cd2ae3f3a7df867e81bc9018b79dd4e1d64f4729ba071f42a70651492b89a8c": {
    "describe": {
      "columns": [
        {
          "name": "size: ImageSize",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect size as \"size: ImageSize\"\nfrom user_image_library\ninner join user_image_upload on user_image_library.id = user_image_upload.image_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of user_image_upload\nfor share of user_image_library\nskip locked\n        "
  },
  "6d0a676d59147de71ebc2ac7104d4eb12413d0d2ffe551119ce34c3b0257c48b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate playlist_data_module\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere playlist_data_id = $1 and index between $2 and $3\n"
  },
  "6ea38ea0c905f9d7aa943145a64b10e5d0cdc86d8f365dfdac9a8c45bba8e67c": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n                select exists(select 1 from user_profile where user_id = $1 for update) as \"exists!\"\n                    "
  },
  "701de512b57a7bb90c579f09319277ac921dff5152c1fb8a2bc1d8bc0548504a": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nselect exists(\n        select 1\n        from user_color\n        where user_id = $1\n            and index = $2\n        for update\n) as \"exists!\""
  },
  "70b86c7baab4d0ef8ac17327fa57d5c17983e1fe2b5656560694640916b7458d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate user_profile\nset profile_image_id = $2,\n    updated_at = now()\nwhere user_id = $1 and profile_image_id is distinct from $2\n        "
  },
  "71a20e798244303c160062385c9b36debe61173334a9d304971e7616597f1a5e": {
    "describe": {
      "columns": [
        {
          "name": "check_to!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (select 1 from \"user\" where id = $1) as \"check_to!\"\n        "
  },
  "71addff4abef3da03bd78d3d17a6fc89faf2a8febe06016b8239225cd072fecc": {
    "describe": {
      "columns": [
        {
          "name": "id: StripeSubscriptionId",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select stripe_subscription_id as \"id: StripeSubscriptionId\" from subscription where latest_invoice_id = $1"
  },
  "72b024e92b7f83b7e9fbb725e9955b62d22c676d62a8bbe2ce46be9cb163a991": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update image_upload set uploaded_at = now(), processing_result = null where image_id = $1"
  },
  "72e3aca05740c8e1615e5e90644ce5edcf661280ab2b72b5f6af4932618ce5ab": {
    "describe": {
      "columns": [
        {
          "name": "id: AudioId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\ninsert into user_audio_library default values\nreturning id as \"id: AudioId\"\n"
  },
  "72e5bef48e9d7cd559375819fe7571ce8abe96f315491482ae4f89b0a0722d25": {
    "describe": {
      "columns": [
        {
          "name": "id!: AdditionalResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\ninsert into course_data_resource (course_data_id, resource_type_id, resource_content, display_name)\nvalues ((select draft_id from course where id = $1), $2, $3, $4)\nreturning id as \"id!: AdditionalResourceId\"\n        "
  },
  "730f7927a06ed0eac325329170086fb199a8d9fc5d32fb4be76cb9c3c4b3c5cc": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid",
          "Bool",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select array_agg(jd.id)\n            from jig_data \"jd\"\n                  inner join jig on (draft_id = jd.id or (live_id = jd.id and jd.last_synced_at is not null and published_at is not null))\n                  left join jig_admin_data \"admin\" on admin.jig_id = jig.id\n                  left join jig_data_additional_resource \"resource\" on jd.id = resource.jig_data_id\n            where (jd.draft_or_live = $1 or $1 is null)\n                and (author_id = $2 or $2 is null)\n                and (blocked = $3 or $3 is null)\n                and (jd.privacy_level = any($4) or $4 = array[]::smallint[])\n                and (resource.resource_type_id = any($5) or $5 = array[]::uuid[])\n            group by updated_at, created_at, jig.published_at, admin.jig_id, jig_id\n        )\n            select count(*) as \"count!\" from unnest(array((select cte.array_agg[1] from cte))) with ordinality t(id\n           , ord)\n        "
  },
  "7325c7ed63eb3cf5405a37c590c086cb0f1c457f27f6b53eacd26bb6dac849ec": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "insert into user_image_upload (image_id) values ($1)"
  },
  "739d2d716267f671e775806df135ccdcbbbc12e0fc4398a07de6235f71bddd6b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update web_media_upload set processed_at = now(), processing_result = true where media_id = $1"
  },
  "73d7b742af6f66b1580ad224d3acf037ed5ac0122865ebb97b78c8a92ad2d677": {
    "describe": {
      "columns": [
        {
          "name": "id!: PlaylistId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "live_id!",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "draft_id!",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "published_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "plays!",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "rating?: PlaylistRating",
          "ordinal": 11,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 12,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 14,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        null,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Uuid"
        ]
      }
    },
    "query": "\nselect playlist.id                                       as \"id!: PlaylistId\",\n       creator_id                               as \"creator_id?: UserId\",\n       author_id                                as \"author_id?: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id) as \"author_name\",\n       live_id                                  as \"live_id!\",\n       draft_id                                 as \"draft_id!\",\n       published_at,\n       likes                                    as \"likes!\",\n       plays                                    as \"plays!\",\n       live_up_to_date                          as \"live_up_to_date!\",\n       exists(select 1 from playlist_like where playlist_id = playlist.id and user_id = $2) as \"is_liked!\",\n       rating                                   as \"rating?: PlaylistRating\",\n       blocked                                  as \"blocked!\",\n       curated                                  as \"curated!\",\n       is_premium                               as \"premium!\"\nfrom playlist\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\ninner join playlist_admin_data \"admin\" on admin.playlist_id = playlist.id\norder by ord asc\n    "
  },
  "73e6d12163642604e2ab682da08c141d29e8e19665979d7de7ec5e59b507ffc2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data_age_range(jig_data_id, age_range_id)\nselect $2, age_range_id\nfrom jig_data_age_range\nwhere jig_data_id = $1\n        "
  },
  "73f764f872bffc9e08fe85ba34a7b52d7c9e645095e3b1e4cec6a0b1d5b27d2d": {
    "describe": {
      "columns": [
        {
          "name": "id: AnimationId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Bool",
          "Timestamptz",
          "Int2",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into animation_metadata (name, description, is_premium, publish_at, kind, is_looping) values ($1, $2, $3, $4, $5, $6)\nreturning id as \"id: AnimationId\"\n        "
  },
  "741beb959fc4f74824a36a8b0e448e30690d1d0a750e57e819630045f010744f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update playlist_data\n                            set translated_name = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "74aaf68216b82e2866c8d21ff4491b475fc9dae1782412ebc24b43639c89d135": {
    "describe": {
      "columns": [
        {
          "name": "id!: CourseId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "live_id!",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "draft_id!",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "published_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "plays!",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "rating?: CourseRating",
          "ordinal": 10,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 12,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 13,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        null,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect course.id                               as \"id!: CourseId\",\n       creator_id                               as \"creator_id?: UserId\",\n       author_id                                as \"author_id?: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id) as \"author_name\",\n       live_id                                  as \"live_id!\",\n       draft_id                                 as \"draft_id!\",\n       published_at,\n       likes                                    as \"likes!\",\n       plays                                    as \"plays!\",\n       live_up_to_date                          as \"live_up_to_date!\",\n       rating                                   as \"rating?: CourseRating\",\n       blocked                                  as \"blocked!\",\n       curated                                  as \"curated!\",\n       is_premium                               as \"premium!\"\nfrom course\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\ninner join course_admin_data \"admin\" on admin.course_id = course.id\norder by ord asc\n    "
  },
  "74fbb4de26eb4eca3d53fa73b828c6e9d8d6c49f0be6242d6c886f4753a0ad85": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from resource where resource.id = $4 and resource.author_id <> $1)\n) as \"authed!\"\n"
  },
  "758bee136eaae799c8beef0e069597d0f67cfc590d5ecc6a4353d24b3474e39b": {
    "describe": {
      "columns": [
        {
          "name": "index: ImageTagIndex",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n        select index as \"index: ImageTagIndex\", display_name, created_at, updated_at from \"image_tag\"\n        order by index\n    "
  },
  "760185608bd03a9a30aba9100ecc18e170aed0b1008c5f51ad0c7c6f564b090e": {
    "describe": {
      "columns": [
        {
          "name": "user_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select user_id from user_auth_google where google_id = $1"
  },
  "7687758947cd67921247e6b7295c3b5645af11bd05dac4f804d301ab74bda572": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate playlist_data_module\nset index = index - 1\nwhere playlist_data_id = $1\n  and index > $2\n"
  },
  "7688e26b0446e803a2a6c7bbc0d3972a179f87536d93dd54453faf2dcb8ff404": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "live_id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id, live_id from playlist where id = $1\n"
  },
  "76f5138776b2544741d5bd7a20298dd4309fa398f23fac98b74873899a0f88b3": {
    "describe": {
      "columns": [
        {
          "name": "index: ImageTagIndex",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Text"
        ]
      }
    },
    "query": "\ninsert into image_tag (index, display_name)\nvalues ($1, $2)\nreturning index as \"index: ImageTagIndex\", display_name\n            "
  },
  "781c2b492b9b6468c1474113d2233a8b7dd904ae1a00547270aa4582b9cedd46": {
    "describe": {
      "columns": [
        {
          "name": "id!: SubscriptionId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Uuid",
          "Bool",
          "Int2",
          "Timestamptz",
          "Uuid",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\ninsert into subscription\n    (\n        stripe_subscription_id,\n        subscription_plan_id,\n        auto_renew,\n        status,\n        current_period_end,\n        account_id,\n        latest_invoice_id,\n        amount_due\n    )\nvalues\n    ($1, $2, $3, $4, $5, $6, $7, $8)\nreturning subscription_id as \"id!: SubscriptionId\"\n"
  },
  "78b48e52d416cf94b8daaf7ce4b6dcbb7bae4ba6c5f85bc4121c626f37c4df4e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate account\nset payment_method = $2,\nupdated_at = now()\nwhere account_id = $1"
  },
  "79bce8bafae973dfdb2932091ebeeed4f007ecf2849cc8c859d45a1fea68a251": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from jig_like\nwhere jig_id = $1 and user_id = $2\n    "
  },
  "7a3746ec8866c890e58cd4e3cd5a876235b1b9b116d9f5fbb7aab1187000c86f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "insert into web_media_upload (media_id, uploaded_at) values ($1, now())"
  },
  "7ab0e2ac1e5a462b4537363ac07b06867927cadda248c508494779634725ef49": {
    "describe": {
      "columns": [
        {
          "name": "subscription_id!: SubscriptionId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "stripe_subscription_id!: StripeSubscriptionId",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "subscription_plan_type!: PlanType",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "auto_renew",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "status!: SubscriptionStatus",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "current_period_end!: DateTime<Utc>",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "account_id!: AccountId",
          "ordinal": 6,
          "type_info": "Uuid"
        },
        {
          "name": "latest_invoice_id?: StripeInvoiceId",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "amount_due_in_cents?: AmountInCents",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "created_at!: DateTime<Utc>",
          "ordinal": 9,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at?: DateTime<Utc>",
          "ordinal": 10,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    subscription_id as \"subscription_id!: SubscriptionId\",\n    stripe_subscription_id as \"stripe_subscription_id!: StripeSubscriptionId\",\n    subscription_plan.plan_type as \"subscription_plan_type!: PlanType\",\n    auto_renew,\n    status as \"status!: SubscriptionStatus\",\n    current_period_end as \"current_period_end!: DateTime<Utc>\",\n    account_id as \"account_id!: AccountId\",\n    latest_invoice_id as \"latest_invoice_id?: StripeInvoiceId\",\n    amount_due as \"amount_due_in_cents?: AmountInCents\",\n    subscription.created_at as \"created_at!: DateTime<Utc>\",\n    subscription.updated_at as \"updated_at?: DateTime<Utc>\"\nfrom subscription\ninner join subscription_plan on subscription.subscription_plan_id = subscription_plan.plan_id\nwhere subscription_id = $1\n"
  },
  "7bd8eff40b8bb4649064764c88f6087f405f0727abb476003a960c379a8e3bc7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_module\nset index = index - 1\nwhere course_data_id = $1\n  and index > $2\n"
  },
  "7bf5a4f544cb4407f7ec650dc97dfd852353d332be1fdd164b560b245f283325": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data\nset privacy_level = coalesce($2, privacy_level),\n    updated_at = now()\nwhere id = $1\n  and $2 is distinct from privacy_level\n    "
  },
  "7c3feba53bc6a89c8e97b1928038ef8b335e2b61bf7029c80c33eb14361abdc8": {
    "describe": {
      "columns": [
        {
          "name": "id!",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "creator_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "creator_id!",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "image!",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "member_count!",
          "ordinal": 6,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        null,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n     select id                     as \"id!\",\n            display_name           as \"name!\",\n            description            as \"description!\",\n            (select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = circle.creator_id)                                                       as \"creator_name!\",\n            creator_id             as \"creator_id!\",\n            image                  as \"image!\",\n            member_count           as \"member_count!\"\n    from circle\nwhere (last_synced_at is null or\n       (updated_at is not null and last_synced_at < updated_at))\nlimit 100 for no key update skip locked;\n     "
  },
  "7c4651813f7f68830a9aa0e43d706e8dde3db6d3f6d131cf477cb03366baeeae": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nupdate resource_data\nset last_synced_at = now()\nwhere resource_data.id = any (select live_id from resource where resource.id = any ($1))\n"
  },
  "7c57b0d0965b041e39cb4a535e5f6a8a07c24f5479a692ab9cb4ac24cc292660": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        with cte as (\n            select jdar.id              as id,\n                   jdar.display_name,\n                   resource_type_id,\n                   resource_content,\n                   author_id,\n                   updated_at,\n                   created_at\n            from jig_data_additional_resource \"jdar\"\n            inner join jig on jig.live_id = jdar.jig_data_id\n            inner join jig_data on jig.live_id = jig_data.id\n            where author_id = $1 and jig.published_at is not null\n        ),\n        cte1 as (\n              select cdr.id              as id,\n                cdr.display_name,\n                resource_type_id,\n                resource_content,\n                author_id,\n                updated_at,\n                created_at\n          from playlist_data_resource \"cdr\"\n          inner join playlist on playlist.live_id = cdr.playlist_data_id\n          inner join playlist_data on playlist.live_id = playlist_data.id\n          where author_id = $1 and playlist.published_at is not null\n        )\n        select count(id) as \"count!\"\n        from unnest(array(\n        select\n        (array_agg(id))[1] as id\n        from (select id, updated_at, created_at from cte union all select id, updated_at, created_at from cte1)\n        resource\n        group by resource.updated_at, resource.created_at)) with ordinality t(id, ord)\n            "
  },
  "7cc4dd06d23bb79d9a2ea56c294ee6a42646c877a0bfbb0991bd6dd86db82f6e": {
    "describe": {
      "columns": [
        {
          "name": "published_at?",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect published_at  as \"published_at?\"\nfrom playlist\nwhere id = $1\n    "
  },
  "7cd0b406b9ccb8537a66683cea7c676f43ef172d3365b5e0dbeaba27d5aa978c": {
    "describe": {
      "columns": [
        {
          "name": "index!: i32",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "direction: TextDirection",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "display_score",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "track_assessments",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "drag_assist",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "expires_at: DateTime<Utc>",
          "ordinal": 5,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect index     as \"index!: i32\",\n       direction as \"direction: TextDirection\",\n       display_score,\n       track_assessments,\n       drag_assist,\n       expires_at as \"expires_at: DateTime<Utc>\"\nfrom jig_player_session\nwhere jig_id = $1\n"
  },
  "7d6295f3a9896ad81c1850a00cd713b0dd18fe04a7146e147162a76b9abf2246": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from playlist_like\nwhere playlist_id = $1 and user_id = $2\n    "
  },
  "7de388b21267e45c30f82ed5f18a433423d535b7e22a752bcd95c82fc050190e": {
    "describe": {
      "columns": [
        {
          "name": "max_index!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select count(*) - 1 as \"max_index!\" from jig_data_module where jig_data_id = $1"
  },
  "7deca8aceedc21c8478126952148898e0ea44b551a2e30ff191eec9720bf8a1a": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "UuidArray"
        ]
      }
    },
    "query": "\nselect count(distinct circle.id) as \"count!: i64\"\n    from circle\n    left join circle_member \"cm\" on cm.id = circle.id\n    where (creator_id = $1 or $1 is null)\n    and (cm.user_id = any($2) or $2 = array[]::uuid[])\n"
  },
  "7f4908d542be3a32a0d877287e49a87f69834904c30affc1dce2454cd0c8d4de": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data\nset privacy_level = coalesce($2, privacy_level)\nwhere id = $1\n  and $2 is distinct from privacy_level\n    "
  },
  "7fc1aef6a00aa47799aa01f4313417b431ea5230c52a4ceddcde7139305310b1": {
    "describe": {
      "columns": [
        {
          "name": "jig_id: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "direction: TextDirection",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "display_score",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "track_assessments",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "drag_assist",
          "ordinal": 4,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n        select jig_id as \"jig_id: JigId\", \n               direction as \"direction: TextDirection\", \n               display_score, \n               track_assessments, \n               drag_assist\n        from jig_player_session\n        where index=$1\n        "
  },
  "8002a58a2dfa494ffa463d70fe62cd1a6ca1a26e64f76cee1ca2a23ac58f802f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate course_data_resource\nset resource_content = $3\nwhere course_data_id = $1 and id = $2\n            "
  },
  "80031355410024fa4a4a4cf3ba23ffff1d4a2913bdce66a35dea18e67838c07b": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "languages_spoken?: Vec<String>",
          "ordinal": 6,
          "type_info": "TextArray"
        },
        {
          "name": "organization?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "persona?: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "location?",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "bio?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "jig_count?",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "resource_count?",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "course_count?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "playlist_count?",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "total_asset_count!",
          "ordinal": 15,
          "type_info": "Int8"
        },
        {
          "name": "circles!: Vec<CircleId>",
          "ordinal": 16,
          "type_info": "UuidArray"
        },
        {
          "name": "following!",
          "ordinal": 17,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\n        with following as (\n            select (array_agg(user_id))[1]\n            from user_follow\n            where follower_id = $1\n            group by followed_at\n            order by followed_at desc\n        ),\n        cte as (\n            select * from unnest(array(select following.array_agg from following)) with ordinality t(id, ord) order by ord\n        )\n        select  \"user\".id                     as \"id!: UserId\",\n                username               as \"username!\",\n                given_name             as \"given_name!\",\n                family_name            as \"family_name!\",\n                profile_image_id       as \"profile_image?: ImageId\",\n                badge                  as \"badge?: UserBadge\",\n                (select languages_spoken from user_profile where user_profile.user_id = \"user\".id and languages_spoken_public is true)      as \"languages_spoken?: Vec<String>\",\n                (select organization from user_profile where user_profile.user_id = \"user\".id and organization_public is true)  as \"organization?\",\n                (select persona from user_profile where user_profile.user_id = \"user\".id and persona_public is true)      as \"persona?: Vec<String>\",\n                (select location from user_profile where user_profile.user_id = \"user\".id and location_public is true)      as \"location?\",\n                (select bio from user_profile where user_profile.user_id = \"user\".id and bio_public is true)      as \"bio?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from jig where jig.author_id = \"user\".id and jig.published_at is not null)      as \"jig_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from resource where resource.author_id = \"user\".id and resource.published_at is not null)      as \"resource_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from course where course.author_id = \"user\".id and course.published_at is not null)      as \"course_count?\",\n                (select (case when count(*) > 0 THEN count(*) else null end) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null)      as \"playlist_count?\",\n                ((select count(*) from jig where jig.author_id = \"user\".id and jig.published_at is not null) + \n                (select count(*) from resource where resource.author_id = \"user\".id and resource.published_at is not null) + \n                (select count(*) from course where course.author_id = \"user\".id and course.published_at is not null) + \n                (select count(*) from playlist where playlist.author_id = \"user\".id and playlist.published_at is not null))      as \"total_asset_count!\",\n                array(select circle.id\n                    from circle_member bm\n                    left join circle on bm.id = circle.id\n                    where bm.user_id = \"user\".id or circle.creator_id = \"user\".id\n                ) as \"circles!: Vec<CircleId>\",\n                exists(select 1 from user_follow where follower_id = $4 and user_id = \"user\".id) as \"following!\"\n            from cte\n            inner join user_profile on cte.id = user_profile.user_id\n            inner join \"user\" on (cte.id = \"user\".id)\n            where ord > (1 * $2 * $3)\n            limit $3;\n            "
  },
  "802a16b43ef2c116e61773daabc6aa9b9a98da019cbc79c113ab5c170ee424f1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into course_data_resource(course_data_id, resource_type_id, display_name, resource_content)\nselect $2, resource_type_id, display_name, resource_content\nfrom course_data_resource\nwhere course_data_id = $1\n        "
  },
  "8088fa34227c64a6cc93a0c00dd61b847e661c3483858a951cc21c947ea1b83d": {
    "describe": {
      "columns": [
        {
          "name": "id!: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "description",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id                               as \"id!: ImageId\",\n       description\nfrom image_metadata\n     inner join image_upload on id = image_id\nwhere description <> '' and translated_description = '{}'\nand processed_at is not null\nand description_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 10 for no key update skip locked;\n "
  },
  "80e01d48b2deca10d1bbdd15cd319c204e235705bb642eaba2a05a7cf17c5036": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "size: ImageSize",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nselect id as \"id: ImageId\", size as \"size: ImageSize\"\nfrom user_image_library\n         join user_image_upload\n              on user_image_library.id = user_image_upload.image_id\nwhere processing_result is true\n  and user_id = $1\n  and (size is not distinct from $2 or $2 is null)\norder by created_at desc\n"
  },
  "80e114ec0b610550438d73280239678e249985eb19134c9917b39b34ead292c6": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select id as \"id: ImageId\" from user_image_library where id = $1"
  },
  "8185359b824a9a5d0089595ce6ff8113a4811e704a0a408799846bcffb921b8a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\nupdate course_admin_data\nset\n    rating = coalesce($2, rating),\n    blocked = coalesce($3, blocked),\n    curated = coalesce($4, curated),\n    is_premium = coalesce($5, is_premium)\nwhere course_id = $1\n"
  },
  "81d346d41686f94b2bbb1477d0e7e407d67e12bb2c2cccfb474c536ddd8f0eeb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_image_upload set processed_at = now(), processing_result = false where image_id = $1"
  },
  "82d3b6f6a8a0e2efe1185cccb068899bb2a86cd873c3b473318e4c2946de637f": {
    "describe": {
      "columns": [
        {
          "name": "size: ImageSize",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect size as \"size: ImageSize\"\nfrom image_metadata\ninner join image_upload on image_metadata.id = image_upload.image_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of image_upload\nfor share of image_metadata\nskip locked\n        "
  },
  "82fb52aa41cccc3af1b68d0266aa291db61b2b33adf95590022f86ac1a56f7fa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_pdf_upload set uploaded_at = now(), processing_result = null where pdf_id = $1"
  },
  "8313a67bf42c71861a5f4935f1cd53fda46e3da275e46cdaa266a785595b8cd1": {
    "describe": {
      "columns": [
        {
          "name": "id: AudioId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select id as \"id: AudioId\" from user_audio_library where id = $1"
  },
  "838aa3fb65358ab6a6f47c354379c4cc104b8331dbd98a387a7e5f78a9ed6c9d": {
    "describe": {
      "columns": [
        {
          "name": "id!: ResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource (creator_id, author_id, parents, live_id, draft_id)\nselect creator_id, $2, array_append(parents, $1), $3, $4\nfrom resource\nwhere id = $1\nreturning id as \"id!: ResourceId\"\n"
  },
  "8392b17a33409937fdd77e550c4358d969dce77da89c9c860102d892e931c8b7": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from playlist_data_resource \"jdar\" where playlist_data_id = $1\n    and jdar.id = $2) as \"exists!\"\n    "
  },
  "83a19967d79935450a0c984ec7c3cde0626f3347618e8dd1d84e883f73ae2898": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "update image_metadata set last_synced_at = now() where id = any($1)"
  },
  "84519449aef6978269fca20ecf493b800916711dc260fff2b2fdc537842fc947": {
    "describe": {
      "columns": [
        {
          "name": "id!",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index!",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "parent_id",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "user_scopes",
          "ordinal": 6,
          "type_info": "Int2Array"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "with recursive path(id, index, parent_id) as (\n    select id, ord, null::uuid\n    from category\n             inner join unnest(\n            $1::uuid[]) with ordinality t(id, ord)\n                        using (id)\n    union all\n    select c.id, c.index, p.id\n    from path p\n             inner join category c on (c.parent_id = p.id)\n)\nselect distinct id as \"id!\",\n       path.index::int2 as \"index!\",\n       path.parent_id,\n       name,\n       created_at,\n       updated_at,\n       user_scopes\n\nfrom path\n         inner join category using (id);\n"
  },
  "84a58a1a319e72ec21bac200fe7b99a22d2c26a7fb87636c2a8e35be0dd4e412": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset display_name = $2,\n    translated_name = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from display_name"
  },
  "84f05210fc0d761dda68090751705c6448814262eab6eae4c3c1fc04290cf357": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int2"
        ]
      }
    },
    "query": "insert into web_media_library (\"hash\", kind) values($1, $2) returning id"
  },
  "84f600b9b233e2cdbd31d894d15fec4a3065b679d7d1f0a3795a880ae48e956f": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n            select exists(select 1 from user_profile where user_id = $1 for update) as \"exists!\"\n                "
  },
  "85e966383548127dd992f5834be4f1bcc383e9324244d97643b175bf49b3c3e5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate circle\nset description = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description\n"
  },
  "860a67a1724506f0f6f18b69cdd30b00883dae8192be10dfe83c65ab9e6b6de2": {
    "describe": {
      "columns": [
        {
          "name": "subscription_id!: SubscriptionId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "stripe_subscription_id!: StripeSubscriptionId",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "subscription_plan_type!: PlanType",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "auto_renew",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "status!: SubscriptionStatus",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "current_period_end!: DateTime<Utc>",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "account_id!: AccountId",
          "ordinal": 6,
          "type_info": "Uuid"
        },
        {
          "name": "latest_invoice_id?: StripeInvoiceId",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "amount_due_in_cents?: AmountInCents",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "created_at!: DateTime<Utc>",
          "ordinal": 9,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at?: DateTime<Utc>",
          "ordinal": 10,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    subscription_id as \"subscription_id!: SubscriptionId\",\n    stripe_subscription_id as \"stripe_subscription_id!: StripeSubscriptionId\",\n    subscription_plan.plan_type as \"subscription_plan_type!: PlanType\",\n    auto_renew,\n    status as \"status!: SubscriptionStatus\",\n    current_period_end as \"current_period_end!: DateTime<Utc>\",\n    account_id as \"account_id!: AccountId\",\n    latest_invoice_id as \"latest_invoice_id?: StripeInvoiceId\",\n    amount_due as \"amount_due_in_cents?: AmountInCents\",\n    subscription.created_at as \"created_at!: DateTime<Utc>\",\n    subscription.updated_at as \"updated_at?: DateTime<Utc>\"\nfrom subscription\ninner join subscription_plan on subscription.subscription_plan_id = subscription_plan.plan_id\nwhere account_id = $1\norder by subscription.created_at desc\nlimit 1\n"
  },
  "86b018a6740d90547e7a7ee620398484bbb935a953433386139b520efc356188": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate course_data\nset updated_at = null\nwhere id = $1\n"
  },
  "86fa88d3517936fe0febf0daa3ffc738398005934a56b038e06393862b3f6799": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset language         = coalesce($2, language),\n    updated_at = now()\nwhere id = $1\n  and ($2::text is not null and $2 is distinct from language)\n"
  },
  "87c78754f010d2cd7d18cc1024071cfd6d00983eb0d01153d7b4ad368ba20f71": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array"
        ]
      }
    },
    "query": "\nselect exists(select 1 from user_scope where user_id = $1 and scope = any($2)) as \"authed!\"\n"
  },
  "8822478e75b35beabd746417cb6342dd1d40afcf99b22c48b13ff2c8aaef0437": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n insert into playlist_data_module (\"index\", playlist_data_id, kind, is_complete, contents)\n select \"index\", $2 as \"playlist_id\", kind, is_complete, contents\n from playlist_data_module\n where playlist_data_id = $1\n            "
  },
  "886cfa63188f2755838af80e5a1585835cd903063796b378903a0163c255f160": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "update jig set live_id = $1, published_at = now() where id = $2"
  },
  "88f0b8dffce417087a9ca7732ca5d41b13d686ab6388d7fa26a7b62e68ae613e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate resource_data_module\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere resource_data_id = $1 and index between $3 and $2\n"
  },
  "890c3176a91e4028feb349523c366a1ff87072efa205b953476e58a5358b3850": {
    "describe": {
      "columns": [
        {
          "name": "id: Uuid",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n        insert into jig_player_session_instance (session_index, ip_address, user_agent)\n        values ($1, $2, $3)\n        returning id as \"id: Uuid\"\n        "
  },
  "8948c9978692762a9d96fec41c4ca1b53f90eb2a6027e12d9e1e2a9c17626814": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from playlist_data where id = $1\n    "
  },
  "8954f7a250fa53e9bb3ee9e22c807b6013f08b2cf794be6faeac9b2d01cc25e3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom jig_data_additional_resource\nwhere jig_data_id = $1\n   or jig_data_id = $2\n    and id = $3\n        "
  },
  "89a0dbe7265e411f69b9ea0dc06cb43f7c4290b23e7053af2b1583ae97cdd4ff": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "kind: MediaKind",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\nselect id,\n       hash,\n       kind as \"kind: MediaKind\"\nfrom web_media_library\nwhere hash = $1\nfor update\n"
  },
  "8a19cbc88aee2108154de1e8e7844cf6e405ba7674c34467cc7e7dce18004ab7": {
    "describe": {
      "columns": [
        {
          "name": "author_id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "published_at?",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect author_id    \"author_id: UserId\",\n       published_at  as \"published_at?\"\nfrom jig\nwhere id = $1\n    "
  },
  "8a3550d023e9d70d2281f017159505a992cd1f3dc18f19e2b50e63071fc20ecf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update jig_data\n                            set translated_name = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "8b89d31edede1436cf8618bf8a9e27a5ef5e07d0958af9f6b7bab0ec7f2088cf": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom resource_data_module\nwhere resource_data_id = $1 and resource_data_module.id is not distinct from $2\nreturning index\n"
  },
  "8c211ea244871599cdc7856fbfa8f27374b1db6ce383f9e2eb9cfc0b4204bc84": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_module\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere course_data_id = $1 and index between $2 and $3\n"
  },
  "8c8ff3705f1da9ef590954f10bcd10d4381bb1822fde83203c64141539ebe454": {
    "describe": {
      "columns": [
        {
          "name": "id!: AdditionalResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\ninsert into resource_data_resource (resource_data_id, resource_type_id, resource_content, display_name)\nvalues ((select draft_id from resource where id = $1), $2, $3, $4)\nreturning id as \"id!: AdditionalResourceId\"\n        "
  },
  "8cf18b3ffa6d474dcaee69e7eaac1885c93a691f78c5861a621b2a140401f03b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "insert into resource (creator_id, author_id, live_id, draft_id) values ($1, $1, $2, $3) returning id"
  },
  "8d478d2f1cd6a9913d7e9ac7fe8b0165ee2a13e6653bcf898035907c4cb1ee41": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          {
            "Custom": {
              "kind": "Simple",
              "name": "citext"
            }
          }
        ]
      }
    },
    "query": "select user_id \"id!: UserId\" from user_auth_basic where user_id <> $1 and email = $2 for update"
  },
  "8d658cd5ec63c7f5be9a91857fbb7eed5355274f7d899f12d36b009f9a02fac8": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select exists(select 1 from school_name where citext_eq(name, $1::text::citext)) as \"exists!\""
  },
  "8d68bfd788c54445f0c9769db7b644b918ff5909ad934d27a9924b43a75a2c7d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate jig_data_additional_resource\nset display_name = coalesce($2, display_name)\nwhere id = $1 and $2 is distinct from display_name\n            "
  },
  "8d817d6384c10aa3eddcbe4b990c830b69970f782ad4ecdd5af9380994dfef0c": {
    "describe": {
      "columns": [
        {
          "name": "media_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "kind: MediaKind",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nselect media_id,\n       kind as \"kind: MediaKind\"\nfrom web_media_library_url\ninner join web_media_library on id = media_id\nwhere media_url = $1"
  },
  "8e4fca2315dd5ebe2e8d4189a5efb8951d2824577d2d864d55e40aebca67e775": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "update school_name set verified = $2 where school_name_id = $1"
  },
  "8e91b63b58e15b8c898573ffd729ea87968e8d2efa24ee4d855ac357c193087b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "insert into web_media_library_url (media_id, media_url) values ($1, $2) on conflict (media_id, media_url) do nothing"
  },
  "8f1e210ff17b689cd69ae47b2eb88e74893142db5328e8919768818648693bbd": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n        update user_auth_basic\n        set email = $3::text\n        where user_id = $1 and email = $2::text\n        "
  },
  "8f373a91b6dab0b7b89a03f5479b2ebe6dd2657bc06ebbe3aca37b1bac312f0e": {
    "describe": {
      "columns": [
        {
          "name": "name!",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nwith cte as (\n    insert into user_font\n    (user_id, name, index)\n    values ($1, $2, (select count(*) from user_font where user_id = $1)) returning name\n), names as (\n    select name\n    from user_font\n    where user_id = $1\n    order by index\n)\nselect name as \"name!\" from names\nunion all\nselect name as \"name!\" from cte\n        "
  },
  "8f877a0423612fd21c1e2ef57a1ac9d81ba17252f1083ce283cacd6c5382ea19": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate playlist_data_resource\nset display_name = coalesce($2, display_name)\nwhere id = $1 and $2 is distinct from display_name\n            "
  },
  "8ff3594259d04d0786b415f1e6577c3252ad2779bf0a9336d3ea985d54d78556": {
    "describe": {
      "columns": [
        {
          "name": "parent_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect parent_id, index from category where id = $1 for update\n    "
  },
  "9054ea277326d8d6776f9dcced96f1b6ce678e01058e5a571b4fd42045db4803": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n        update resource_curation_data\n        set additional_resources = $2\n        where resource_id = $1 and $2 is distinct from additional_resources\n                    "
  },
  "91637e92d0a2a1728284cf589acee2ecd5accdf8d7ca48a4f03635d2265357ba": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "translated_name!: Json<HashMap<String, String>>",
          "ordinal": 5,
          "type_info": "Jsonb"
        },
        {
          "name": "affiliations!",
          "ordinal": 6,
          "type_info": "UuidArray"
        },
        {
          "name": "affiliation_names!",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "resource_types!",
          "ordinal": 8,
          "type_info": "UuidArray"
        },
        {
          "name": "resource_type_names!",
          "ordinal": 9,
          "type_info": "TextArray"
        },
        {
          "name": "age_ranges!",
          "ordinal": 10,
          "type_info": "UuidArray"
        },
        {
          "name": "age_range_names!",
          "ordinal": 11,
          "type_info": "TextArray"
        },
        {
          "name": "categories!",
          "ordinal": 12,
          "type_info": "UuidArray"
        },
        {
          "name": "category_names!",
          "ordinal": 13,
          "type_info": "TextArray"
        },
        {
          "name": "items!",
          "ordinal": 14,
          "type_info": "UuidArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 15,
          "type_info": "Int2"
        },
        {
          "name": "author_id",
          "ordinal": 16,
          "type_info": "Uuid"
        },
        {
          "name": "other_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "author_name",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "likes!",
          "ordinal": 20,
          "type_info": "Int8"
        },
        {
          "name": "plays!",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "published_at",
          "ordinal": 22,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        true,
        false,
        false,
        null,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect playlist.id,\n       display_name                                                                                                 as \"name\",\n       language                                                                                                     as \"language!\",\n       description                                                                                                  as \"description!\",\n       translated_description                                                                                       as \"translated_description!: Json<HashMap<String, String>>\",\n       translated_name                                                                                              as \"translated_name!: Json<HashMap<String, String>>\",\n       array((select affiliation_id\n              from playlist_data_affiliation\n              where playlist_data_id = playlist_data.id))                                                                     as \"affiliations!\",\n       array((select affiliation.display_name\n              from affiliation\n                       inner join playlist_data_affiliation on affiliation.id = playlist_data_affiliation.affiliation_id\n              where playlist_data_affiliation.playlist_data_id = playlist_data.id))                                                as \"affiliation_names!\",\n        array((select resource_type_id\n                from playlist_data_resource\n                where playlist_data_id = playlist_data.id))                                                                     as \"resource_types!\",\n        array((select resource_type.display_name\n              from resource_type\n                        inner join playlist_data_resource on resource_type.id = playlist_data_resource.resource_type_id\n             where playlist_data_resource.playlist_data_id = playlist_data.id))                                         as \"resource_type_names!\",\n       array((select age_range_id\n              from playlist_data_age_range\n              where playlist_data_id = playlist_data.id))                                                                     as \"age_ranges!\",\n       array((select age_range.display_name\n              from age_range\n                       inner join playlist_data_age_range on age_range.id = playlist_data_age_range.age_range_id\n              where playlist_data_age_range.playlist_data_id = playlist_data.id))                                                  as \"age_range_names!\",\n       array((select category_id\n              from playlist_data_category\n              where playlist_data_id = playlist_data.id))                                                                     as \"categories!\",\n       array((select name\n              from category\n                       inner join playlist_data_category on category.id = playlist_data_category.category_id\n              where playlist_data_category.playlist_data_id = playlist_data.id))                                                   as \"category_names!\",\n        array(\n           (select jig_id\n            from playlist_data_jig\n            where playlist_data_jig.playlist_data_id = playlist_data.id)\n       )                                                                                                            as \"items!\",\n       privacy_level                                                                                                as \"privacy_level!: PrivacyLevel\",\n       author_id                                                                                                    as \"author_id\",\n       other_keywords                                                                                               as \"other_keywords!\",\n       translated_keywords                                                                                          as \"translated_keywords!\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = playlist.author_id)                                                       as \"author_name\",\n        likes                                                                                                       as \"likes!\",\n        plays                                                                                                       as \"plays!\",\n        published_at                                                                                                as \"published_at\"\nfrom playlist\n         inner join playlist_data on live_id = playlist_data.id\nwhere (last_synced_at is null and published_at is not null)\n    or (updated_at is not null and last_synced_at < updated_at)\n    or (published_at < now() is true and last_synced_at < published_at)\nlimit 100 for no key update skip locked;\n     "
  },
  "919b222454362d32275ccbe3582b3ac0e743b64d930d8c52c1170340834f3b76": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate course\nset plays = plays + 1\nwhere id = $1;\n            "
  },
  "93203f88defcf7ef2265df806686253b77ce9449daf2c1995e5063ef3446f836": {
    "describe": {
      "columns": [
        {
          "name": "user_id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "subscription_tier?: SubscriptionTier",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "is_admin!",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "verified!",
          "ordinal": 3,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    user_id as \"user_id!: UserId\",\n    subscription_tier as \"subscription_tier?: SubscriptionTier\",\n    admin as \"is_admin!\",\n    verified as \"verified!\"\nfrom user_account\nwhere account_id = $1\n"
  },
  "932508742699d5ebb198b02fc4f4bcaa9fd0e50c4206e6536279163533526826": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid",
          "Bool",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select array_agg(resource.id)\n            from resource\n                  inner join resource_data \"rd\" on (draft_id = rd.id or (live_id = rd.id and rd.last_synced_at is not null and published_at is not null))\n                  left join resource_admin_data \"admin\" on admin.resource_id = resource.id\n                  left join resource_data_resource \"rdr\" on rd.id = rdr.resource_data_id\n            where (rd.draft_or_live = $1 or $1 is null)\n                and (author_id = $2 or $2 is null)\n                and (blocked = $3 or $3 is null)\n                and (rd.privacy_level = any($4) or $4 = array[]::smallint[])\n                and (rdr.resource_type_id = any($5) or $5 = array[]::uuid[])\n            group by updated_at, created_at, resource.published_at, admin.resource_id, resource_id\n        )\n            select count(*) as \"count!\" from unnest(array((select cte.array_agg[1] from cte))) with ordinality t(id\n           , ord)\n        "
  },
  "93e782118504e721380274424d8150074764f95f3c0dd6bb4628921dc39a6083": {
    "describe": {
      "columns": [
        {
          "name": "user_id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect user_id  \"user_id: UserId\"\nfrom circle_member\nwhere id = $1\n"
  },
  "943425e13636b972656a1c40172ae281420bdd0c840c0bac045bc1b1cdbc6957": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate jig_data_additional_resource\nset resource_type_id = coalesce($2, resource_type_id)\nwhere id = $1 and $2 is distinct from resource_type_id\n            "
  },
  "94787b5dce35aed24200e890f493b5d6709dd4789ebf93490861e52282322806": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update user_asset_data \n        set course_count = course_count - 1,\n        total_asset_count = total_asset_count - 1\n        from course\n        where author_id = user_id and\n              published_at is not null and \n              id = $1"
  },
  "94f94e0299a6bd78c5912217c93df8c6f9e57aa11b2880c0c1bf43b12f4575ac": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into resource_data_module (resource_data_id, kind, contents, index, is_complete)\nvalues ($1, $2, $3, (select count(*) from resource_data_module where resource_data_id = $1), $4)\nreturning id, \"index\"\n"
  },
  "9532ae58ce1c2ac56c8ef079148fed881571b9efceb087e4723e2248ef13d82e": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "report_type!: ResourceReportType",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "name?",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "email?",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "creator_name!",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name                               as \"display_name!\",    \n       report_type                                as \"report_type!: ResourceReportType\",                  \n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = reporter_id\n        )                                       as \"name?\",\n        (\n            select email::text\n            from user_email\n            where user_email.user_id = reporter_id\n        )                                       as \"email?\",\n        (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = creator_id\n        )                                       as \"creator_name!\"\nfrom resource_report\n    left join resource on resource.id = resource_report.resource_id\n    left join resource_data on resource_data.id = resource.live_id\nwhere resource_report.id = $1 and resource_report.resource_id = $2\n"
  },
  "953d0fa5fb2961f7327376b216a09ced030652201c8a352ec5c56591d3b133c9": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "language!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String,String>>",
          "ordinal": 6,
          "type_info": "Jsonb"
        },
        {
          "name": "direction!: TextDirection",
          "ordinal": 7,
          "type_info": "Int2"
        },
        {
          "name": "display_score!",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "track_assessments!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "drag_assist!",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "theme!: ThemeId",
          "ordinal": 11,
          "type_info": "Int2"
        },
        {
          "name": "audio_background!: Option<AudioBackground>",
          "ordinal": 12,
          "type_info": "Int2"
        },
        {
          "name": "audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>",
          "ordinal": 13,
          "type_info": "RecordArray"
        },
        {
          "name": "audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>",
          "ordinal": 14,
          "type_info": "RecordArray"
        },
        {
          "name": "modules!: Vec<(ModuleId, ModuleKind, bool)>",
          "ordinal": 15,
          "type_info": "RecordArray"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 16,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 17,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 18,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 19,
          "type_info": "RecordArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 20,
          "type_info": "Int2"
        },
        {
          "name": "locked!",
          "ordinal": 21,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 22,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 23,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect id,\n       display_name                                                                  as \"display_name!\",\n       created_at                                                                    as \"created_at!\",\n       updated_at,\n       language                                                                      as \"language!\",\n       description                                                                   as \"description!\",\n       translated_description                                                        as \"translated_description!: Json<HashMap<String,String>>\",\n       direction                                                                     as \"direction!: TextDirection\",\n       display_score                                                                 as \"display_score!\",\n       track_assessments                                                             as \"track_assessments!\",\n       drag_assist                                                                   as \"drag_assist!\",\n       theme                                                                         as \"theme!: ThemeId\",\n       audio_background                                                              as \"audio_background!: Option<AudioBackground>\",\n       array(select row (unnest(audio_feedback_positive)))                           as \"audio_feedback_positive!: Vec<(AudioFeedbackPositive,)>\",\n       array(select row (unnest(audio_feedback_negative)))                           as \"audio_feedback_negative!: Vec<(AudioFeedbackNegative,)>\",\n       array(\n                select row (jig_data_module.id, kind, is_complete)\n                from jig_data_module\n                where jig_data_id = jig_data.id\n                order by \"index\"\n       )                                               as \"modules!: Vec<(ModuleId, ModuleKind, bool)>\",\n       array(select row (category_id)\n             from jig_data_category\n             where jig_data_id = jig_data.id)     as \"categories!: Vec<(CategoryId,)>\",\n       array(select row (affiliation_id)\n             from jig_data_affiliation\n             where jig_data_id = jig_data.id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n       array(select row (age_range_id)\n             from jig_data_age_range\n             where jig_data_id = jig_data.id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n       array(\n                select row (jdar.id, jdar.display_name, resource_type_id, resource_content)\n                from jig_data_additional_resource \"jdar\"\n                where jdar.jig_data_id = jig_data.id\n            )                                               as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n       privacy_level                              as \"privacy_level!: PrivacyLevel\",\n       locked                                     as \"locked!\",\n       other_keywords                             as \"other_keywords!\",\n       translated_keywords                        as \"translated_keywords!\"\nfrom jig_data\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\norder by ord asc\n"
  },
  "95e80749cb3ce69fdb52cbc6de1835b2e5770c6a350ad0a8d05541eb17c788aa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into course_data_category(course_data_id, category_id)\nselect $2, category_id\nfrom course_data_category\nwhere course_data_id = $1\n        "
  },
  "96569e9389d5fa1a63e58cd3f1b618d0edd302dab9da28604bd88276d2e344c1": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\n    insert into resource_report(resource_id, report_type, reporter_id)\n    values ($1, $2, $3)\n    returning id as \"id!: ReportId\"\n            "
  },
  "971f66394a0aceb254f52e65269558a61af8362b8119c59c15f5e9d82fa6aed7": {
    "describe": {
      "columns": [
        {
          "name": "id!: SchoolId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!: SchoolNameId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "location?: serde_json::Value",
          "ordinal": 2,
          "type_info": "Jsonb"
        },
        {
          "name": "email!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "website",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "organization_type",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "account_id!: AccountId",
          "ordinal": 8,
          "type_info": "Uuid"
        },
        {
          "name": "created_at",
          "ordinal": 9,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 10,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        null,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    school_id as \"id!: SchoolId\",\n    school_name_id as \"name!: SchoolNameId\",\n    location as \"location?: serde_json::Value\",\n    email::text as \"email!\",\n    description,\n    profile_image_id as \"profile_image?: ImageId\",\n    website,\n    organization_type,\n    account_id as \"account_id!: AccountId\",\n    created_at,\n    updated_at\nfrom school\nwhere account_id = $1\n"
  },
  "974e49b8fa518e9402ae2494147cd25953503851952b4ba97d635a2aeb5bd729": {
    "describe": {
      "columns": [
        {
          "name": "discard",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nwith delete as (\n        delete from user_color\n    where user_id = $1 and index = $2\n)\nselect 1 as discard\nfrom user_color\nwhere user_id = $1 and index > $2\nfor update\n"
  },
  "9756ed1443684d458b7a28a371aa5f4562dea68d71b181d1f8f8ea5c831c6866": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from jig_data where id = $1\n    "
  },
  "986130a83ea19f3782aa5e5c1c0a0a260c515e4aad15cc17d63aba20db572b2f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "delete from user_image_library where user_id = $1 and id = $2"
  },
  "98ca253af396be495aa7764cb4328e0760d0e0d3b6c970f5277b9b9885b68d98": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate resource\nset views = views + 1\nwhere id = $1;\n            "
  },
  "99fa41555d59f16f6c77672a3282c49bda64b93672deb98569dc677a6f987989": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect jdm.id      as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom jig_data_module \"jdm\"\ninner join jig on jig.draft_id = jdm.jig_data_id \nwhere jdm.id is not distinct from $1 \n"
  },
  "9a280ed5b2d646c563937e8cee1bae592f8d46322edf1769a7c89670088ac3d8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n insert into course_data_module (\"index\", course_data_id, kind, is_complete, contents)\n select \"index\", $2 as \"course_id\", kind, is_complete, contents\n from course_data_module\n where course_data_id = $1\n            "
  },
  "9b23b8bffa20014d6e11cc9e5b6ebae981c9c32804ee3550f6731daff43883cf": {
    "describe": {
      "columns": [
        {
          "name": "id!: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig (creator_id, author_id, parents, live_id, draft_id)\nselect creator_id, $2, array_append(parents, $1), $3, $4\nfrom jig\nwhere id = $1\nreturning id as \"id!: JigId\"\n"
  },
  "9b861485e86da04aaa69d4863da15659c65606df112805e833c162510b8aad6d": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1\nfrom user_audio_library\ninner join user_audio_upload on user_audio_library.id = user_audio_upload.audio_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of user_audio_upload\nfor share of user_audio_library\nskip locked\n) as \"exists!\"\n        "
  },
  "9baca0e0cc5e462bafb40e834a5c894d9f02dbb61ec75d81609cc32c946f5857": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from image_metadata where id = $1) as \"exists!\""
  },
  "9c218b9d4f2aece13ee546d440b47c2cfea61bcbaf89a725c4aaf1ae45494103": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Int2",
          "Bool"
        ]
      }
    },
    "query": "\nupdate playlist_data_module\nset contents    = coalesce($3, contents),\n    kind        = coalesce($4, kind),\n    is_complete = coalesce($5, is_complete)\nwhere playlist_data_id = $1\n  and index = $2\n"
  },
  "9c632b62857ab74beb4f39e4efa462a34909d2c126f2e643339615722c1ed907": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update resource_curation_data\n    set age_ranges = $2\n    where resource_id = $1 and $2 is distinct from age_ranges\n                "
  },
  "9d077a763e28dfcec303320f15227adb9d5786148dbfafe30b79c5b5e8ecc8d8": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1\nfrom user_pdf_library\ninner join user_pdf_upload on user_pdf_library.id = user_pdf_upload.pdf_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of user_pdf_upload\nfor share of user_pdf_library\nskip locked\n) as \"exists!\"\n        "
  },
  "9d166e1174a30bbd4c9c87544cf9c8403e5fb1dfc00fb312db75c795436f9ea3": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from user_audio_upload where audio_id = $1 for no key update) as \"exists!\""
  },
  "9d4752bf9a22f50e73e71079588c4d734ce6b91fe23b217f2f9aa22a16d2c363": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1\n    from jig_like\n    where\n        jig_id = $1\n        and user_id = $2\n) as \"exists!\"\n    "
  },
  "9e0df70165968be7b982a6f1964daab57e2d65d634115cabe4187f3d6f386a9f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "bundle_id",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "section",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "item_kind_id",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "english",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "hebrew",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "status: EntryStatus",
          "ordinal": 6,
          "type_info": "Int2"
        },
        {
          "name": "zeplin_reference",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "comments",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "in_app",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "in_element",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "in_mock",
          "ordinal": 11,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Bool"
        ]
      }
    },
    "query": "\nselect\n    id as \"id\",\n    bundle_id,\n    section,\n    item_kind_id,\n    english,\n    hebrew,\n    status as \"status: EntryStatus\",\n    zeplin_reference,\n    comments,\n    in_app, \n    in_element, \n    in_mock\nfrom locale_entry\nwhere $2 or bundle_id = any($1)\norder by id\n"
  },
  "9e3fc9a239cb6ad98628e2f2bf16be1ab3d6db751bb97bedaaf004500f6bcffc": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from global_animation_upload where animation_id = $1 for no key update) as \"exists!\""
  },
  "9f6642b7205866f10e69f564f8005e63ba0bb2bf5b88e6cb33c34f21120f6135": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nwith del_data as (\n    delete from playlist_data\n        where id is not distinct from $1 or id is not distinct from $2)\ndelete\nfrom playlist\nwhere id is not distinct from $3\n\n"
  },
  "9f99518316804bde4081b2b71e262da9148de6f4a164b674e4bdd130eb34a2ee": {
    "describe": {
      "columns": [
        {
          "name": "user_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nselect user_id\nfrom session\nwhere\n    token = $1 and\n    expires_at < now() is not true and\n    (scope_mask & $2) = $2 and\n    (impersonator_id is null or exists(select 1 from user_scope where user_scope.user_id = impersonator_id and user_scope.scope = $3))\n"
  },
  "9fc35349eacb6647e398e2756c8229e73c6b7fbef00988de47589866241487db": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update image_upload set processed_at = now(), processing_result = false where image_id = $1"
  },
  "a09368031834cc824df617fc4b42aa396c802bcbc5a0d4aac274413e8151c554": {
    "describe": {
      "columns": [
        {
          "name": "id!: ResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "creator_id: UserId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "author_id: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "live_id!",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "draft_id!",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "published_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "likes!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "views!",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "rating?: ResourceRating",
          "ordinal": 10,
          "type_info": "Int2"
        },
        {
          "name": "is_liked!",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "blocked!",
          "ordinal": 12,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 14,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        null,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        null,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Uuid"
        ]
      }
    },
    "query": "\nselect resource.id                                       as \"id!: ResourceId\",\n       creator_id                               as \"creator_id: UserId\",\n       author_id                                as \"author_id: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id) as \"author_name\",\n       live_id                                  as \"live_id!\",\n       draft_id                                 as \"draft_id!\",\n       published_at,\n       likes                                     as \"likes!\",\n       views                                    as \"views!\",\n       live_up_to_date                          as \"live_up_to_date!\",\n       rating                                   as \"rating?: ResourceRating\",\n       exists(select 1 from resource_like where resource_id = resource.id and user_id = $2) as \"is_liked!\",\n       blocked                                  as \"blocked!\",\n       curated                                  as \"curated!\",\n       is_premium                               as \"premium!\"\nfrom resource\ninner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\ninner join resource_admin_data \"admin\" on admin.resource_id = resource.id\norder by ord asc\n    "
  },
  "a0b6dfc42579a369fd18b1fa61cc645712648453847686ceadfc48ba8d05ee72": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n        update image_usage\n        set usage_reset_at = now()\n        where usage_reset_at < now() - interval '14 days'\n            "
  },
  "a0f81385b9713d0c508a0a5e6658939c1edf5149c2440bd55c07e788dfc2ed2a": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\ninsert into category (index, parent_id, name, user_scopes)\nVALUES((select count(*)::int2 from category where parent_id is not distinct from $1), $1, $2, array[]::smallint[])\nreturning index, id"
  },
  "a12553a0b07c167a0fecdcedfe7c0cf6f57f9a5b32ea13474d9ecb64815e8701": {
    "describe": {
      "columns": [
        {
          "name": "id!: CommId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_curation_comment (resource_id, comment, author_id)\nvalues ($1, $2, $3)\nreturning id as \"id!: CommId\"\n        "
  },
  "a16036b8f5f8431ae1f10fb2ce15ff302ff8667c9bf5d9a769905a3fad069498": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select exists(select 1 from image_upload where image_id = $1 for no key update) as \"exists!\""
  },
  "a293497e635f9a60d77be04ce0babce3020ea53f4a0e230ba5725914125e9120": {
    "describe": {
      "columns": [
        {
          "name": "id!: CategoryId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "user_scopes!",
          "ordinal": 4,
          "type_info": "Int2Array"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect id                                                                 as \"id!: CategoryId\",\n       name                                                               as \"name!\",\n       created_at                                                         as \"created_at!\",\n       updated_at,\n       user_scopes                                                        as \"user_scopes!\"\nfrom category\n         inner join unnest($1::uuid[]) with ordinality t(id, ord) USING (id)\norder by t.ord\n"
  },
  "a389e007d6a7514aff8da23c6bd72ca1c15b2cb0e776d951d3b4e0daaaed64bb": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n    select exists(select 1 from user_follow where user_id = $1 and follower_id = $2) as \"exists!\"\n        "
  },
  "a3bde339d064d75d29083a02d87bcf894b517dcf08b3283ad763c92dff9f3986": {
    "describe": {
      "columns": [
        {
          "name": "unit_id!: CourseUnitId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text",
          "Jsonb",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into course_data_unit (course_data_id, display_name, description, value, index)\nvalues ((select draft_id from course where id = $1), $2, $3, $4, (select count(*) from course_data_unit where course_data_id = $5))\nreturning unit_id as \"unit_id!: CourseUnitId\"\n        "
  },
  "a47ec16a3c259f084491206d5df2b882147cab13a2368d5dd342678f4eb643fd": {
    "describe": {
      "columns": [
        {
          "name": "id!: AdditionalResourceId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\ninsert into playlist_data_resource (playlist_data_id, resource_type_id, resource_content, display_name)\nvalues ((select draft_id from playlist where id = $1), $2, $3, $4)\nreturning id as \"id!: AdditionalResourceId\"\n        "
  },
  "a47efec2570cc4f4dc91ac5cbeeef6c184bfbd3ced34a523919ab35a9ec17fc0": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from course where course.id = $1\n"
  },
  "a4b699dfe38e3ea733cfaa637901fe2c191656b67dc0c969a3fbc578b917fdf2": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect index from course_data_module\nwhere course_data_id = $1 and course_data_module.id is not distinct from $2\n"
  },
  "a5609a881f8a1303a8c4eef9af25ebdf53a93d695ac5b7261615f1104d7d5dd5": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into course_data_module (course_data_id, kind, contents, index, is_complete)\nvalues ($1, $2, $3, (select count(*) from course_data_module where course_data_id = $1), $4)\nreturning id, \"index\"\n"
  },
  "a5b950a69c6f5d240bd48db3550afa9ae783df37c733ba0922e153eccf3c53c4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "update course set live_id = $1, published_at = now() where id = $2"
  },
  "a5d457b3be130af043e60270c08575203eac8fb2e53d899a3f576784963be348": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "description",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect jig_data.id ,\n       description\nfrom jig_data\ninner join jig on live_id = jig_data.id\nwhere description <> '' and translated_description = '{}'\nand published_at is not null\nand description_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 30 for no key update skip locked;\n "
  },
  "a5d7bd2b5b78d82c26f75b70d18ae63fb9e27031e080021e21c05cba75db48c9": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from jig join jig_data on jig.draft_id = jig_data.id where jig.id = $1 for update\n"
  },
  "a63ac1a1a79b480f537e93a26809448dd7cfe54bd82fc63e24626521da82f7c8": {
    "describe": {
      "columns": [
        {
          "name": "user_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int2"
        ]
      }
    },
    "query": "delete from session where token = $1 and (scope_mask & $2) = $2 returning user_id"
  },
  "a665288fc26ec7d8d82a6d2859310b10a0a1057effe65e67503e2e2f06d6a1c2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into jig_data_module (jig_data_id, kind, contents, index, is_complete)\nvalues ($1, $2, $3, (select count(*) from jig_data_module where jig_data_id = $1), $4)\nreturning id, \"index\"\n"
  },
  "a7597f668f530133865fe74a396da14ff51dcb53fc0537df95964ae98649ce1d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update jig_curation_data\n        set updated_at = now()\n        where jig_id = $1\n    "
  },
  "a85530d1d83a7f3cd3786da68f5b489fbddbf411d735cf114817e4417768520b": {
    "describe": {
      "columns": [
        {
          "name": "index: ImageTagIndex",
          "ordinal": 0,
          "type_info": "Int2"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect index as \"index: ImageTagIndex\", display_name from \"image_tag\"\norder by index\n            "
  },
  "a87ea4169f26518cbf7f88c1777bd15bbf72f938d6352567cd549bbe970db5f2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate user_color\nset index = index - 1\nwhere index > $2 and user_id = $1\n"
  },
  "a88c0449faed385cbc111b4e25068a8dd76a2118de2b5615e6315af23f8ce946": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update global_animation_upload set processed_at = now(), processing_result = false where animation_id = $1"
  },
  "a927e1b316983d98397a454a3198b08fcd37cb54056c0a5e57c18bbfcaa0985c": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from user_recent_image where user_id = $1 and image_id = $2) as \"exists!\"\n            "
  },
  "a95c82700ac3e26541f6804f22e6181a393178945fec8c8b4825f771bf0500d4": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from resource where resource.id = $1\n"
  },
  "a9780ea48594dbed705b4df8442e7c58416785833da7e04ef32aa8a3bfcd0e21": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from user_auth_basic where user_id = $1"
  },
  "a9996186c133f11e9d24a68f2f686c99b5f65fc97b4de1ea89411b16b333afb5": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "select exists(\n            select 1\n            from \"user_scope\"\n            where\n                user_id = $1 and\n                (scope = $2 or scope = $3)\n        ) as \"exists!\""
  },
  "a9a2e2c56d6286d0626f8b9faeacb6a9e6dbf5ca859e24d6c843d6b6f31447b1": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "size!: ImageSize",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "description",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "translated_name!: Json<HashMap<String, String>>",
          "ordinal": 5,
          "type_info": "Jsonb"
        },
        {
          "name": "affiliations!",
          "ordinal": 6,
          "type_info": "UuidArray"
        },
        {
          "name": "affiliation_names!",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "styles!",
          "ordinal": 8,
          "type_info": "UuidArray"
        },
        {
          "name": "style_names!",
          "ordinal": 9,
          "type_info": "TextArray"
        },
        {
          "name": "age_ranges!",
          "ordinal": 10,
          "type_info": "UuidArray"
        },
        {
          "name": "age_range_names!",
          "ordinal": 11,
          "type_info": "TextArray"
        },
        {
          "name": "categories!",
          "ordinal": 12,
          "type_info": "UuidArray"
        },
        {
          "name": "category_names!",
          "ordinal": 13,
          "type_info": "TextArray"
        },
        {
          "name": "tags!",
          "ordinal": 14,
          "type_info": "Int2Array"
        },
        {
          "name": "tag_names!",
          "ordinal": 15,
          "type_info": "TextArray"
        },
        {
          "name": "is_published!",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "is_premium",
          "ordinal": 17,
          "type_info": "Bool"
        },
        {
          "name": "usage!",
          "ordinal": 18,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id,\n       name,\n       size                                                                                     as \"size!: ImageSize\",\n       description,\n       translated_description                                                                   as \"translated_description!: Json<HashMap<String, String>>\",\n       translated_name                                                                          as \"translated_name!: Json<HashMap<String, String>>\",\n       array((select affiliation_id from image_affiliation where image_id = image_metadata.id)) as \"affiliations!\",\n       array((select affiliation.display_name\n              from affiliation\n                       inner join image_affiliation on affiliation.id = image_affiliation.affiliation_id\n              where image_affiliation.image_id = image_metadata.id))                            as \"affiliation_names!\",\n       array((select style_id from image_style where image_id = image_metadata.id))             as \"styles!\",\n       array((select style.display_name\n              from style\n                       inner join image_style on style.id = image_style.style_id\n              where image_style.image_id = image_metadata.id))                                  as \"style_names!\",\n       array((select age_range_id from image_age_range where image_id = image_metadata.id))     as \"age_ranges!\",\n       array((select age_range.display_name\n              from age_range\n                       inner join image_age_range on age_range.id = image_age_range.age_range_id\n              where image_age_range.image_id = image_metadata.id))                              as \"age_range_names!\",\n       array((select category_id from image_category where image_id = image_metadata.id))       as \"categories!\",\n       array((select name\n              from category\n                       inner join image_category on category.id = image_category.category_id\n              where image_category.image_id = image_metadata.id))                               as \"category_names!\",\n       array((select index\n              from image_tag\n                       inner join image_tag_join on image_tag.index = image_tag_join.tag_index\n              where image_tag_join.image_id = image_metadata.id))                               as \"tags!\",\n       array((select display_name\n              from image_tag\n                       inner join image_tag_join on image_tag.index = image_tag_join.tag_index\n              where image_tag_join.image_id = image_metadata.id))                               as \"tag_names!\",\n       (publish_at < now() is true)                                                             as \"is_published!\",\n       is_premium,\n       usage                                                                               as \"usage!\"\nfrom image_metadata\n         join image_upload on id = image_id\nwhere ((last_synced_at is null and publish_at is not null) or\n       (updated_at is not null and last_synced_at < updated_at) or\n       (publish_at < now() is true and last_synced_at < publish_at))\n  and processed_at is not null\nlimit 100 for no key update skip locked;\n     "
  },
  "a9c9ab56066ed834f9e018b8093c94bf453bf740b128100bc6cc4484cf2f3450": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data_category(playlist_data_id, category_id)\nselect $2, category_id\nfrom playlist_data_category\nwhere playlist_data_id = $1\n        "
  },
  "a9fa310e6fab6aa84b5500622f9a3e3b763ded6f006d11b500e90ae36d93bcab": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom resource_data_resource\nwhere resource_data_id = $1\n   or resource_data_id = $2\n    and id = $3\n        "
  },
  "aa1255f482d548b4a3e189b1705edea716c0b82bb09e554a5122b13983a08236": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect cdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom course_data_module \"cdm\"\ninner join course on course.draft_id = cdm.course_data_id\nwhere cdm.id is not distinct from $1\n"
  },
  "ab5d34d76960e465c8fad9c51b7c2e8526736b4ca8ef6da2cd4ceed53342b2c4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate circle\nset display_name = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from display_name\n"
  },
  "ab605fef6d23ea4a74e80999574296f7b4fce2ed0029455be3d6541ee379d329": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_data\n(display_name, created_at, updated_at, language, last_synced_at, description, theme, audio_background,\n audio_feedback_negative, audio_feedback_positive, direction, display_score, drag_assist, track_assessments, privacy_level, other_keywords, translated_keywords, translated_description)\nselect display_name,\n       created_at,\n       updated_at,\n       language,\n       last_synced_at,\n       description,\n       theme,\n       audio_background,\n       audio_feedback_negative,\n       audio_feedback_positive,\n       direction,\n       display_score,\n       drag_assist,\n       track_assessments,\n       privacy_level,\n       other_keywords,\n       translated_keywords,\n       translated_description::jsonb\nfrom jig_data\nwhere id = $1\nreturning id\n        "
  },
  "abe1970d7338a9ae697662a24a8f5ace0e64473edd7f378b7bdbdfc859590499": {
    "describe": {
      "columns": [
        {
          "name": "school_id!: SchoolId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Text",
          "Jsonb",
          "Text",
          "Text",
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into school\n    (school_name_id, account_id, email, location, description, website, organization_type, profile_image_id)\nvalues\n    ($1, $2, $3::text::citext, $4, $5, $6, $7, $8)\nreturning school_id as \"school_id!: SchoolId\"\n"
  },
  "abe8fdba2626df204b680c636918cef5fa26f18f628d7bced58edacdb26e0b63": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "language!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "translated_name!: Json<HashMap<String, String>>",
          "ordinal": 5,
          "type_info": "Jsonb"
        },
        {
          "name": "affiliations!",
          "ordinal": 6,
          "type_info": "UuidArray"
        },
        {
          "name": "affiliation_names!",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "resource_types!",
          "ordinal": 8,
          "type_info": "UuidArray"
        },
        {
          "name": "resource_type_names!",
          "ordinal": 9,
          "type_info": "TextArray"
        },
        {
          "name": "age_ranges!",
          "ordinal": 10,
          "type_info": "UuidArray"
        },
        {
          "name": "age_range_names!",
          "ordinal": 11,
          "type_info": "TextArray"
        },
        {
          "name": "categories!",
          "ordinal": 12,
          "type_info": "UuidArray"
        },
        {
          "name": "category_names!",
          "ordinal": 13,
          "type_info": "TextArray"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 14,
          "type_info": "Int2"
        },
        {
          "name": "author_id",
          "ordinal": 15,
          "type_info": "Uuid"
        },
        {
          "name": "locked!",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords!",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "author_name",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "rating",
          "ordinal": 20,
          "type_info": "Int2"
        },
        {
          "name": "likes!",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "plays!",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "published_at",
          "ordinal": 23,
          "type_info": "Timestamptz"
        },
        {
          "name": "blocked!",
          "ordinal": 24,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        false,
        true,
        false,
        false,
        false,
        null,
        true,
        false,
        null,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect jig.id,\n       display_name                                                                                                 as \"name\",\n       language                                                                                                     as \"language!\",\n       description                                                                                                  as \"description!\",\n       translated_description                                                                                       as \"translated_description!: Json<HashMap<String, String>>\",\n       translated_name                                                                                              as \"translated_name!: Json<HashMap<String, String>>\",\n       array((select affiliation_id\n              from jig_data_affiliation\n              where jig_data_id = jig_data.id))                                                                     as \"affiliations!\",\n       array((select affiliation.display_name\n              from affiliation\n                       inner join jig_data_affiliation on affiliation.id = jig_data_affiliation.affiliation_id\n              where jig_data_affiliation.jig_data_id = jig_data.id))                                                as \"affiliation_names!\",\n        array((select resource_type_id\n                from jig_data_additional_resource\n                where jig_data_id = jig_data.id))                                                                     as \"resource_types!\",\n        array((select resource_type.display_name\n              from resource_type\n                        inner join jig_data_additional_resource on resource_type.id = jig_data_additional_resource.resource_type_id\n             where jig_data_additional_resource.jig_data_id = jig_data.id))                                         as \"resource_type_names!\",\n       array((select age_range_id\n              from jig_data_age_range\n              where jig_data_id = jig_data.id))                                                                     as \"age_ranges!\",\n       array((select age_range.display_name\n              from age_range\n                       inner join jig_data_age_range on age_range.id = jig_data_age_range.age_range_id\n              where jig_data_age_range.jig_data_id = jig_data.id))                                                  as \"age_range_names!\",\n       array((select category_id\n              from jig_data_category\n              where jig_data_id = jig_data.id))                                                                     as \"categories!\",\n       array((select name\n              from category\n                       inner join jig_data_category on category.id = jig_data_category.category_id\n              where jig_data_category.jig_data_id = jig_data.id))                                                   as \"category_names!\",\n       privacy_level                                                                                                as \"privacy_level!: PrivacyLevel\",\n       author_id                                                                                                    as \"author_id\",\n       locked                                                                                                       as \"locked!\",\n       other_keywords                                                                                               as \"other_keywords!\",\n       translated_keywords                                                                                          as \"translated_keywords!\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = jig.author_id)                                                                 as \"author_name\",\n        rating                                                                                                      as \"rating\",\n        liked_count                                                                                                 as \"likes!\",\n        (\n            select play_count\n            from jig_play_count \"jpc\"\n            where jpc.jig_id = jig.id\n        )                                                                                                           as \"plays!\",\n        published_at                                                                                                as \"published_at\",\n        blocked                                                                                                     as \"blocked!\"\nfrom jig\n         inner join jig_data on live_id = jig_data.id\n         inner join jig_admin_data \"jad\" on jad.jig_id = jig.id\nwhere ((last_synced_at is null and published_at is not null)\n   or (updated_at is not null and last_synced_at < updated_at)\n    or (published_at < now() is true and last_synced_at < published_at))\nlimit 100 for no key update skip locked;\n     "
  },
  "acd90efacb1d27c44d05fbd12b9a105b0ff240fa7f8e55b4dbcf5a1aef39e936": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate resource_curation_data\nset categories = $2\nwhere resource_id = $1 and $2 is distinct from categories\n            "
  },
  "adad83fde1425f52663ff929d8ba0cddfb5c8ce75ebe0d255e17e35c5d938073": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "update circle set last_synced_at = now() where id = any($1)"
  },
  "ae4fdfb4902138c696e98472c65aecc4b8e91017229379f1acb1752a195c06da": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate resource_curation_data\nset language = $2\nwhere resource_id = $1 and $2 is distinct from language\n            "
  },
  "ae5545bbbe0f437642b37aab948961cc4119ff7728df55462e4d987792a45ded": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "password",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "has_profile!",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "has_verified_email!",
          "ordinal": 3,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nselect\n    user_id     as \"id!: UserId\",\n    password,\n    exists(select 1 from user_profile where user_id = user_auth_basic.user_id) as \"has_profile!\",\n    exists(select 1 from user_email where user_id = user_auth_basic.user_id) as \"has_verified_email!\"\nfrom user_auth_basic where email = $1::text\n"
  },
  "aec729ae876f9816b6a64f6527c6e8497140391a8bebb7a00fc5418cb07682a8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\ndelete from image_tag where index = $1\n            "
  },
  "af04e8c79a9f2ef77e5d628d046e86c668fea5b4f66283d15758cc54b4b07d1d": {
    "describe": {
      "columns": [
        {
          "name": "max_index!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select count(*) - 1 as \"max_index!\" from resource_data_module where resource_data_id = $1"
  },
  "af3f9689b4d0703f550fefdec2eb446b41cf04164ee51d5efb26fe105e65b737": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate resource_data_module\nset\n    index = case when index = $2 then $3 else index - 1 end,\n    updated_at = now()\nwhere resource_data_id = $1 and index between $2 and $3\n"
  },
  "af43a734c546244540f41fdccdd6e0a592e6017ed8921c9def6df76acac4f845": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from playlist join playlist_data on playlist.draft_id = playlist_data.id where playlist.id = $1 for update\n"
  },
  "af4aede4f0a20f0df53e6cecf425ee790f102a875441c7df241a9d2fa2171d20": {
    "describe": {
      "columns": [
        {
          "name": "id!: CommId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "resource_id!: ResourceId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "comment",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "author_id!: UserId",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "author_name!",
          "ordinal": 5,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id                                   as \"id!: CommId\",\n       resource_id                          as \"resource_id!: ResourceId\",                      \n       comment,\n       created_at,\n       author_id                            as \"author_id!: UserId\",\n       (\n            select given_name || ' '::text || family_name\n            from user_profile\n            where user_profile.user_id = author_id\n        )                                       as \"author_name!\"\nfrom resource_curation_comment\nwhere id = $1 and resource_id = $2\n"
  },
  "af80bdb7130c63ac120ca80150882fc17c3cc4d1c24c0f5bb8bde46e25f38bf3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data\nset draft_or_live = $2\nwhere id = $1\n            "
  },
  "af96597ea24d04671539a2ad8604d55751d1c6cdc9294993436a4d2047948800": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Bool",
          "Bool",
          "Bool",
          "Bool",
          "Bool",
          "Text",
          "Bool"
        ]
      }
    },
    "query": "\nupdate user_profile\nset username                = coalesce($2, username),\n    given_name              = coalesce($3, given_name),\n    family_name             = coalesce($4, family_name),\n    language_app            = coalesce($5, language_app),\n    language_emails         = coalesce($6, language_emails),\n    timezone                = coalesce($7, timezone),\n    opt_into_edu_resources  = coalesce($8, opt_into_edu_resources),\n    persona_public          = coalesce($9, persona_public),\n    organization_public     = coalesce($10, organization_public),\n    location_public         = coalesce($11, location_public),\n    languages_spoken_public = coalesce($12, languages_spoken_public),\n    bio                     = coalesce($13, bio),\n    bio_public              = coalesce($14, bio_public),\n    updated_at              = coalesce(now(), updated_at)\nwhere user_id = $1\n  and (($2::text is not null and $2 is distinct from username) or\n       ($3::text is not null and $3 is distinct from given_name) or\n       ($4::text is not null and $4 is distinct from family_name) or\n       ($5::text is not null and $5 is distinct from language_app) or\n       ($6::text is not null and $6 is distinct from language_emails) or\n       ($7::text is not null and $7 is distinct from timezone) or\n       ($8::bool is not null and $8 is distinct from opt_into_edu_resources) or\n       ($9::bool is not null and $9 is distinct from persona_public) or\n       ($10::bool is not null and $10 is distinct from organization_public) or\n       ($11::bool is not null and $11 is distinct from location_public) or\n       ($12::bool is not null and $12 is distinct from languages_spoken_public) or\n       ($13::text is not null and $13 is distinct from bio) or\n       ($14::bool is not null and $14 is distinct from bio_public)\n    )\n    "
  },
  "afa08df4c6807e3ba4ff6fb6e6814206e246e5749dee5d8c58c9b9b4bc6dd559": {
    "describe": {
      "columns": [
        {
          "name": "id!: SchoolNameId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "verified",
          "ordinal": 2,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect\n    school_name_id as \"id!: SchoolNameId\",\n    name::text as \"name!\",\n    verified\nfrom school_name\nwhere verified = true\n"
  },
  "afc0c3da7ee162b519656cd59196275505ff487acfdd9af9e7340358be94308d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate user_profile\nset organization = $2,\n    updated_at = now()\nwhere user_id = $1 and organization is distinct from $2"
  },
  "b0bfc855f6a2676e60a5f816af6607df0da1dc16860641e709978494b711bb0c": {
    "describe": {
      "columns": [
        {
          "name": "id!: SchoolNameId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "verified",
          "ordinal": 2,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        null,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    school_name_id as \"id!: SchoolNameId\",\n    name::text as \"name!\",\n    verified\nfrom school_name\nwhere school_name_id = $1\n"
  },
  "b1513ce8a836f80987c480701be8ab9dbc124d8a4556503a4ad2dc77b1ae50d2": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from course where id = $1\n"
  },
  "b153140eaccffcd332c14aa694bdfcfed7e9d4f043e4c25e39da6766f9595ac8": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data\n(display_name, created_at, updated_at, language, last_synced_at, description, privacy_level, other_keywords, translated_keywords, translated_description)\nselect display_name,\n       created_at,\n       updated_at,\n       language,\n       last_synced_at,\n       description,\n       privacy_level,\n       other_keywords,\n       translated_keywords,\n       translated_description::jsonb\nfrom resource_data\nwhere id = $1\nreturning id\n        "
  },
  "b16c8686d6dd580d8d45a8ec9174425b692c17ea1a9f0c19958d9f6b871639c3": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from course join course_data on course.draft_id = course_data.id where course.id = $1 for update\n"
  },
  "b17bcf3e2a8034de77c43c7aa649e0566fffcd75e75988362a2b79ba298bc803": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                                update image_metadata\n                                set translated_name = $2,\n                                    last_synced_at = null\n                                where id = $1\n                                "
  },
  "b1ef5826da246ece15a8b0705511d5eab37bb055d9ef4d2b8f773a955a812a6e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(playlist.id))[1]\n            from playlist_data \"cd\"\n                  inner join playlist on (draft_id = cd.id or (live_id = cd.id and cd.last_synced_at is not null and published_at is not null))\n                  left join playlist_data_resource \"resource\" on cd.id = resource.playlist_data_id\n            where (author_id = $1 or $1 is null)\n                and (cd.draft_or_live = $2 or $2 is null)\n                and (cd.privacy_level = any($3) or $3 = array[]::smallint[])\n                and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n            group by coalesce(updated_at, created_at)\n        )\n        select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id, ord)\n"
  },
  "b211b1f87835114b657632739dc3502a1de67cb2c971b0e53c4283b9086eaa9c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data_module\nset index = index - 1\nwhere jig_data_id = $1\n  and index > $2\n"
  },
  "b2ba80703b5345dce0e391c2a3beb9ca820f0cec46fe22eae807082b694ebf44": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect cdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom playlist_data_module \"cdm\"\ninner join playlist on playlist.draft_id = cdm.playlist_data_id\nwhere cdm.id is not distinct from $1\n"
  },
  "b2e961ba417e00528f9f4a6798dbf5b7a19d6f0fd1127ee6fb86d12a57dba2a5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "update playlist set live_id = $1, published_at = now() where id = $2"
  },
  "b3c2e2b76a81e199d0d1938fe8efaad1b2b083756c6d0706e9ae2235027c5846": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "email!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "language_emails",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at!",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 7,
          "type_info": "Int2"
        },
        {
          "name": "organization",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "location",
          "ordinal": 9,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        null,
        false,
        false,
        false,
        null,
        false,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\nwith cte as (\n    select (array_agg(\"user\".id))[1]\n    from \"user\"\n        left join user_profile on \"user\".id = user_profile.user_id\n        left join user_email using(user_id)\n    where (\"user\".id = $1 or $1 is null)\n    group by \"user\".created_at\n    order by \"user\".created_at desc\n),\ncte1 as (\n    select * from unnest(array(select cte.array_agg from cte)) with ordinality t(id\n   , ord) order by ord\n)\nselect  cte1.id                 as \"id!: UserId\",\n        username,\n        given_name,\n        family_name,\n        user_email.email::text as \"email!\",\n        language_emails,\n        user_email.created_at  as \"created_at!\",\n        badge                  as \"badge?: UserBadge\",\n        organization,\n        location\nfrom cte1\n        inner join user_profile on cte1.id = user_profile.user_id\n        inner join user_email using(user_id)\norder by ord asc\nlimit $3\noffset $2\n"
  },
  "b40588a017fc706bd7f319085c1707b0e0d0d206afea13f10f08f97bef7a8bd6": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nselect id as \"id!: UserId\"\nfrom \"user\"\njoin public.user_email ue on \"user\".id = ue.user_id\nwhere ue.email = $1::text::citext\n"
  },
  "b4338c9f23e8fad86b9bc505f8d366e02ca2c59cb4ac11255ef3d84e68daf79c": {
    "describe": {
      "columns": [
        {
          "name": "id!: CommentId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_curation_comment (jig_id, comment, author_id)\nvalues ($1, $2, $3)\nreturning id as \"id!: CommentId\"\n        "
  },
  "b4a3e18464bbe0ab39e4eb3484d137a0419c8bf112560a0cf4a26846d6e5e84b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "update resource set live_id = $1, published_at = now() where id = $2"
  },
  "b4f3858831e1685ac7bf663ebddc340a804437258fce9803fd079c084b38e470": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update global_animation_upload set processed_at = now(), processing_result = true where animation_id = $1"
  },
  "b571c608c4dd64c7c244942fec79d4de205bcc8e057ffd6c42c3a16a066252aa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data_category(resource_data_id, category_id)\nselect $2, category_id\nfrom resource_data_category\nwhere resource_data_id = $1\n        "
  },
  "b5949f227788bc5e36a22b50498a85a8be8cefd31395f4892b2e0932ba05dfaa": {
    "describe": {
      "columns": [
        {
          "name": "id: PdfId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "select id as \"id: PdfId\" from user_pdf_library order by created_at desc"
  },
  "b5b5628e87db20c9b5aa79d98c0e4d9d21d0ebd621ceb60fbf3145a72e09b89f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "insert into playlist (creator_id, author_id, live_id, draft_id) values ($1, $1, $2, $3) returning id"
  },
  "b67b8e012384bd9845c73795310576f24736ac1d450f542962286a1a57a15cc2": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\nselect count(*) as \"count!: i64\"\nfrom jig_data\ninner join jig on jig.live_id = jig_data.id\nwhere (privacy_level = coalesce($1, privacy_level))\n"
  },
  "b68185d8b146e97744d676a505d27d7261f8c15b9a7ad15f1406c8c0ccac046e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "TextArray"
        ]
      }
    },
    "query": "\nupdate user_profile\nset languages_spoken = $2,\n    updated_at = now()\nwhere user_id = $1 and languages_spoken is distinct from $2\n        "
  },
  "b681ea8e7e2d746829618ebe1a22657184660de435df1247c0eac96a768532c3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text"
        ]
      }
    },
    "query": "update algolia_index_settings set updated_at = now(), index_hash = $1 where index_name = $2"
  },
  "b6906cb50f7eea8476c665abc8040a27746c83a515e2dfbfab5017cea6c2aa4b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nupdate course_data\nset last_synced_at = now()\nwhere course_data.id = any (select live_id from course where course.id = any ($1))\n"
  },
  "b71200212dc730077b667ff292da9382aca3f4cf46f694f47042281fb3974b0f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate course_data\nset created_at = now()\nwhere id = $1\n"
  },
  "b71f8ef0e825494bd055842b9e0c7b7d2657fd4a1686cc590eec8202ac1b456a": {
    "describe": {
      "columns": [
        {
          "name": "max_index!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select count(*) - 1 as \"max_index!\" from course_data_module where course_data_id = $1"
  },
  "b78062af6ca0f65e7d8c982e9872068b8bcce0b59f417049ed8a4088fc033623": {
    "describe": {
      "columns": [
        {
          "name": "author_id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "published_at?",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect author_id    as \"author_id: UserId\",\n       published_at  as \"published_at?\"\nfrom playlist\nwhere id = $1\n    "
  },
  "b7d83cfd90ef7d1f18b8f070a52bccb1dc58d040a1e012e776c9cd47704efc27": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data\nset other_keywords = $2,\n    translated_keywords = (case when ($3::text is not null) then $3::text else (translated_keywords) end),\n    updated_at = now()\nwhere id = $1 and $2 is distinct from other_keywords"
  },
  "b8f36ca19ecaaea69115abb13d49495874b0fa3f43fff871e4a2e4077d1c1005": {
    "describe": {
      "columns": [
        {
          "name": "max_index!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select count(*) - 1 as \"max_index!\" from playlist_data_module where playlist_data_id = $1"
  },
  "b8f55d2caf7a5a901d48eb987344a37cf60c470df708632ddd456990f9b3adf8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n    update user_asset_data \n    set jig_count = jig_count - 1,\n        total_asset_count = total_asset_count - 1\n    from jig\n    where author_id = user_id and\n          published_at is not null and \n          id = $1"
  },
  "b9595a3827091a7520dd91e64bfd465a6521548631244e2f37ab78227ddc9863": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate user_profile\nset location = $2,\n    updated_at = now()\nwhere user_id = $1 and location is distinct from $2"
  },
  "ba59bad8a7aef54f3ee9054118d79bbb2be4ce0371960a979ea74feced71d8e2": {
    "describe": {
      "columns": [
        {
          "name": "name",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect name\nfrom user_font\nwhere user_id = $1\norder by index\n        "
  },
  "ba7c4c90935d487d2217c74eacc4362e96f8dc07c9f45e3741b4a46b3cf06155": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id from jig where jig.id = $1\n"
  },
  "bb4dfa1f6500b1004a0165718cf4c67cb5518fd374f30740a27fe094f73b9dc2": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(\n    select 1 from user_account where user_id = $1\n) as \"exists!\""
  },
  "bbcfd6f8aeb6f449b38651dad6ba30dc48c0b71bb2e9b9a3f96da322564f04ee": {
    "describe": {
      "columns": [
        {
          "name": "account_id: AccountId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select account_id as \"account_id: AccountId\" from account where stripe_customer_id = $1"
  },
  "bc43edfc2dcbeea691560c655987b29f3a3c919223487912f63be464fec522a4": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from user_profile where user_id = $1 for update) as \"exists!\"\n    "
  },
  "bc808937e95d4211c2b3a7d0812bfa56f1a57991ce04ee55f8a2418cc7a0ff5c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate image_metadata\nset name = $2,\n    translated_name = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from name"
  },
  "bcd3b0e27152dad44930b4d5f6c2b36fc756a0883b702197c0f54bde10ad7a74": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from circle where id = $1"
  },
  "bce089dbbf9be7f97f81c803dab60fa881956db7392aff47c6776fc4e4e4c4f8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate playlist_data_resource\nset resource_content = $3\nwhere playlist_data_id = $1 and id = $2\n            "
  },
  "bd95d3cd5b445f69b7e3ff5b998449809bc925172a749621b4712ae1c0f63804": {
    "describe": {
      "columns": [
        {
          "name": "circle_id: CircleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "image!: ImageId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "member_count",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "creator_id: UserId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "joined!",
          "ordinal": 8,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id            as \"circle_id: CircleId\",\n       display_name,\n       description,\n       image         as \"image!: ImageId\",\n       member_count,\n       creator_id    as \"creator_id: UserId\",\n       created_at,\n       updated_at,\n       exists(select 1 from circle_member where user_id = $2 and circle.id = circle_member.id) as \"joined!\"\nfrom circle\nwhere id = $1\n"
  },
  "bdfa6658d04ff049c61a416af645025bdd798b50d837f21ebd79ff76f71899e5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\n                            update resource_data\n                            set translated_description = $2,\n                                last_synced_at = null\n                            where id = $1\n                            "
  },
  "be69b38c978b947311449ac912fac411d6af3b618ed4e6091f8c85574a2ad6b7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data\nset language         = coalesce($2, language),\n    updated_at = now()\nwhere id = $1\n  and ($2::text is not null and $2 is distinct from language)\n"
  },
  "bf0a2a8d7b749e196a2257a8107e10bdfc0651fb139362a3e067efcc31b859c4": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n    select exists(select 1 from user_profile where lower(username) = lower($1)) as \"exists!\"\n        "
  },
  "bf8018c2bd265ba9c3761fff51a1910989dce917461d98255d13b87a04c36d11": {
    "describe": {
      "columns": [
        {
          "name": "id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "select user_id as \"id: UserId\" from user_profile where (user_id = $1 and $1 is not null) or (lower(username) = lower($2) and $2 is not null)"
  },
  "bfbb12cdb4d9350800a8ae63a7acf68d998dd90322e7c78c4747adc96284595d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate course_data\nset updated_at = now()\nfrom course\nwhere course.live_id = $1\n            "
  },
  "c0503b4756010f70f84bfc842758cc356568bcb7324b0c0a8454f49511300942": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "insert into user_scope (user_id, scope) values ($1, $2)"
  },
  "c0f2792d2f5f952c0f6becbd49c168ca420c910e6c93102ad8896704aecc39ac": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nupdate category\nset updated_at = now(),\n    index = index + 1\nwhere index >= $1 and index < $2 and parent_id is not distinct from $3\n                "
  },
  "c211fee6bb763f9b0139652fddc88ae42d57d807ef7a35d4d96db1544ebbe0b0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data_unit\nset index = index - 1\nwhere course_data_id = $1\n  and index > $2\n"
  },
  "c29935150e7aca28915515beed3d4ec9e393dc0065873b98ed8b6c17b77b8595": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect index from jig_data_module\nwhere jig_data_id = $1 and jig_data_module.id is not distinct from $2\n"
  },
  "c2ba8ddd6ad6e28535559d4452b655095914cb90514490dac438fc27b686bde5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data_module\nset\n    index = case when index = $2 then $3 else index + 1 end,\n    updated_at = now()\nwhere jig_data_id = $1 and index between $3 and $2\n"
  },
  "c340da8122545a5c5cffc7a9b7c8b03d6d7eed1e58ece1d6a462dbcebe030f10": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate jig_data\nset audio_background = $2,\nupdated_at = now()\nwhere id = $1 and $2 is distinct from audio_background\n            "
  },
  "c56be98e44e9e3b3a764796441393998484aa2c1a91dd6fca10b918a5c08848e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate resource_data\nset language         = coalesce($2, language),\n    updated_at = now()\nwhere id = $1\n  and ($2::text is not null and $2 is distinct from language)\n"
  },
  "c721caaa5f743b93aea15f85f31faf1a9eda5905e3a1469025d5c811a157ffdd": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        select count(user_id)  as \"count!: i64\"\n        from user_follow\n        where follower_id = $1\n            "
  },
  "c832b96167ee47673a382ca586fb5c2c67f777cb9e7a15c3e545afa7a0baca3d": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Bool"
        ]
      }
    },
    "query": "\ninsert into playlist_data_module (playlist_data_id, kind, contents, index, is_complete)\nvalues ($1, $2, $3, (select count(*) from playlist_data_module where playlist_data_id = $1), $4)\nreturning id, \"index\"\n"
  },
  "c87091f51c107a335c2fc82f47b88c2d2b30d021e0c0866f0e2a3a4c0210c1fd": {
    "describe": {
      "columns": [
        {
          "name": "id!: PlaylistId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist (creator_id, author_id, parents, live_id, draft_id)\nselect creator_id, $2, array_append(parents, $1), $3, $4\nfrom playlist\nwhere id = $1\nreturning id as \"id!: PlaylistId\"\n"
  },
  "c877be5757f8787c2da80469a4fc50641fb63358e6516d05c7159d9c8060ac52": {
    "describe": {
      "columns": [
        {
          "name": "kind: MediaKind",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect kind as \"kind: MediaKind\"\nfrom web_media_library\ninner join web_media_upload on web_media_library.id = web_media_upload.media_id\nwhere (id = $1 and uploaded_at is not null and processed_at >= uploaded_at is not true)\nfor no key update of web_media_upload\nfor share of web_media_library\nskip locked\n        "
  },
  "c8c5640fff36f98fd0b308f9f42b46d8cc3a5786365125e4a8f442b1df715d58": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect jdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom jig_data_module \"jdm\"\ninner join jig on jig.live_id = jdm.jig_data_id \nwhere jdm.id is not distinct from $1 \n"
  },
  "c965d419a0e46d766a5b22b3f96a9b56bcd985196ae9bf41d662c813ad189aa2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "description",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect resource_data.id,\n       description\nfrom resource_data\ninner join resource on live_id = resource_data.id\nwhere description <> '' and translated_description = '{}'\nand published_at is not null\nand description_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 10 for no key update skip locked;\n "
  },
  "c9871e12739d5ae1acd8e3026e00ed927a54f717d5e5cd12f78456b99a7aa23b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from session where user_id = $1"
  },
  "c991e500948ede0aba8f2a8bd11f43aa266ae6c986cf0fa9ce1c48f64d4dde5c": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from jig_data_additional_resource \"jdar\" where jig_data_id = $1\n    and jdar.id = $2) as \"exists!\"\n    "
  },
  "ca4a7a38a1d182c5f9aa095a9d75bb990b1020c15295591f59789a4b6946e9b5": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom course_data_unit\nwhere course_data_id = $1 and course_data_unit.unit_id is not distinct from $2\nreturning index\n"
  },
  "cb1eb42e7bcc8143deb3eec658b4a6d23278f99ce5bf5062886d0b18c1b2b1d3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Text"
        ]
      }
    },
    "query": "\nupdate user_font\n    set name = $3\n    where user_id = $1\n    and index = $2\n        "
  },
  "cbf72977b86cfd79cc5b3577cad8ce2b11394b783608e0f7d947e271bc1d2663": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from jig where id = $1\n) as \"authed!\"\n"
  },
  "cc1e8bf236f943c1b78344e1685ed3020de3e00960f7e59be6320ce9538904a3": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "parent_id",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "index",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "user_scopes",
          "ordinal": 6,
          "type_info": "Int2Array"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id,\n       parent_id,\n       name,\n       index,\n       created_at,\n       updated_at,\n       user_scopes\nfrom category\norder by index\n"
  },
  "cc430874ec63e9d9fb14fd7569cd7246c82087353d633acae71120e6920a2752": {
    "describe": {
      "columns": [
        {
          "name": "draft_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "live_id",
          "ordinal": 1,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect draft_id, live_id from resource where id = $1\n"
  },
  "ccaab803ac7df84e46c738158dc62311d906d6da57a8b1c701855e2a8bd4c2f8": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "parent_id",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "index",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "user_scopes",
          "ordinal": 6,
          "type_info": "Int2Array"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "with recursive links as\n(\n    select id,\n    parent_id\n    from category co\n    where id = any ($1::uuid[])\n    union all\n    select co.id,\n    co.parent_id\n    from category co\n    inner join links ct on (ct.parent_id = co.id)\n)\n\nselect\n    distinct id,\n    category.parent_id,\n    name,\n    category.index,\n    created_at,\n    updated_at,\n    user_scopes\nfrom category\ninner join links using (id);\n"
  },
  "cd49cef54182b43dd7943bcd51fd3c535f4a8ec0dae95cbc8ceb39f7f757fe02": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "delete from locale_entry where id = $1"
  },
  "ceee83d2943409d2f3a3e5a70b7ae3d423d39cf2b15af44565c6f4100abcfc31": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "insert into user_pdf_upload (pdf_id) values($1)"
  },
  "cf6147c4f87557fcf1cb7f07b255528dfbb62278f6c3f12827eca5d906091029": {
    "describe": {
      "columns": [
        {
          "name": "published_at?",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect published_at as \"published_at?\"\nfrom course\nwhere id = $1\n    "
  },
  "d1095b2f79187d6c7b251d3f39a7470e5e97b69c4424b638aec44fcb0f1d3deb": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from user_scope where user_id = $1) as \"authed!\"\n"
  },
  "d16dc0b03e356a1b25e245e63137f60bd8bbc9d47cbc2c77db671decb4a52139": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data_module (\"index\", resource_data_id, kind, is_complete, contents)\nselect \"index\", $2 as \"resource_id\", kind, is_complete, contents\nfrom resource_data_module\nwhere resource_data_id = $1\n        "
  },
  "d181ae906ae5b37c21ebd5aee19e97e2d69d725622067abea836cb4f7812fcd9": {
    "describe": {
      "columns": [
        {
          "name": "id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "email!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "given_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "family_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "is_oauth!: bool",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "languages_spoken!: Vec<String>",
          "ordinal": 7,
          "type_info": "TextArray"
        },
        {
          "name": "language_app",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "language_emails",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "bio",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 11,
          "type_info": "Int2"
        },
        {
          "name": "location_public",
          "ordinal": 12,
          "type_info": "Bool"
        },
        {
          "name": "languages_spoken_public",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "persona_public",
          "ordinal": 14,
          "type_info": "Bool"
        },
        {
          "name": "bio_public",
          "ordinal": 15,
          "type_info": "Bool"
        },
        {
          "name": "organization_public",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "opt_into_edu_resources",
          "ordinal": 17,
          "type_info": "Bool"
        },
        {
          "name": "over_18",
          "ordinal": 18,
          "type_info": "Bool"
        },
        {
          "name": "timezone",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 20,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 21,
          "type_info": "Timestamptz"
        },
        {
          "name": "organization",
          "ordinal": 22,
          "type_info": "Text"
        },
        {
          "name": "persona!: Vec<String>",
          "ordinal": 23,
          "type_info": "TextArray"
        },
        {
          "name": "location",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "scopes!: Vec<i16>",
          "ordinal": 25,
          "type_info": "Int2Array"
        },
        {
          "name": "subjects!: Vec<Uuid>",
          "ordinal": 26,
          "type_info": "UuidArray"
        },
        {
          "name": "affiliations!: Vec<Uuid>",
          "ordinal": 27,
          "type_info": "UuidArray"
        },
        {
          "name": "age_ranges!: Vec<Uuid>",
          "ordinal": 28,
          "type_info": "UuidArray"
        },
        {
          "name": "circles!: Vec<Uuid>",
          "ordinal": 29,
          "type_info": "UuidArray"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        false,
        false,
        true,
        null,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect\n    user_profile.user_id as \"id: UserId\",\n    username,\n    user_email.email::text as \"email!\",\n    given_name,\n    family_name,\n    profile_image_id       as \"profile_image?: ImageId\",\n    (select case when exists(select * from user_auth_google where user_id = $1) = true then 1 else 0 end)     as \"is_oauth!: bool\",\n    languages_spoken         as \"languages_spoken!: Vec<String>\",\n    language_app,\n    language_emails,\n    bio,\n    badge                  as \"badge?: UserBadge\",\n    location_public,\n    languages_spoken_public,\n    persona_public,\n    bio_public,\n    organization_public,\n    opt_into_edu_resources,\n    over_18,\n    timezone,\n    user_profile.created_at,\n    user_profile.updated_at,\n    organization,\n    persona                as \"persona!: Vec<String>\",\n    location,\n    array(select scope from user_scope where user_scope.user_id = \"user\".id) as \"scopes!: Vec<i16>\",\n    array(select subject_id from user_subject where user_subject.user_id = \"user\".id) as \"subjects!: Vec<Uuid>\",\n    array(select affiliation_id from user_affiliation where user_affiliation.user_id = \"user\".id) as \"affiliations!: Vec<Uuid>\",\n    array(select age_range_id from user_age_range where user_age_range.user_id = \"user\".id) as \"age_ranges!: Vec<Uuid>\",\n    array(select circle.id\n        from circle_member bm\n        inner join circle on bm.id = circle.id\n        where bm.user_id = \"user\".id or circle.creator_id = \"user\".id\n    ) as \"circles!: Vec<Uuid>\"\nfrom \"user\"\n    inner join user_profile on \"user\".id = user_profile.user_id\n    inner join user_email using(user_id)\nwhere id = $1"
  },
  "d1f58bf85a2a25f0b8de1b90427cc7313c57081dbc297a3237308bbdeeb46bd5": {
    "describe": {
      "columns": [
        {
          "name": "name: String",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n            select index_name as \"name: String\"\n            from algolia_index_settings\n            where (index_name = $1 and index_hash <> $2)\n            or (index_name = $3 and index_hash <> $4)\n            or (index_name = $5 and index_hash <> $6)\n            or (index_name = $7 and index_hash <> $8)\n            or (index_name = $9 and index_hash <> $10)\n            or (index_name = $11 and index_hash <> $12)\n            or (index_name = $13 and index_hash <> $14)\n            or (index_name = $15 and index_hash <> $16)\n            "
  },
  "d2d8130135ba5fcf56cd25706a0c1d4bceef2c7c3c984c7827ec29ee32106dc9": {
    "describe": {
      "columns": [
        {
          "name": "jig_id!: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "language",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "categories",
          "ordinal": 3,
          "type_info": "Bool"
        },
        {
          "name": "description",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "age_ranges",
          "ordinal": 5,
          "type_info": "Bool"
        },
        {
          "name": "affiliations",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "additional_resources",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "curation_status!: JigCurationStatus",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "comments!: Vec<(CommentId, JigId, String, DateTime<Utc>, Uuid)>",
          "ordinal": 9,
          "type_info": "RecordArray"
        },
        {
          "name": "reports!: Vec<(JigReport)>",
          "ordinal": 10,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect jig_id                               as \"jig_id!: JigId\",\n       display_name,\n       language,\n       categories,\n       description,\n       age_ranges,\n       affiliations,\n       additional_resources,\n       curation_status                          as \"curation_status!: JigCurationStatus\",\n       array(\n            select row (jcc.id, jcc.jig_id, comment, created_at, author_id)\n            from jig_curation_comment  \"jcc\"\n            where jcd.jig_id = jcc.jig_id\n            order by created_at desc\n       )                                                    as \"comments!: Vec<(CommentId, JigId, String, DateTime<Utc>, Uuid)>\",\n       array(\n           select row (jr.id, jr.jig_id, report_type, reporter_id,        \n                        (\n                        select given_name || ' '::text || family_name\n                        from user_profile\n                        where user_profile.user_id = reporter_id\n                        ),\n                        (\n                            select email::text\n                            from user_email\n                            where user_email.user_id = reporter_id\n                        ),\n                        created_at                                                                         \n            )\n           from jig_report \"jr\"\n           where jcd.jig_id = jr.jig_id\n           order by created_at desc\n       )                                                    as \"reports!: Vec<(JigReport)>\"\nfrom jig_curation_data \"jcd\"\nwhere jig_id = $1\n"
  },
  "d32e3899d7c0ea60a1ea6d88446a9b182763d14c95a5c7f3084d2928aa286406": {
    "describe": {
      "columns": [
        {
          "name": "color!",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4"
        ]
      }
    },
    "query": "\nwith cte as (\n    insert into user_color\n    (user_id, color, index)\n    values ($1, $2, (select count(*) from user_color where user_id = $1)) returning color\n), colors as (\n    select color\n    from user_color\n    where user_id = $1\n    order by index\n)\nselect color as \"color!\" from colors\nunion all\nselect color as \"color!\" from cte\n    "
  },
  "d51353640336b46516c6e2877ae86bb04e1f905c6893cc21275ec7ebc7ce7327": {
    "describe": {
      "columns": [
        {
          "name": "user_id: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "is_oauth!",
          "ordinal": 1,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select user_id \"user_id: UserId\",\n        (\n           select\n             case\n                when exists(select 1 from user_auth_basic where user_auth_basic.email = lower($1::text)) = true then false\n                else true\n            end\n        )     as \"is_oauth!\"\n         from user_email\n         where email = lower($1::text)"
  },
  "d51b240d6a40aeba5efb4c446faf7005df0e4168a5dc6a74fcb4387b3412197d": {
    "describe": {
      "columns": [
        {
          "name": "id!: ModuleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "body!",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "created_at!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at!",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "kind!: ModuleKind",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "is_complete!",
          "ordinal": 5,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect jdm.id          as \"id!: ModuleId\",\n       contents    as \"body!\",\n       created_at  as \"created_at!\",\n       updated_at  as \"updated_at!\",\n       kind        as \"kind!: ModuleKind\",\n       is_complete as \"is_complete!\"\nfrom resource_data_module \"jdm\"\ninner join resource on resource.live_id = jdm.resource_data_id \nwhere jdm.id is not distinct from $1 \n"
  },
  "d5c026267da896af0c0c7293c998721739470366af61ea52be42a80d7ab2512b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Bool"
        ]
      }
    },
    "query": "\nupdate school_name\nset\n    name = $2::text::citext,\n    verified = $3\nwhere school_name_id = $1\n"
  },
  "d5f7bcda61b8abb751cc560960d08dbc327b476eb3b9ee8b7e8acb627833fbce": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Jsonb"
        ]
      }
    },
    "query": "\nupdate jig_data_additional_resource\nset resource_content = $3\nwhere jig_data_id = $1 and id = $2\n            "
  },
  "d858f011cc789f16deeef69ada3ff99c22a5677d6ce467c7eae56a7b1a3c3ad3": {
    "describe": {
      "columns": [
        {
          "name": "id!: JigId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "creator_id: UserId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "author_id: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "live_id!",
          "ordinal": 4,
          "type_info": "Uuid"
        },
        {
          "name": "draft_id!",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "published_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "liked_count!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date!",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "play_count!",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "rating?: JigRating",
          "ordinal": 11,
          "type_info": "Int2"
        },
        {
          "name": "blocked!",
          "ordinal": 12,
          "type_info": "Bool"
        },
        {
          "name": "curated!",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "premium!",
          "ordinal": 14,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        null,
        false,
        false,
        true,
        false,
        false,
        null,
        null,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "UuidArray",
          "Uuid"
        ]
      }
    },
    "query": "\nselect jig.id                                       as \"id!: JigId\",\n       creator_id                               as \"creator_id: UserId\",\n       author_id                                as \"author_id: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id) as \"author_name\",\n       live_id                                  as \"live_id!\",\n       draft_id                                 as \"draft_id!\",\n       published_at,\n       liked_count                              as \"liked_count!\",\n       live_up_to_date                          as \"live_up_to_date!\",\n       exists(select 1 from jig_like where jig_id = jig.id and user_id = $2) as \"is_liked!\",\n       (\n           select play_count\n           from jig_play_count\n           where jig_play_count.jig_id = jig.id\n       )                                        as \"play_count!\",\n       rating                                   as \"rating?: JigRating\",\n       blocked                                  as \"blocked!\",\n       curated                                  as \"curated!\",\n       is_premium                               as \"premium!\"\nfrom jig\n         inner join unnest($1::uuid[])\n    with ordinality t(id, ord) using (id)\n    inner join jig_admin_data \"admin\" on admin.jig_id = jig.id\n    order by ord asc\n    "
  },
  "d935de8ff747d8408644105a61f99219aee129fd49e240cd3843d8374b02ea29": {
    "describe": {
      "columns": [
        {
          "name": "id!: ReportId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\n    insert into jig_report(jig_id, report_type, reporter_id)\n    values ($1, $2, $3)\n    returning id as \"id!: ReportId\"\n            "
  },
  "da4b6b8f69710da9da2230260c3beb54b04ae6ed40c4a4564a9badb4627798ad": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "given_name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "family_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "email!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "language_emails",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at!",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "badge?: UserBadge",
          "ordinal": 7,
          "type_info": "Int2"
        },
        {
          "name": "organization",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "location",
          "ordinal": 9,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        false,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      }
    },
    "query": "\nselect  \"user\".id                 as \"id!: UserId\",\n        username,\n        given_name,\n        family_name,\n        user_email.email::text as \"email!\",\n        language_emails,\n        user_email.created_at  as \"created_at!\",\n        badge                  as \"badge?: UserBadge\",\n        organization,\n        location\nfrom \"user\"\ninner join user_profile on \"user\".id = user_profile.user_id\ninner join user_email on user_email.user_id = \"user\".id\ninner join unnest($1::uuid[])\nwith ordinality t(id, ord) using (id)\n"
  },
  "da71f63b5d74908e2aa2d827e7edf83c8be492ca189957a6e7e9722dc200aa16": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom jig_data_module\nwhere jig_data_id = $1 and jig_data_module.id is not distinct from $2\nreturning index\n"
  },
  "dc0f8ce2a0d78a1639e321f0ac5b562d492b4b69d97d8d36ef78dbf4b52bc0d5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into resource_data_resource(resource_data_id, resource_type_id, display_name, resource_content)\nselect $2, resource_type_id, display_name, resource_content\nfrom resource_data_resource\nwhere resource_data_id = $1\n        "
  },
  "dc462c844af0d21cfc19babd04a01f7937c0b7d085ebedff4dfeb2733de028f5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\n            update jig_curation_data\n            set curation_status = $2\n            where jig_id = $1 and $2 is distinct from curation_status\n             "
  },
  "dc4b4b097aabd9a7d4c876a4e5441730da81acd043b23082f87fdfb6502b0b8f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Jsonb",
          "Int2",
          "Bool"
        ]
      }
    },
    "query": "\nupdate course_data_module\nset contents    = coalesce($3, contents),\n    kind        = coalesce($4, kind),\n    is_complete = coalesce($5, is_complete)\nwhere course_data_id = $1\n  and index = $2\n"
  },
  "dc5e4bfd066126930dad28ab25adeceabbe52d53236bb74f1ba26cf733147ffb": {
    "describe": {
      "columns": [
        {
          "name": "given_name",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect given_name\nfrom user_profile\nwhere user_id = $1\n        "
  },
  "dc706d22aba39f093437f08c0c711eb96c900e6ffad21fd9590f7784c2c8439b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n    insert into course_data_unit(course_data_id, display_name, description, index, value)\n    select $2, display_name, description, index, value\n    from course_data_unit\n    where course_data_id = $1\n            "
  },
  "dd600a259ed3681915cc195311f529237e69284d80b248b34483c9fece560cbc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2"
        ]
      }
    },
    "query": "\nupdate course_data\nset draft_or_live = $2\nwhere id = $1\n            "
  },
  "dd87acace48d19371be436174408184426e2b4a84ff01fb0465ea5298675fa7f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into course_data\n(display_name, created_at, updated_at, language, last_synced_at, description, privacy_level, other_keywords, translated_keywords, translated_description)\nselect display_name,\n       created_at,\n       updated_at,\n       language,\n       last_synced_at,\n       description,\n       privacy_level,\n       other_keywords,\n       translated_keywords,\n       translated_description::jsonb\nfrom course_data\nwhere id = $1\nreturning id\n        "
  },
  "df44d75bf1f59bebe2f20e0fbe5035c73a74b7daa14b4c842175485158d125a4": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from course where course.id = $4 and course.author_id <> $1)\n) as \"authed!\"\n"
  },
  "dfa4e19f8e7729cf10c517eebdff89a4c6944387c54d30b6d0b19def3245573d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate account\nset stripe_customer_id = $2,\nupdated_at = now()\nwhere account_id = $1"
  },
  "e111c665d5f62fe32a192e9f694d269fa825e0ead669f12d2a81d75a8e71a3ad": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from course_data_unit \"pddu\" where course_data_id = $1\n    and pddu.unit_id = $2) as \"exists!\"\n    "
  },
  "e135b43fef8a93d12695d5f5e9478fddff08b7236df1f62bf3307a3568714b37": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate playlist\nset plays = plays + 1\nwhere id = $1;\n            "
  },
  "e1ddde4b13a9162b65a46404219eb5196ec47f588195ad98149689d876bc7687": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "delete from circle_member where id = $1 and user_id = $2"
  },
  "e20b4591bf68cf81d48798fac81a372d0ea11690b17c245381645e6dbc49759e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset other_keywords = $2,\n    translated_keywords = (case when ($3::text is not null) then $3::text else (translated_keywords) end),\n    updated_at = now()\nwhere id = $1 and $2 is distinct from other_keywords"
  },
  "e2879fa5a3c098c9cbcea806e2d51168ba02e91b8f928a7bc2cd1f7f36872faa": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageStyleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nwith cte as (\n    select distinct style_id as id\n    from image_style\n)\nselect id as \"id: ImageStyleId\", display_name, created_at, updated_at\nfrom cte inner join style using (id)\norder by index\n        "
  },
  "e2b7e553e95da72d34812de664967b5239a39e7ee92d942b9d5ecb29b65000ac": {
    "describe": {
      "columns": [
        {
          "name": "id!: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect id                               as \"id!: ImageId\",\n       name\nfrom image_metadata\n     inner join image_upload on id = image_id\nwhere name <> '' and translated_name = '{}'\nand processed_at is not null\nand name_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 10 for no key update skip locked;\n "
  },
  "e31f3ada5672bd6323af502a70568c9604522f3cf73740185ec07e8c932fdfff": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom playlist_data_resource\nwhere playlist_data_id = $1\n   or playlist_data_id = $2\n    and id = $3\n        "
  },
  "e3da19bead8e176b5d8f316d19463ffd6c9afeabcef3bf22510c2d2902417213": {
    "describe": {
      "columns": [
        {
          "name": "account_id!: AccountId",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "insert into account (account_type) values ($1) returning account_id as \"account_id!: AccountId\""
  },
  "e3ee149ba3066bd72758e68b8e0437b9a3e3e1dfa3e8b1d940ae002d4b285805": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update image_upload set processed_at = now(), processing_result = true where image_id = $1"
  },
  "e418a5ae9bbbbfa0526d7d90d699ae1e4d2edb798ecf3434a1ed4529770c8faf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_image_upload set uploaded_at = now(), processing_result = null where image_id = $1"
  },
  "e476295de7bbf205eb11c2a4046c46c9352f30eb4c32bad44714b9053841fd58": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from \"user\" where id = $1"
  },
  "e507c5682a9424e1b2e0971c135667c3f9fc13894921c9a2690eb05c63f2ade1": {
    "describe": {
      "columns": [
        {
          "name": "id!: UserId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "username!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "email!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "given_name!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "family_name!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "language_app!",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "language_emails!",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "languages_spoken!: Vec<String>",
          "ordinal": 8,
          "type_info": "TextArray"
        },
        {
          "name": "created_at!",
          "ordinal": 9,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 10,
          "type_info": "Timestamptz"
        },
        {
          "name": "organization",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "persona!: Vec<String>",
          "ordinal": 12,
          "type_info": "TextArray"
        },
        {
          "name": "location",
          "ordinal": 13,
          "type_info": "Jsonb"
        },
        {
          "name": "opt_into_edu_resources",
          "ordinal": 14,
          "type_info": "Bool"
        },
        {
          "name": "subjects!: Vec<String>",
          "ordinal": 15,
          "type_info": "TextArray"
        },
        {
          "name": "affiliations!: Vec<String>",
          "ordinal": 16,
          "type_info": "TextArray"
        },
        {
          "name": "age_ranges!: Vec<String>",
          "ordinal": 17,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Timestamptz",
          "Timestamptz",
          "Text"
        ]
      }
    },
    "query": "\nselect user_id              as \"id!: UserId\",\n    username                as \"username!\",\n    user_email.email::text  as \"email!\",\n    given_name              as \"given_name!\",\n    family_name             as \"family_name!\",\n    profile_image_id        as \"profile_image?: ImageId\",\n    language_app            as \"language_app!\",\n    language_emails         as \"language_emails!\",\n    languages_spoken         as \"languages_spoken!: Vec<String>\",\n    user_profile.created_at as \"created_at!\",\n    user_profile.updated_at,\n    organization,\n    persona                 as \"persona!: Vec<String>\",\n    location,\n    opt_into_edu_resources,\n    array(\n        select subject.display_name\n        from subject\n        inner join user_subject on subject.subject_id = user_subject.subject_id\n        where user_subject.user_id = \"user\".id\n    ) as \"subjects!: Vec<String>\",\n    array(\n        select affiliation.display_name\n        from affiliation\n        inner join user_affiliation on affiliation.id = user_affiliation.affiliation_id\n        where user_affiliation.user_id = \"user\".id\n    ) as \"affiliations!: Vec<String>\",\n    array(\n        select age_range.display_name\n        from age_range\n        inner join user_age_range on age_range.id = user_age_range.age_range_id\n        where user_age_range.user_id = \"user\".id\n    ) as \"age_ranges!: Vec<String>\"\nfrom \"user\"\n    inner join user_profile on \"user\".id = user_profile.user_id\n    inner join user_email using(user_id)\nwhere\n    (\n        ($3 = 'either' or $3 = 'onlynew')\n        and (\n            user_profile.created_at >= case when $1::timestamptz is null then to_timestamp('-infinity') else $1 end\n            and user_profile.created_at < case when $2::timestamptz is null then to_timestamp('infinity') else $2 end\n        )\n    )\n    or (\n        ($3 = 'either' or $3 = 'onlyupdated')\n        and (\n            user_profile.updated_at >= case when $1::timestamptz is null then to_timestamp('-infinity') else $1 end\n            and user_profile.updated_at < case when $2::timestamptz is null then to_timestamp('infinity') else $2 end\n        )\n    )\n"
  },
  "e5407d7d6c0e2581f67595c4d454d0571f57d21bfce3f36e4108b8f2a1677c45": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(\n    select 1\n    from school_name\n    left join school using (school_name_id)\n    where\n        citext_eq(name, $1::text::citext)\n        and (school_id is null or school_id != $2)\n) as \"exists!\"\n"
  },
  "e57b7c587be57d904c82ee82ea48df2b8e02a38dd1a4c1c7fee015385d66d155": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_pdf_upload set processed_at = now(), processing_result = true where pdf_id = $1"
  },
  "e5ce362b6edf11adff2f1261b9b1c92c6bf77ae823f8dd2b58befb23761f0254": {
    "describe": {
      "columns": [
        {
          "name": "published_at?",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect published_at  as \"published_at?\"\nfrom jig\nwhere id = $1\n    "
  },
  "e74edb6ebdd2f203211741698a2fd3d230ea648df727d6b90d9d4b8c8a4d308d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate playlist_data\nset description = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description"
  },
  "e844fcef9a18fca356013f7762a171a6c6d4c0ffa6df42c1e231cf8619c331fc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\nupdate subscription\nset\n    amount_due = $2\nwhere stripe_subscription_id = $1\n"
  },
  "e8cac1c4331f80bc9b4d3eb878d98fb1650ea401e669cfa5154971251776f17d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\nupdate jig_data\nset other_keywords = $2,\n    translated_keywords = (case when ($3::text is not null) then $3::text else (translated_keywords) end),\n    updated_at = now()\nwhere id = $1 and $2 is distinct from other_keywords"
  },
  "e8fec175ddc4ddeddd0c96abae243f73084f78d122d03b820fbfe60f7e83a631": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "select exists(select 1 from user_auth_basic where email = $1::text) as \"exists!\""
  },
  "e928b59f8711545331fc24f9466d390eaf3f48a4d001ddb59b42d8f0cdd3df41": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray",
          "Bool"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(course.id))[1]\n            from course_data \"cd\"\n                  inner join course on (draft_id = cd.id or (live_id = cd.id and cd.last_synced_at is not null and published_at is not null))\n                  left join course_admin_data \"admin\" on admin.course_id = course.id\n                  left join course_data_resource \"resource\" on cd.id = resource.course_data_id\n            where (author_id = $1 or $1 is null)\n                and (cd.draft_or_live = $2 or $2 is null)\n                and (blocked = $5 or $5 is null)\n                and (cd.privacy_level = any($3) or $3 = array[]::smallint[])\n                and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n            group by coalesce(updated_at, created_at)\n        )\n        select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id, ord)\n"
  },
  "e954f7defa584c68864ea49acdc45c0d48e5f00176fe1c525537e906ff34adf4": {
    "describe": {
      "columns": [
        {
          "name": "id!: SchoolNameId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "school_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "verified!",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "school_id?: SchoolId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "location?: serde_json::Value",
          "ordinal": 4,
          "type_info": "Jsonb"
        },
        {
          "name": "email?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "profile_image?: ImageId",
          "ordinal": 7,
          "type_info": "Uuid"
        },
        {
          "name": "website",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "organization_type",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "account_id?: AccountId",
          "ordinal": 10,
          "type_info": "Uuid"
        },
        {
          "name": "created_at?",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 12,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        null,
        false,
        false,
        true,
        null,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bool",
          "Text",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\nselect\n    school_name_id as \"id!: SchoolNameId\",\n    school_name.name::text as \"school_name!\",\n    school_name.verified as \"verified!\",\n    school_id as \"school_id?: SchoolId\",\n    location as \"location?: serde_json::Value\",\n    email::text as \"email?\",\n    description,\n    profile_image_id as \"profile_image?: ImageId\",\n    website,\n    organization_type,\n    account_id as \"account_id?: AccountId\",\n    school.created_at as \"created_at?\",\n    school.updated_at\nfrom school_name\nleft join school using (school_name_id)\nwhere\n    (\n        (not $1::bool is null and (verified = $1::bool))\n        or $1::bool is null\n    )\n    and (\n        (not $2::text is null and (school_name.name like ('%' || $2::text || '%')::citext))\n        or $2::text is null\n    )\norder by school_name.name asc\nlimit $3\noffset $4\n"
  },
  "e9f633a72fa4fad7e52f4dd94aa9c6d1c2fd6b3f256fd21248297f254a5fbb79": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into playlist_data_resource(playlist_data_id, resource_type_id, display_name, resource_content)\nselect $2, resource_type_id, display_name, resource_content\nfrom playlist_data_resource\nwhere playlist_data_id = $1\n        "
  },
  "eb44eafd34c17ff3cd679cd11f53fcde64f4b6039ba2b1625dd2c78ca2494a2d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nupdate image_metadata \nset usage = usage + 1\nwhere id = $1\n"
  },
  "eb85238e221f20b3ad291f2bc9f6db1c632136d7e15358dbf5d0947c60a3aaa6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "insert into web_media_library_url (media_id, media_url) values ($1, $2)"
  },
  "ebf961d5777f0009b3717b25f4328a1d4e8230adc40135440a107f570062e9f6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data\nset description = $2,\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description"
  },
  "ec58db6f7417f0821c8a35acb1da226c7206c7614b4b5f9ab890693e0b9d9e41": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\n    update jig_curation_data\n    set affiliations = $2\n    where jig_id = $1 and $2 is distinct from affiliations\n                "
  },
  "ed07a0bf0907ac9428772e386480174ad64a167e00993a53743e1c3b9b33ce08": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ndelete from course_data where id = $1\n    "
  },
  "ed17e8e8feec42f6ee7cba5712c5ec72bca1adf012de6ad73296fecd017ab9f0": {
    "describe": {
      "columns": [
        {
          "name": "display_name!",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "resource_type_id!: ResourceTypeId",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "resource_content!",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect display_name         as \"display_name!\",\n       resource_type_id     as \"resource_type_id!: ResourceTypeId\",\n       resource_content    as \"resource_content!\"\nfrom course_data_resource \"pddr\"\nwhere course_data_id = $1\n  and pddr.id = $2\n        "
  },
  "ed33c777a7166f4c7db4075c12401c927fb2abd75eb4cd1c30be257e1844ed0d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Bool",
          "Bool",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_data\nset direction = $2,\n    display_score = $3,\n    track_assessments = $4,\n    drag_assist = $5,\n    updated_at = now()\nwhere id = $1 and\n    (($2 is distinct from direction) or\n     ($3 is distinct from display_score) or\n     ($4 is distinct from track_assessments) or\n     ($5 is distinct from drag_assist))\n            "
  },
  "edf5cb94b8714ed9995df1c7266d8837390d35250f6c20f3d65b73974e50da4b": {
    "describe": {
      "columns": [
        {
          "name": "would_cycle!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nwith recursive cte(parent_id) as (\nselect parent_id from category where id = $1\nunion all\nselect c.parent_id from category c inner join cte on cte.parent_id = c.id\n) select exists(select 1 from cte where parent_id = $2) as \"would_cycle!\"\n    "
  },
  "ee9b881b399e8381b78665a8cfceebbd2f6b7e761a4faca9d3cfc1e8ee88dfde": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(cd.id))[1]\n            from playlist_data \"cd\"\n                  inner join playlist on (draft_id = cd.id or (live_id = cd.id and cd.last_synced_at is not null and published_at is not null))\n                  left join playlist_data_resource \"resource\" on cd.id = resource.playlist_data_id\n            where (author_id = $1 or $1 is null)\n                and (cd.draft_or_live = $2 or $2 is null)\n                and (cd.privacy_level = any($3) or $3 = array[]::smallint[])\n                and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n            group by coalesce(updated_at, created_at)\n        )\n        select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id, ord)\n    "
  },
  "ef36b57ff9ff33f2f63f72fa62022287ac897ed5075fba89ba47a1356e0e2549": {
    "describe": {
      "columns": [
        {
          "name": "id: ImageId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "size: ImageSize",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect id as \"id: ImageId\", size as \"size: ImageSize\"\nfrom user_image_library\n         inner join user_image_upload\n                    on user_image_library.id = user_image_upload.image_id\nwhere user_id = $1\n  and id = $2\n  and processing_result is true\n        "
  },
  "ef78b2700e88dd0d062028332ee0acdcaa7cbe4b6bd68e0d460a44d020920686": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom playlist_data_module\nwhere playlist_data_id = $1 and playlist_data_module.id is not distinct from $2\nreturning index\n"
  },
  "efa9546c0e328baa75583f8c6130eaf639c4703182bfc71ddb1046932ce04f4d": {
    "describe": {
      "columns": [
        {
          "name": "circle_id!: CircleId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "image!: ImageId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "member_count!",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "creator_id!: UserId",
          "ordinal": 5,
          "type_info": "Uuid"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "joined!",
          "ordinal": 8,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "UuidArray",
          "Int4",
          "Int4",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\n        with cte1 as (\n            select (array_agg(circle.id))[1]\n            from circle\n            left join circle_member \"cm\" on cm.id = circle.id\n            where (creator_id = $1 or $1 is null)\n            and (cm.user_id = any($2) or $2 = array[]::uuid[])\n            group by circle.created_at, member_count\n            order by case when $5 = 0 then member_count\n                else extract(epoch from created_at)\n            end desc  \n        ),\n        cte2 as (\n            select * from unnest(array(select cte1.array_agg from cte1)) with ordinality t(id\n           , ord) order by ord\n        )\n        select  circle.id            as \"circle_id!: CircleId\",\n                display_name        as \"display_name!\",\n                description         as \"description!\",\n                image               as \"image!: ImageId\",\n                member_count        as \"member_count!\",\n                creator_id          as \"creator_id!: UserId\",\n                created_at,\n                updated_at,\n                exists(select 1 from circle_member where user_id = $6 and circle.id = circle_member.id) as \"joined!\"\n        from cte2\n            left join circle on cte2.id = circle.id\n            where ord > (1 * $3 * $4)\n            order by ord\n            limit $4\n            "
  },
  "efbe5d524f0f46fa04a069af5a4ab13b6165cd342afaedcd5ae7ae439693ad1b": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\ndelete\nfrom course_data_module\nwhere course_data_id = $1 and course_data_module.id is not distinct from $2\nreturning index\n"
  },
  "f0690dfd7a2dab5daf86dbcf154b3e886c65c43baeae1d4337e6541f78357bfe": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate jig_data\nset display_name = $2,\n    translated_name = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from display_name"
  },
  "f1bb0858fbc395bf5d1b2f4563bab9d4fbea0924387e66c745022f1a7fefb28c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\n        update user_asset_data \n        set jig_count = jig_count + 1,\n        total_asset_count = total_asset_count + 1\n        from jig\n        where author_id = user_id and\n              published_at is null and \n              id = $1"
  },
  "f1da735aa16c69d6e293d1c1b28cb018017f891f1e79dc7f3ed2a633880f493b": {
    "describe": {
      "columns": [
        {
          "name": "count!: i64",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\nselect count(*) as \"count!: i64\"\nfrom resource_data\ninner join resource on resource.live_id = resource_data.id\nwhere (privacy_level = coalesce($1, privacy_level))\n"
  },
  "f1f9426b18910da8cb3ce2a2a5a53dc9d892b4b5c4d71cb737e9052ab246de87": {
    "describe": {
      "columns": [
        {
          "name": "playlist_id: PlaylistId",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "display_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "creator_id?: UserId",
          "ordinal": 2,
          "type_info": "Uuid"
        },
        {
          "name": "author_id?: UserId",
          "ordinal": 3,
          "type_info": "Uuid"
        },
        {
          "name": "author_name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "published_at",
          "ordinal": 5,
          "type_info": "Timestamptz"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "privacy_level!: PrivacyLevel",
          "ordinal": 7,
          "type_info": "Int2"
        },
        {
          "name": "language",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "translated_description!: Json<HashMap<String, String>>",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "likes",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "plays",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "live_up_to_date",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "other_keywords",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "translated_keywords",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "rating?: PlaylistRating",
          "ordinal": 16,
          "type_info": "Int2"
        },
        {
          "name": "blocked",
          "ordinal": 17,
          "type_info": "Bool"
        },
        {
          "name": "curated",
          "ordinal": 18,
          "type_info": "Bool"
        },
        {
          "name": "premium",
          "ordinal": 19,
          "type_info": "Bool"
        },
        {
          "name": "is_liked!",
          "ordinal": 20,
          "type_info": "Bool"
        },
        {
          "name": "cover?: (ModuleId, ModuleKind, bool)",
          "ordinal": 21,
          "type_info": "Record"
        },
        {
          "name": "categories!: Vec<(CategoryId,)>",
          "ordinal": 22,
          "type_info": "RecordArray"
        },
        {
          "name": "affiliations!: Vec<(AffiliationId,)>",
          "ordinal": 23,
          "type_info": "RecordArray"
        },
        {
          "name": "age_ranges!: Vec<(AgeRangeId,)>",
          "ordinal": 24,
          "type_info": "RecordArray"
        },
        {
          "name": "additional_resource!: Vec<(AddId, String, TypeId, Value)>",
          "ordinal": 25,
          "type_info": "RecordArray"
        },
        {
          "name": "items!: Vec<(JigId,)>",
          "ordinal": 26,
          "type_info": "RecordArray"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        null,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int4",
          "Uuid"
        ]
      }
    },
    "query": "\nwith cte as (\n    select id      as \"playlist_id\",\n           creator_id,\n           author_id,\n           likes,\n           plays,\n           live_up_to_date,\n           case\n               when $2 = 0 then playlist.draft_id\n               when $2 = 1 then playlist.live_id\n               end as \"draft_or_live_id\",\n           published_at,\n           rating,\n           blocked,\n           curated,\n           is_premium\n    from playlist\n    left join playlist_admin_data \"admin\" on admin.playlist_id = playlist.id\n    where id = $1\n)\nselect cte.playlist_id                                          as \"playlist_id: PlaylistId\",\n       display_name,\n       creator_id                                             as \"creator_id?: UserId\",\n       author_id                                              as \"author_id?: UserId\",\n       (select given_name || ' '::text || family_name\n        from user_profile\n        where user_profile.user_id = author_id)            as \"author_name\",\n       published_at,\n       updated_at,\n       privacy_level                                       as \"privacy_level!: PrivacyLevel\",\n       language,\n       description,\n       translated_description                              as \"translated_description!: Json<HashMap<String, String>>\",\n       likes,\n       plays,\n       live_up_to_date,\n       other_keywords,\n       translated_keywords,\n       rating                                               as \"rating?: PlaylistRating\",\n       blocked                                              as \"blocked\",\n       curated,\n       is_premium                                           as \"premium\",\n       exists(select 1 from playlist_like where playlist_id = $1 and user_id = $3) as \"is_liked!\",\n       (\n            select row(playlist_data_module.id, kind, is_complete)\n            from playlist_data_module\n            where playlist_data_id = cte.draft_or_live_id and \"index\" = 0\n            order by \"index\"\n        )                                                   as \"cover?: (ModuleId, ModuleKind, bool)\",\n       array(select row (category_id)\n             from playlist_data_category\n             where playlist_data_id = cte.draft_or_live_id)     as \"categories!: Vec<(CategoryId,)>\",\n       array(select row (affiliation_id)\n             from playlist_data_affiliation\n             where playlist_data_id = cte.draft_or_live_id)     as \"affiliations!: Vec<(AffiliationId,)>\",\n       array(select row (age_range_id)\n             from playlist_data_age_range\n             where playlist_data_id = cte.draft_or_live_id)     as \"age_ranges!: Vec<(AgeRangeId,)>\",\n       array(\n             select row (jdar.id, jdar.display_name, resource_type_id, resource_content)\n             from playlist_data_resource \"jdar\"\n             where jdar.playlist_data_id = cte.draft_or_live_id\n       )                                                    as \"additional_resource!: Vec<(AddId, String, TypeId, Value)>\",\n       array(\n           select row(jig_id)\n           from playlist_data_jig\n           where playlist_data_id = cte.draft_or_live_id\n           order by \"index\"\n       )                                                     as \"items!: Vec<(JigId,)>\"\nfrom playlist_data\n         inner join cte on cte.draft_or_live_id = playlist_data.id\n"
  },
  "f206ec0b1c020544ecfa7646aa07af52f492ced75033641ff3022dacc33fb256": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int2",
          "Text"
        ]
      }
    },
    "query": "\ninsert into subscription_plan\n    (plan_type, price_id)\nvalues\n    ($1, $2)\non conflict (plan_type) do update\nset\n    plan_type = $1,\n    price_id = $2,\n    updated_at = now()\n"
  },
  "f303598d24c47932f42f3c9b1ff6f3c67a46cda7021fe00590f535f4e4ba698e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "description",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nselect playlist_data.id,\n       description\nfrom playlist_data\ninner join playlist on live_id = playlist_data.id\nwhere description <> ''\n      and translated_description = '{}'\n      and published_at is not null\n      and description_translate_status is null\norder by coalesce(updated_at, created_at) desc\nlimit 20 for no key update skip locked;\n "
  },
  "f4463110f5544135bbcbb441792aad08a4e34be4dbf2994b9525b6ae031e3b5f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Bool"
        ]
      }
    },
    "query": "\nupdate jig_curation_data\nset language = $2\nwhere jig_id = $1 and $2 is distinct from language\n            "
  },
  "f44dbbc4863f67ffd586f34738c278b962819e2ad19e919fc79c947bd3262b47": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from resource where id = $1\n) as \"authed!\"\n"
  },
  "f4d6632fc60abf4351be966b89b2490a3c3aef6f9f59d9ab4ea2eecc68d8cb72": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "update user_image_upload set processed_at = now(), processing_result = true where image_id = $1"
  },
  "f55a9526260e5ef3f00f611d56ba13b2636cae8ef21754125cf378f88582333b": {
    "describe": {
      "columns": [
        {
          "name": "exists!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists(select 1 from course_data_resource \"pddr\" where course_data_id = $1\n    and pddr.id = $2) as \"exists!\"\n    "
  },
  "f55ae7992e050d59eedfa6033cbe82f9e8f0dfc811b8f377fd1252c041b8cde0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate resource_data\nset description = $2,\n    translated_description = '{}',\n    updated_at = now()\nwhere id = $1 and $2 is distinct from description"
  },
  "f61ec8402e7de26b770073be29eee23dd893751db1fe71f55def28f880b32e3a": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "select id, display_name as name from locale_item_kind order by created_at"
  },
  "f627e289a9e43d3c1a06bd8dff5c9cc875d7fb7435bf8f7fef35685a211bd9d5": {
    "describe": {
      "columns": [
        {
          "name": "email",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\nselect email::text\nfrom user_email\nwhere user_id = $1\n        "
  },
  "f65d66fd5c93ed44d622034a55b8db3173b70a1800852d6de4064e60718a2cc5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      }
    },
    "query": "\nupdate course_data_resource\nset display_name = coalesce($2, display_name)\nwhere id = $1 and $2 is distinct from display_name\n            "
  },
  "f6dde82c950296987caaaa38d188ce472c5a2bc842f15c3b9642e8021df457be": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nwith del_data as (\n    delete from resource_data\n        where id is not distinct from $1 or id is not distinct from $2)\ndelete\nfrom resource\nwhere id is not distinct from $3\n\n"
  },
  "f885c76fd750edde5adbd1d426d6f92c91f336d5ffbbcee318e1f18cf31ca72b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Uuid"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "insert into \"user\" default values returning id"
  },
  "f90a07640ce81e04a63b25e118a991e3024756c008c760212a86b949b2dbd3b3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\nwith del_data as (\n    delete from jig_data\n        where id is not distinct from $1 or id is not distinct from $2)\ndelete\nfrom jig\nwhere id is not distinct from $3\n\n"
  },
  "f92c14a182afb0bbc54cf4ce449d6d5c124ef1f3b7c364178247a28a1371fe4c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "\ninsert into jig_play_count (jig_id, play_count)\nvalues ($1, 0)\n        "
  },
  "f974b082e368569d9fbd114820b6ee4a71a6de61f9eaff5eb323cb47f787a25d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      }
    },
    "query": "\n    insert into user_follow(user_id, follower_id, followed_at)\n    values($1, $2, now())\n            "
  },
  "f9df2f28e8d06b6804d2bfc813d94ee93bbebe9148b2d2f5e00857adfed502ed": {
    "describe": {
      "columns": [
        {
          "name": "email!",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "select email::text as \"email!\" from user_email where user_id = $1 for share"
  },
  "fa0618df77b4804b44e7fb37c2acb639e984cb48198f8fd56bca997c836f20fb": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2",
          "Int2Array",
          "UuidArray",
          "Bool"
        ]
      }
    },
    "query": "\n        with cte as (\n            select (array_agg(pdd.id))[1]\n            from course_data \"pdd\"\n                  inner join course on (draft_id = pdd.id or (live_id = pdd.id and pdd.last_synced_at is not null and published_at is not null))\n                  left join course_admin_data \"admin\" on admin.course_id = course.id\n                  left join course_data_resource \"resource\" on pdd.id = resource.course_data_id\n            where (author_id = $1 or $1 is null)\n                and (pdd.draft_or_live = $2 or $2 is null)\n                and (blocked = $5 or $5 is null)\n                and (pdd.privacy_level = any($3) or $3 = array[]::smallint[])\n                and (resource.resource_type_id = any($4) or $4 = array[]::uuid[])\n            group by coalesce(updated_at, created_at)\n        )\n        select count(*) as \"count!\" from unnest(array(select cte.array_agg from cte)) with ordinality t(id, ord)\n    "
  },
  "fb0694a24ef38695af5be6116509287bb61b1d70653bdc55100af75abbef275c": {
    "describe": {
      "columns": [
        {
          "name": "kind: MediaKind",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      }
    },
    "query": "delete from web_media_library where id = $1 returning kind as \"kind: MediaKind\""
  },
  "fb5c18dc3493191c5c189cedb4c68c4962209491d47dc76fbce7222a9ca79002": {
    "describe": {
      "columns": [
        {
          "name": "authed!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Int2Array",
          "Int2",
          "Uuid"
        ]
      }
    },
    "query": "\nselect exists (\n    select 1 from user_scope where user_id = $1 and scope = any($2)\n) or (\n    exists (select 1 from user_scope where user_id = $1 and scope = $3) and\n    not exists (select 1 from circle where id = $4 and circle.creator_id <> $1)\n) as \"authed!\"\n"
  },
  "fc0f59cf1b8df9ed1d7bbbf3562245dbb03836c0fab9640accc889ff4000f710": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Bool",
          "Jsonb",
          "Bool",
          "Text",
          "Bool",
          "Uuid",
          "Bool",
          "Text",
          "Bool",
          "Text"
        ]
      }
    },
    "query": "\nupdate school\n    set\n        email = coalesce($2::text::citext, email),\n        location = case when $3 then $4 else location end,\n        description = case when $5 then $6 else description end,\n        profile_image_id = case when $7 then $8 else profile_image_id end,\n        website = case when $9 then $10 else website end,\n        organization_type = case when $11 then $12 else organization_type end\nwhere school_id = $1\n"
  },
  "fc6bfe176017b10253bc42ecb9f96f0533953b10ea0ad57299f99a3a17bc6721": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Timestamptz"
        ]
      }
    },
    "query": "\nupdate image_metadata\nset publish_at = $2, updated_at = now()\nwhere id = $1 and $2 is distinct from publish_at"
  },
  "fd45af8ea769e72533e53da95568de7e0f54ad39ded9e90d56b4304cd9b3cc4f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Bool",
          "Int2",
          "Timestamptz",
          "Text"
        ]
      }
    },
    "query": "\nupdate subscription\nset\n    auto_renew = coalesce($2, auto_renew),\n    status = coalesce($3, status),\n    current_period_end = coalesce($4, current_period_end),\n    updated_at = now(),\n    latest_invoice_id = $5\nwhere stripe_subscription_id = $1\n"
  },
  "fe196f274875c6e293c5e80be927ac1e35c46f7699975b24a28b8cc1c136881d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Uuid",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\ninsert into user_auth_basic (user_id, email, password)\nvalues ($1, $2::text, $3)\n"
  }
}