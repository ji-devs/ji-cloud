###################
## Config        ##
###################

[config]
skip_core_tasks = true

[env]
DOCKER_BUILDKIT = "1"

###################
## Gcloud        ##
###################

[tasks.gcloud-configure-docker]
script_runner = "@shell"
script = ["gcloud auth configure-docker"]

[tasks.gcloud-configure-docker-gar]
script_runner = "@shell"
script = ["gcloud auth configure-docker --quiet us-east1-docker.pkg.dev"]

###################
## PAGES         ##
###################

#------Release-----------#
[tasks.release-pages]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-release-pages",
    "docker-publish-release-pages",
    "deploy-release-pages",
]}]

[tasks.docker-build-release-pages]
command = "docker"
args = ["build", "-f", "backend/pages/Dockerfile", "--target", "release", "-t", "gcr.io/ji-cloud/ji-cloud-pages:latest", "."]

[tasks.docker-publish-release-pages]
command = "docker"
args = ["push", "gcr.io/ji-cloud/ji-cloud-pages:latest"]

[tasks.deploy-release-pages]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-pages --project ji-cloud --region europe-west1 --image gcr.io/ji-cloud/ji-cloud-pages:latest --platform managed"]

#------Sandbox-----------#
[tasks.sandbox-pages]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-sandbox-pages",
    "docker-publish-sandbox-pages",
    "deploy-sandbox-pages",
]}]

[tasks.docker-build-sandbox-pages]
command = "docker"
args = ["build", "-f", "backend/pages/Dockerfile", "--target", "sandbox", "-t", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-pages-sandbox:latest", "."]

[tasks.docker-publish-sandbox-pages]
command = "docker"
args = ["push", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-pages-sandbox:latest"]

[tasks.deploy-sandbox-pages]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-pages-sandbox --project ji-cloud-developer-sandbox --region europe-west1 --image gcr.io/ji-cloud-developer-sandbox/ji-cloud-pages-sandbox:latest --platform managed"]

###################
## API           ##
###################

#------Release-----------#
[tasks.release-api]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-release-api",
    "docker-publish-release-api",
    "deploy-release-api",
]}]

[tasks.docker-build-release-api]
command = "docker"
args = ["build", "-f", "backend/api/Dockerfile", "--target", "release", "-t", "gcr.io/ji-cloud/ji-cloud-api:latest", "."]

[tasks.docker-publish-release-api]
command = "docker"
args = ["push", "gcr.io/ji-cloud/ji-cloud-api:latest"]

[tasks.deploy-release-api]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-api --project ji-cloud --region europe-west1 --image gcr.io/ji-cloud/ji-cloud-api:latest --platform managed"]

#------Sandbox-----------#
[tasks.sandbox-api]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-sandbox-api",
    "docker-publish-sandbox-api",
    "deploy-sandbox-api",
]}]

[tasks.sandbox-api-build-test]
run_task = [{name = [
    "gcloud-configure-docker-gar",
    "docker-build-api-builder",
    # "docker-pull-api-builder",
    # "docker-build-test-api",
    # "docker-publish-test-api",
]}]

[tasks.docker-build-api-builder]
command = "docker"
args = [
    "buildx",
    "build",
    "--file",
    "backend/api/Dockerfile",
    "--cache-from",
    "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-builder:latest",
    "--cache-to",
    "type=registry,mode=max,ref=us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-builder:latest",
    "--tag",
    "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-test:latest",
    "--push",
    "--target",
    "app",
    "."
]

# [tasks.docker-pull-api-builder]
# command = "docker"
# args = ["pull", "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-builder:latest"]

# [tasks.docker-build-test-api]
# command = "docker"
# args = [
#     "buildx",
#     "build",
#     "-f",
#     "backend/api/Dockerfile",
#     "--target",
#     "sandbox",
#     "--cache-from",
#     "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-builder:latest",
#     "-t",
#     "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-build:test",
#     "-o",
#     "type=registry",
#     "."
# ]

# [tasks.docker-publish-test-api]
# command = "docker"
# args = ["push", "us-east1-docker.pkg.dev/ji-cloud-developer-sandbox/docker/ji-cloud-api-build:test"]

[tasks.docker-build-sandbox-api]
command = "docker"
args = ["build", "-f", "backend/api/Dockerfile", "--target", "sandbox", "-t", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-sandbox:latest", "."]

[tasks.docker-publish-sandbox-api]
command = "docker"
args = ["push", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-sandbox:latest"]

[tasks.deploy-sandbox-api]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-api-sandbox --project ji-cloud-developer-sandbox --region europe-west1 --image gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-sandbox:latest --platform managed"]

#####################
## API MEDIA WATCH ##
#####################

#------Release-----------#
[tasks.release-api-media-watch]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-release-api-media-watch",
    "docker-publish-release-api-media-watch",
    "deploy-release-api-media-watch",
]}]

[tasks.docker-build-release-api-media-watch]
command = "docker"
args = ["build", "-f", "backend/api/Dockerfile", "--target", "release_media_watch", "-t", "gcr.io/ji-cloud/ji-cloud-api-media-watch:latest", "."]

[tasks.docker-publish-release-api-media-watch]
command = "docker"
args = ["push", "gcr.io/ji-cloud/ji-cloud-api-media-watch:latest"]

[tasks.deploy-release-api-media-watch]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-api-media-watch --project ji-cloud --region europe-west1 --image gcr.io/ji-cloud/ji-cloud-api-media-watch:latest --platform managed"]

#------Sandbox-----------#
[tasks.sandbox-api-media-watch]
run_task = [{name = [
    "gcloud-configure-docker",
    "docker-build-sandbox-api-media-watch",
    "docker-publish-sandbox-api-media-watch",
    "deploy-sandbox-api-media-watch",
]}]

[tasks.docker-build-sandbox-api-media-watch]
command = "docker"
args = ["build", "-f", "backend/api/Dockerfile", "--target", "sandbox_media_watch", "-t", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-media-watch-sandbox:latest", "."]

[tasks.docker-publish-sandbox-api-media-watch]
command = "docker"
args = ["push", "gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-media-watch-sandbox:latest"]

[tasks.deploy-sandbox-api-media-watch]
script_runner = "@shell"
script = ["gcloud run deploy ji-cloud-api-media-watch-sandbox --project ji-cloud-developer-sandbox --region europe-west1 --image gcr.io/ji-cloud-developer-sandbox/ji-cloud-api-media-watch-sandbox:latest --platform managed"]

###################
## Fastly Purge  ##
###################

#------Release-----------#
[tasks.release-fastly-purge]
run_task = [{name = [
    "deploy-release-fastly-purge-frontend",
    "deploy-release-fastly-purge-uploads",
    "deploy-release-fastly-purge-media",
]}]


[tasks.deploy-release-fastly-purge-frontend]
script_runner = "@shell"
script = ["gcloud functions deploy purgeFrontendRelease --project ji-cloud --trigger-resource ji-cloud-frontend-origin-eu-001 --region europe-west1 --source backend/fastly-purge --runtime nodejs10 --trigger-event google.storage.object.finalize"]

[tasks.deploy-release-fastly-purge-uploads]
script_runner = "@shell"
script = ["gcloud functions deploy purgeUploadsRelease --project ji-cloud --trigger-resource ji-cloud-uploads-origin-eu-001 --region europe-west1 --source backend/fastly-purge --runtime nodejs10 --trigger-event google.storage.object.finalize"]

# the media is on release project since it's used by release project (media.jicloud.org)
[tasks.deploy-release-fastly-purge-media]
script_runner = "@shell"
script = ["gcloud functions deploy purgeMedia --project ji-cloud --trigger-resource ji-cloud-media-origin-eu-001 --region europe-west1 --source backend/fastly-purge --runtime nodejs10 --trigger-event google.storage.object.finalize"]

#------Sandbox-----------#

[tasks.sandbox-fastly-purge]
run_task = [{name = [
	"deploy-sandbox-fastly-purge-frontend",
    "deploy-sandbox-fastly-purge-uploads",
]}]

[tasks.deploy-sandbox-fastly-purge-frontend]
script_runner = "@shell"
script = ["gcloud functions deploy purgeFrontendSandbox --project ji-cloud-developer-sandbox --trigger-resource ji-cloud-sandbox-frontend-origin-eu-001 --region europe-west1 --source backend/fastly-purge --runtime nodejs14 --trigger-event google.storage.object.finalize"]

[tasks.deploy-sandbox-fastly-purge-uploads]
script_runner = "@shell"
script = ["gcloud functions deploy purgeUploadsSandbox --project ji-cloud-developer-sandbox --trigger-resource ji-cloud-sandbox-uploads-origin-eu-001 --region europe-west1 --source backend/fastly-purge --runtime nodejs14 --trigger-event google.storage.object.finalize"]



###################
## Screenshot ##
###################

#------Release-----------#
[tasks.release-screenshot]
run_task = [{name = [
    "deploy-release-screenshot-save",
    "deploy-release-screenshot-show",
	"deploy-release-screenshot-queue",
]}]


[tasks.deploy-release-screenshot-save]
script_runner = "@shell"
script = ["gcloud functions deploy saveScreenshotRelease --trigger-http --project=ji-cloud --region=europe-west1 --source backend/screenshot --allow-unauthenticated --memory=1024MB --runtime=nodejs10 --timeout=540s"]

[tasks.deploy-release-screenshot-show]
script_runner = "@shell"
script = ["gcloud functions deploy showScreenshotRelease --trigger-http --project=ji-cloud --region=europe-west1 --source backend/screenshot --allow-unauthenticated --memory=1024MB --runtime=nodejs10 --timeout=540s"]

[tasks.deploy-release-screenshot-queue]
script_runner = "@shell"
script = ["gcloud functions deploy queueScreenshotRelease --trigger-http --project=ji-cloud --region=europe-west1 --source backend/screenshot --allow-unauthenticated --runtime=nodejs10"]

#------Sandbox-----------#

[tasks.sandbox-screenshot]
run_task = [{name = [
    "deploy-sandbox-screenshot-save",
    "deploy-sandbox-screenshot-show",
	"deploy-sandbox-screenshot-queue",
]}]


[tasks.deploy-sandbox-screenshot-save]
script_runner = "@shell"
script = ["gcloud functions deploy saveScreenshotSandbox --trigger-http --project=ji-cloud-developer-sandbox --region=europe-west1 --source backend/screenshot --allow-unauthenticated --memory=1024MB --runtime=nodejs10 --timeout=540s"]

[tasks.deploy-sandbox-screenshot-show]
script_runner = "@shell"
script = ["gcloud functions deploy showScreenshotSandbox --trigger-http --project=ji-cloud-developer-sandbox --region=europe-west1 --source backend/screenshot --allow-unauthenticated --memory=1024MB --runtime=nodejs10 --timeout=540s"]

[tasks.deploy-sandbox-screenshot-queue]
script_runner = "@shell"
script = ["gcloud functions deploy queueScreenshotSandbox --trigger-http --project=ji-cloud-developer-sandbox --region=europe-west1 --source backend/screenshot --allow-unauthenticated --runtime=nodejs10"]




